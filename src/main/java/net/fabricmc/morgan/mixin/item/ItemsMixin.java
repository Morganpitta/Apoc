package net.fabricmc.morgan.mixin.item;

import net.fabricmc.morgan.item.ItemSettingsExtension;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.block.entity.BannerPattern;
import net.minecraft.entity.EntityType;
import net.minecraft.entity.EquipmentSlot;
import net.minecraft.entity.vehicle.AbstractMinecartEntity;
import net.minecraft.fluid.Fluids;
import net.minecraft.item.*;
import net.minecraft.sound.SoundEvents;
import net.minecraft.util.DyeColor;
import net.minecraft.util.Identifier;
import net.minecraft.util.Rarity;
import net.minecraft.util.registry.Registry;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.Shadow;

import java.util.Optional;

@Mixin(Items.class)
public abstract class ItemsMixin {
    @Shadow public static Item AIR;
    @Shadow public static Item STONE;
    @Shadow public static Item GRANITE;
    @Shadow public static Item POLISHED_GRANITE;
    @Shadow public static Item DIORITE;
    @Shadow public static Item POLISHED_DIORITE;
    @Shadow public static Item ANDESITE;
    @Shadow public static Item POLISHED_ANDESITE;
    @Shadow public static Item DEEPSLATE;
    @Shadow public static Item COBBLED_DEEPSLATE;
    @Shadow public static Item POLISHED_DEEPSLATE;
    @Shadow public static Item CALCITE;
    @Shadow public static Item TUFF;
    @Shadow public static Item DRIPSTONE_BLOCK;
    @Shadow public static Item GRASS_BLOCK;
    @Shadow public static Item DIRT;
    @Shadow public static Item COARSE_DIRT;
    @Shadow public static Item PODZOL;
    @Shadow public static Item ROOTED_DIRT;
    @Shadow public static Item CRIMSON_NYLIUM;
    @Shadow public static Item WARPED_NYLIUM;
    @Shadow public static Item COBBLESTONE;
    @Shadow public static Item OAK_PLANKS;
    @Shadow public static Item SPRUCE_PLANKS;
    @Shadow public static Item BIRCH_PLANKS;
    @Shadow public static Item JUNGLE_PLANKS;
    @Shadow public static Item ACACIA_PLANKS;
    @Shadow public static Item DARK_OAK_PLANKS;
    @Shadow public static Item CRIMSON_PLANKS;
    @Shadow public static Item WARPED_PLANKS;
    @Shadow public static Item OAK_SAPLING;
    @Shadow public static Item SPRUCE_SAPLING;
    @Shadow public static Item BIRCH_SAPLING;
    @Shadow public static Item JUNGLE_SAPLING;
    @Shadow public static Item ACACIA_SAPLING;
    @Shadow public static Item DARK_OAK_SAPLING;
    @Shadow public static Item BEDROCK;
    @Shadow public static Item SAND;
    @Shadow public static Item RED_SAND;
    @Shadow public static Item GRAVEL;
    @Shadow public static Item COAL_ORE;
    @Shadow public static Item DEEPSLATE_COAL_ORE;
    @Shadow public static Item IRON_ORE;
    @Shadow public static Item DEEPSLATE_IRON_ORE;
    @Shadow public static Item COPPER_ORE;
    @Shadow public static Item DEEPSLATE_COPPER_ORE;
    @Shadow public static Item GOLD_ORE;
    @Shadow public static Item DEEPSLATE_GOLD_ORE;
    @Shadow public static Item REDSTONE_ORE;
    @Shadow public static Item DEEPSLATE_REDSTONE_ORE;
    @Shadow public static Item EMERALD_ORE;
    @Shadow public static Item DEEPSLATE_EMERALD_ORE;
    @Shadow public static Item LAPIS_ORE;
    @Shadow public static Item DEEPSLATE_LAPIS_ORE;
    @Shadow public static Item DIAMOND_ORE;
    @Shadow public static Item DEEPSLATE_DIAMOND_ORE;
    @Shadow public static Item NETHER_GOLD_ORE;
    @Shadow public static Item NETHER_QUARTZ_ORE;
    @Shadow public static Item ANCIENT_DEBRIS;
    @Shadow public static Item COAL_BLOCK;
    @Shadow public static Item RAW_IRON_BLOCK;
    @Shadow public static Item RAW_COPPER_BLOCK;
    @Shadow public static Item RAW_GOLD_BLOCK;
    @Shadow public static Item AMETHYST_BLOCK;
    @Shadow public static Item BUDDING_AMETHYST;
    @Shadow public static Item IRON_BLOCK;
    @Shadow public static Item COPPER_BLOCK;
    @Shadow public static Item GOLD_BLOCK;
    @Shadow public static Item DIAMOND_BLOCK;
    @Shadow public static Item NETHERITE_BLOCK;
    @Shadow public static Item EXPOSED_COPPER;
    @Shadow public static Item WEATHERED_COPPER;
    @Shadow public static Item OXIDIZED_COPPER;
    @Shadow public static Item CUT_COPPER;
    @Shadow public static Item EXPOSED_CUT_COPPER;
    @Shadow public static Item WEATHERED_CUT_COPPER;
    @Shadow public static Item OXIDIZED_CUT_COPPER;
    @Shadow public static Item CUT_COPPER_STAIRS;
    @Shadow public static Item EXPOSED_CUT_COPPER_STAIRS;
    @Shadow public static Item WEATHERED_CUT_COPPER_STAIRS;
    @Shadow public static Item OXIDIZED_CUT_COPPER_STAIRS;
    @Shadow public static Item CUT_COPPER_SLAB;
    @Shadow public static Item EXPOSED_CUT_COPPER_SLAB;
    @Shadow public static Item WEATHERED_CUT_COPPER_SLAB;
    @Shadow public static Item OXIDIZED_CUT_COPPER_SLAB;
    @Shadow public static Item WAXED_COPPER;
    @Shadow public static Item WAXED_EXPOSED_COPPER;
    @Shadow public static Item WAXED_WEATHERED_COPPER;
    @Shadow public static Item WAXED_OXIDIZED_COPPER;
    @Shadow public static Item WAXED_CUT_COPPER;
    @Shadow public static Item WAXED_EXPOSED_CUT_COPPER;
    @Shadow public static Item WAXED_WEATHERED_CUT_COPPER;
    @Shadow public static Item WAXED_OXIDIZED_CUT_COPPER;
    @Shadow public static Item WAXED_CUT_COPPER_STAIRS;
    @Shadow public static Item WAXED_EXPOSED_CUT_COPPER_STAIRS;
    @Shadow public static Item WAXED_WEATHERED_CUT_COPPER_STAIRS;
    @Shadow public static Item WAXED_OXIDIZED_CUT_COPPER_STAIRS;
    @Shadow public static Item WAXED_CUT_COPPER_SLAB;
    @Shadow public static Item WAXED_EXPOSED_CUT_COPPER_SLAB;
    @Shadow public static Item WAXED_WEATHERED_CUT_COPPER_SLAB;
    @Shadow public static Item WAXED_OXIDIZED_CUT_COPPER_SLAB;
    @Shadow public static Item OAK_LOG;
    @Shadow public static Item SPRUCE_LOG;
    @Shadow public static Item BIRCH_LOG;
    @Shadow public static Item JUNGLE_LOG;
    @Shadow public static Item ACACIA_LOG;
    @Shadow public static Item DARK_OAK_LOG;
    @Shadow public static Item CRIMSON_STEM;
    @Shadow public static Item WARPED_STEM;
    @Shadow public static Item STRIPPED_OAK_LOG;
    @Shadow public static Item STRIPPED_SPRUCE_LOG;
    @Shadow public static Item STRIPPED_BIRCH_LOG;
    @Shadow public static Item STRIPPED_JUNGLE_LOG;
    @Shadow public static Item STRIPPED_ACACIA_LOG;
    @Shadow public static Item STRIPPED_DARK_OAK_LOG;
    @Shadow public static Item STRIPPED_CRIMSON_STEM;
    @Shadow public static Item STRIPPED_WARPED_STEM;
    @Shadow public static Item STRIPPED_OAK_WOOD;
    @Shadow public static Item STRIPPED_SPRUCE_WOOD;
    @Shadow public static Item STRIPPED_BIRCH_WOOD;
    @Shadow public static Item STRIPPED_JUNGLE_WOOD;
    @Shadow public static Item STRIPPED_ACACIA_WOOD;
    @Shadow public static Item STRIPPED_DARK_OAK_WOOD;
    @Shadow public static Item STRIPPED_CRIMSON_HYPHAE;
    @Shadow public static Item STRIPPED_WARPED_HYPHAE;
    @Shadow public static Item OAK_WOOD;
    @Shadow public static Item SPRUCE_WOOD;
    @Shadow public static Item BIRCH_WOOD;
    @Shadow public static Item JUNGLE_WOOD;
    @Shadow public static Item ACACIA_WOOD;
    @Shadow public static Item DARK_OAK_WOOD;
    @Shadow public static Item CRIMSON_HYPHAE;
    @Shadow public static Item WARPED_HYPHAE;
    @Shadow public static Item OAK_LEAVES;
    @Shadow public static Item SPRUCE_LEAVES;
    @Shadow public static Item BIRCH_LEAVES;
    @Shadow public static Item JUNGLE_LEAVES;
    @Shadow public static Item ACACIA_LEAVES;
    @Shadow public static Item DARK_OAK_LEAVES;
    @Shadow public static Item AZALEA_LEAVES;
    @Shadow public static Item AZALEA_LEAVES_FLOWERS;
    @Shadow public static Item SPONGE;
    @Shadow public static Item WET_SPONGE;
    @Shadow public static Item GLASS;
    @Shadow public static Item TINTED_GLASS;
    @Shadow public static Item LAPIS_BLOCK;
    @Shadow public static Item SANDSTONE;
    @Shadow public static Item CHISELED_SANDSTONE;
    @Shadow public static Item CUT_SANDSTONE;
    @Shadow public static Item COBWEB;
    @Shadow public static Item GRASS;
    @Shadow public static Item FERN;
    @Shadow public static Item AZALEA;
    @Shadow public static Item FLOWERING_AZALEA;
    @Shadow public static Item DEAD_BUSH;
    @Shadow public static Item SEAGRASS;
    @Shadow public static Item SEA_PICKLE;
    @Shadow public static Item WHITE_WOOL;
    @Shadow public static Item ORANGE_WOOL;
    @Shadow public static Item MAGENTA_WOOL;
    @Shadow public static Item LIGHT_BLUE_WOOL;
    @Shadow public static Item YELLOW_WOOL;
    @Shadow public static Item LIME_WOOL;
    @Shadow public static Item PINK_WOOL;
    @Shadow public static Item GRAY_WOOL;
    @Shadow public static Item LIGHT_GRAY_WOOL;
    @Shadow public static Item CYAN_WOOL;
    @Shadow public static Item PURPLE_WOOL;
    @Shadow public static Item BLUE_WOOL;
    @Shadow public static Item BROWN_WOOL;
    @Shadow public static Item GREEN_WOOL;
    @Shadow public static Item RED_WOOL;
    @Shadow public static Item BLACK_WOOL;
    @Shadow public static Item DANDELION;
    @Shadow public static Item POPPY;
    @Shadow public static Item BLUE_ORCHID;
    @Shadow public static Item ALLIUM;
    @Shadow public static Item AZURE_BLUET;
    @Shadow public static Item RED_TULIP;
    @Shadow public static Item ORANGE_TULIP;
    @Shadow public static Item WHITE_TULIP;
    @Shadow public static Item PINK_TULIP;
    @Shadow public static Item OXEYE_DAISY;
    @Shadow public static Item CORNFLOWER;
    @Shadow public static Item LILY_OF_THE_VALLEY;
    @Shadow public static Item WITHER_ROSE;
    @Shadow public static Item SPORE_BLOSSOM;
    @Shadow public static Item BROWN_MUSHROOM;
    @Shadow public static Item RED_MUSHROOM;
    @Shadow public static Item CRIMSON_FUNGUS;
    @Shadow public static Item WARPED_FUNGUS;
    @Shadow public static Item CRIMSON_ROOTS;
    @Shadow public static Item WARPED_ROOTS;
    @Shadow public static Item NETHER_SPROUTS;
    @Shadow public static Item WEEPING_VINES;
    @Shadow public static Item TWISTING_VINES;
    @Shadow public static Item SUGAR_CANE;
    @Shadow public static Item KELP;
    @Shadow public static Item MOSS_CARPET;
    @Shadow public static Item MOSS_BLOCK;
    @Shadow public static Item HANGING_ROOTS;
    @Shadow public static Item BIG_DRIPLEAF;
    @Shadow public static Item SMALL_DRIPLEAF;
    @Shadow public static Item BAMBOO;
    @Shadow public static Item OAK_SLAB;
    @Shadow public static Item SPRUCE_SLAB;
    @Shadow public static Item BIRCH_SLAB;
    @Shadow public static Item JUNGLE_SLAB;
    @Shadow public static Item ACACIA_SLAB;
    @Shadow public static Item DARK_OAK_SLAB;
    @Shadow public static Item CRIMSON_SLAB;
    @Shadow public static Item WARPED_SLAB;
    @Shadow public static Item STONE_SLAB;
    @Shadow public static Item SMOOTH_STONE_SLAB;
    @Shadow public static Item SANDSTONE_SLAB;
    @Shadow public static Item CUT_SANDSTONE_SLAB;
    @Shadow public static Item PETRIFIED_OAK_SLAB;
    @Shadow public static Item COBBLESTONE_SLAB;
    @Shadow public static Item BRICK_SLAB;
    @Shadow public static Item STONE_BRICK_SLAB;
    @Shadow public static Item NETHER_BRICK_SLAB;
    @Shadow public static Item QUARTZ_SLAB;
    @Shadow public static Item RED_SANDSTONE_SLAB;
    @Shadow public static Item CUT_RED_SANDSTONE_SLAB;
    @Shadow public static Item PURPUR_SLAB;
    @Shadow public static Item PRISMARINE_SLAB;
    @Shadow public static Item PRISMARINE_BRICK_SLAB;
    @Shadow public static Item DARK_PRISMARINE_SLAB;
    @Shadow public static Item SMOOTH_QUARTZ;
    @Shadow public static Item SMOOTH_RED_SANDSTONE;
    @Shadow public static Item SMOOTH_SANDSTONE;
    @Shadow public static Item SMOOTH_STONE;
    @Shadow public static Item BRICKS;
    @Shadow public static Item BOOKSHELF;
    @Shadow public static Item MOSSY_COBBLESTONE;
    @Shadow public static Item OBSIDIAN;
    @Shadow public static Item TORCH;
    @Shadow public static Item END_ROD;
    @Shadow public static Item CHORUS_PLANT;
    @Shadow public static Item CHORUS_FLOWER;
    @Shadow public static Item PURPUR_BLOCK;
    @Shadow public static Item PURPUR_PILLAR;
    @Shadow public static Item PURPUR_STAIRS;
    @Shadow public static Item SPAWNER;
    @Shadow public static Item OAK_STAIRS;
    @Shadow public static Item CHEST;
    @Shadow public static Item CRAFTING_TABLE;
    @Shadow public static Item FARMLAND;
    @Shadow public static Item FURNACE;
    @Shadow public static Item LADDER;
    @Shadow public static Item COBBLESTONE_STAIRS;
    @Shadow public static Item SNOW;
    @Shadow public static Item ICE;
    @Shadow public static Item SNOW_BLOCK;
    @Shadow public static Item CACTUS;
    @Shadow public static Item CLAY;
    @Shadow public static Item JUKEBOX;
    @Shadow public static Item OAK_FENCE;
    @Shadow public static Item SPRUCE_FENCE;
    @Shadow public static Item BIRCH_FENCE;
    @Shadow public static Item JUNGLE_FENCE;
    @Shadow public static Item ACACIA_FENCE;
    @Shadow public static Item DARK_OAK_FENCE;
    @Shadow public static Item CRIMSON_FENCE;
    @Shadow public static Item WARPED_FENCE;
    @Shadow public static Item PUMPKIN;
    @Shadow public static Item CARVED_PUMPKIN;
    @Shadow public static Item JACK_O_LANTERN;
    @Shadow public static Item NETHERRACK;
    @Shadow public static Item SOUL_SAND;
    @Shadow public static Item SOUL_SOIL;
    @Shadow public static Item BASALT;
    @Shadow public static Item POLISHED_BASALT;
    @Shadow public static Item SMOOTH_BASALT;
    @Shadow public static Item SOUL_TORCH;
    @Shadow public static Item GLOWSTONE;
    @Shadow public static Item INFESTED_STONE;
    @Shadow public static Item INFESTED_COBBLESTONE;
    @Shadow public static Item INFESTED_STONE_BRICKS;
    @Shadow public static Item INFESTED_MOSSY_STONE_BRICKS;
    @Shadow public static Item INFESTED_CRACKED_STONE_BRICKS;
    @Shadow public static Item INFESTED_CHISELED_STONE_BRICKS;
    @Shadow public static Item INFESTED_DEEPSLATE;
    @Shadow public static Item STONE_BRICKS;
    @Shadow public static Item MOSSY_STONE_BRICKS;
    @Shadow public static Item CRACKED_STONE_BRICKS;
    @Shadow public static Item CHISELED_STONE_BRICKS;
    @Shadow public static Item DEEPSLATE_BRICKS;
    @Shadow public static Item CRACKED_DEEPSLATE_BRICKS;
    @Shadow public static Item DEEPSLATE_TILES;
    @Shadow public static Item CRACKED_DEEPSLATE_TILES;
    @Shadow public static Item CHISELED_DEEPSLATE;
    @Shadow public static Item BROWN_MUSHROOM_BLOCK;
    @Shadow public static Item RED_MUSHROOM_BLOCK;
    @Shadow public static Item MUSHROOM_STEM;
    @Shadow public static Item IRON_BARS;
    @Shadow public static Item CHAIN;
    @Shadow public static Item GLASS_PANE;
    @Shadow public static Item MELON;
    @Shadow public static Item VINE;
    @Shadow public static Item GLOW_LICHEN;
    @Shadow public static Item BRICK_STAIRS;
    @Shadow public static Item STONE_BRICK_STAIRS;
    @Shadow public static Item MYCELIUM;
    @Shadow public static Item LILY_PAD;
    @Shadow public static Item NETHER_BRICKS;
    @Shadow public static Item CRACKED_NETHER_BRICKS;
    @Shadow public static Item CHISELED_NETHER_BRICKS;
    @Shadow public static Item NETHER_BRICK_FENCE;
    @Shadow public static Item NETHER_BRICK_STAIRS;
    @Shadow public static Item ENCHANTING_TABLE;
    @Shadow public static Item END_PORTAL_FRAME;
    @Shadow public static Item END_STONE;
    @Shadow public static Item END_STONE_BRICKS;
    @Shadow public static Item DRAGON_EGG;
    @Shadow public static Item SANDSTONE_STAIRS;
    @Shadow public static Item ENDER_CHEST;
    @Shadow public static Item EMERALD_BLOCK;
    @Shadow public static Item SPRUCE_STAIRS;
    @Shadow public static Item BIRCH_STAIRS;
    @Shadow public static Item JUNGLE_STAIRS;
    @Shadow public static Item CRIMSON_STAIRS;
    @Shadow public static Item WARPED_STAIRS;
    @Shadow public static Item COMMAND_BLOCK;
    @Shadow public static Item BEACON;
    @Shadow public static Item COBBLESTONE_WALL;
    @Shadow public static Item MOSSY_COBBLESTONE_WALL;
    @Shadow public static Item BRICK_WALL;
    @Shadow public static Item PRISMARINE_WALL;
    @Shadow public static Item RED_SANDSTONE_WALL;
    @Shadow public static Item MOSSY_STONE_BRICK_WALL;
    @Shadow public static Item GRANITE_WALL;
    @Shadow public static Item STONE_BRICK_WALL;
    @Shadow public static Item NETHER_BRICK_WALL;
    @Shadow public static Item ANDESITE_WALL;
    @Shadow public static Item RED_NETHER_BRICK_WALL;
    @Shadow public static Item SANDSTONE_WALL;
    @Shadow public static Item END_STONE_BRICK_WALL;
    @Shadow public static Item DIORITE_WALL;
    @Shadow public static Item BLACKSTONE_WALL;
    @Shadow public static Item POLISHED_BLACKSTONE_WALL;
    @Shadow public static Item POLISHED_BLACKSTONE_BRICK_WALL;
    @Shadow public static Item DEEPSLATE_WALL;
    @Shadow public static Item POLISHED_DEEPSLATE_WALL;
    @Shadow public static Item DEEPSLATE_BRICK_WALL;
    @Shadow public static Item DEEPSLATE_TILE_WALL;
    @Shadow public static Item ANVIL;
    @Shadow public static Item CHIPPED_ANVIL;
    @Shadow public static Item DAMAGED_ANVIL;
    @Shadow public static Item CHISELED_QUARTZ_BLOCK;
    @Shadow public static Item QUARTZ_BLOCK;
    @Shadow public static Item QUARTZ_BRICKS;
    @Shadow public static Item QUARTZ_PILLAR;
    @Shadow public static Item QUARTZ_STAIRS;
    @Shadow public static Item WHITE_TERRACOTTA;
    @Shadow public static Item ORANGE_TERRACOTTA;
    @Shadow public static Item MAGENTA_TERRACOTTA;
    @Shadow public static Item LIGHT_BLUE_TERRACOTTA;
    @Shadow public static Item YELLOW_TERRACOTTA;
    @Shadow public static Item LIME_TERRACOTTA;
    @Shadow public static Item PINK_TERRACOTTA;
    @Shadow public static Item GRAY_TERRACOTTA;
    @Shadow public static Item LIGHT_GRAY_TERRACOTTA;
    @Shadow public static Item CYAN_TERRACOTTA;
    @Shadow public static Item PURPLE_TERRACOTTA;
    @Shadow public static Item BLUE_TERRACOTTA;
    @Shadow public static Item BROWN_TERRACOTTA;
    @Shadow public static Item GREEN_TERRACOTTA;
    @Shadow public static Item RED_TERRACOTTA;
    @Shadow public static Item BLACK_TERRACOTTA;
    @Shadow public static Item BARRIER;
    @Shadow public static Item LIGHT;
    @Shadow public static Item HAY_BLOCK;
    @Shadow public static Item WHITE_CARPET;
    @Shadow public static Item ORANGE_CARPET;
    @Shadow public static Item MAGENTA_CARPET;
    @Shadow public static Item LIGHT_BLUE_CARPET;
    @Shadow public static Item YELLOW_CARPET;
    @Shadow public static Item LIME_CARPET;
    @Shadow public static Item PINK_CARPET;
    @Shadow public static Item GRAY_CARPET;
    @Shadow public static Item LIGHT_GRAY_CARPET;
    @Shadow public static Item CYAN_CARPET;
    @Shadow public static Item PURPLE_CARPET;
    @Shadow public static Item BLUE_CARPET;
    @Shadow public static Item BROWN_CARPET;
    @Shadow public static Item GREEN_CARPET;
    @Shadow public static Item RED_CARPET;
    @Shadow public static Item BLACK_CARPET;
    @Shadow public static Item TERRACOTTA;
    @Shadow public static Item PACKED_ICE;
    @Shadow public static Item ACACIA_STAIRS;
    @Shadow public static Item DARK_OAK_STAIRS;
    @Shadow public static Item DIRT_PATH;
    @Shadow public static Item SUNFLOWER;
    @Shadow public static Item LILAC;
    @Shadow public static Item ROSE_BUSH;
    @Shadow public static Item PEONY;
    @Shadow public static Item TALL_GRASS;
    @Shadow public static Item LARGE_FERN;
    @Shadow public static Item WHITE_STAINED_GLASS;
    @Shadow public static Item ORANGE_STAINED_GLASS;
    @Shadow public static Item MAGENTA_STAINED_GLASS;
    @Shadow public static Item LIGHT_BLUE_STAINED_GLASS;
    @Shadow public static Item YELLOW_STAINED_GLASS;
    @Shadow public static Item LIME_STAINED_GLASS;
    @Shadow public static Item PINK_STAINED_GLASS;
    @Shadow public static Item GRAY_STAINED_GLASS;
    @Shadow public static Item LIGHT_GRAY_STAINED_GLASS;
    @Shadow public static Item CYAN_STAINED_GLASS;
    @Shadow public static Item PURPLE_STAINED_GLASS;
    @Shadow public static Item BLUE_STAINED_GLASS;
    @Shadow public static Item BROWN_STAINED_GLASS;
    @Shadow public static Item GREEN_STAINED_GLASS;
    @Shadow public static Item RED_STAINED_GLASS;
    @Shadow public static Item BLACK_STAINED_GLASS;
    @Shadow public static Item WHITE_STAINED_GLASS_PANE;
    @Shadow public static Item ORANGE_STAINED_GLASS_PANE;
    @Shadow public static Item MAGENTA_STAINED_GLASS_PANE;
    @Shadow public static Item LIGHT_BLUE_STAINED_GLASS_PANE;
    @Shadow public static Item YELLOW_STAINED_GLASS_PANE;
    @Shadow public static Item LIME_STAINED_GLASS_PANE;
    @Shadow public static Item PINK_STAINED_GLASS_PANE;
    @Shadow public static Item GRAY_STAINED_GLASS_PANE;
    @Shadow public static Item LIGHT_GRAY_STAINED_GLASS_PANE;
    @Shadow public static Item CYAN_STAINED_GLASS_PANE;
    @Shadow public static Item PURPLE_STAINED_GLASS_PANE;
    @Shadow public static Item BLUE_STAINED_GLASS_PANE;
    @Shadow public static Item BROWN_STAINED_GLASS_PANE;
    @Shadow public static Item GREEN_STAINED_GLASS_PANE;
    @Shadow public static Item RED_STAINED_GLASS_PANE;
    @Shadow public static Item BLACK_STAINED_GLASS_PANE;
    @Shadow public static Item PRISMARINE;
    @Shadow public static Item PRISMARINE_BRICKS;
    @Shadow public static Item DARK_PRISMARINE;
    @Shadow public static Item PRISMARINE_STAIRS;
    @Shadow public static Item PRISMARINE_BRICK_STAIRS;
    @Shadow public static Item DARK_PRISMARINE_STAIRS;
    @Shadow public static Item SEA_LANTERN;
    @Shadow public static Item RED_SANDSTONE;
    @Shadow public static Item CHISELED_RED_SANDSTONE;
    @Shadow public static Item CUT_RED_SANDSTONE;
    @Shadow public static Item RED_SANDSTONE_STAIRS;
    @Shadow public static Item REPEATING_COMMAND_BLOCK;
    @Shadow public static Item CHAIN_COMMAND_BLOCK;
    @Shadow public static Item MAGMA_BLOCK;
    @Shadow public static Item NETHER_WART_BLOCK;
    @Shadow public static Item WARPED_WART_BLOCK;
    @Shadow public static Item RED_NETHER_BRICKS;
    @Shadow public static Item BONE_BLOCK;
    @Shadow public static Item STRUCTURE_VOID;
    @Shadow public static Item SHULKER_BOX;
    @Shadow public static Item WHITE_SHULKER_BOX;
    @Shadow public static Item ORANGE_SHULKER_BOX;
    @Shadow public static Item MAGENTA_SHULKER_BOX;
    @Shadow public static Item LIGHT_BLUE_SHULKER_BOX;
    @Shadow public static Item YELLOW_SHULKER_BOX;
    @Shadow public static Item LIME_SHULKER_BOX;
    @Shadow public static Item PINK_SHULKER_BOX;
    @Shadow public static Item GRAY_SHULKER_BOX;
    @Shadow public static Item LIGHT_GRAY_SHULKER_BOX;
    @Shadow public static Item CYAN_SHULKER_BOX;
    @Shadow public static Item PURPLE_SHULKER_BOX;
    @Shadow public static Item BLUE_SHULKER_BOX;
    @Shadow public static Item BROWN_SHULKER_BOX;
    @Shadow public static Item GREEN_SHULKER_BOX;
    @Shadow public static Item RED_SHULKER_BOX;
    @Shadow public static Item BLACK_SHULKER_BOX;
    @Shadow public static Item WHITE_GLAZED_TERRACOTTA;
    @Shadow public static Item ORANGE_GLAZED_TERRACOTTA;
    @Shadow public static Item MAGENTA_GLAZED_TERRACOTTA;
    @Shadow public static Item LIGHT_BLUE_GLAZED_TERRACOTTA;
    @Shadow public static Item YELLOW_GLAZED_TERRACOTTA;
    @Shadow public static Item LIME_GLAZED_TERRACOTTA;
    @Shadow public static Item PINK_GLAZED_TERRACOTTA;
    @Shadow public static Item GRAY_GLAZED_TERRACOTTA;
    @Shadow public static Item LIGHT_GRAY_GLAZED_TERRACOTTA;
    @Shadow public static Item CYAN_GLAZED_TERRACOTTA;
    @Shadow public static Item PURPLE_GLAZED_TERRACOTTA;
    @Shadow public static Item BLUE_GLAZED_TERRACOTTA;
    @Shadow public static Item BROWN_GLAZED_TERRACOTTA;
    @Shadow public static Item GREEN_GLAZED_TERRACOTTA;
    @Shadow public static Item RED_GLAZED_TERRACOTTA;
    @Shadow public static Item BLACK_GLAZED_TERRACOTTA;
    @Shadow public static Item WHITE_CONCRETE;
    @Shadow public static Item ORANGE_CONCRETE;
    @Shadow public static Item MAGENTA_CONCRETE;
    @Shadow public static Item LIGHT_BLUE_CONCRETE;
    @Shadow public static Item YELLOW_CONCRETE;
    @Shadow public static Item LIME_CONCRETE;
    @Shadow public static Item PINK_CONCRETE;
    @Shadow public static Item GRAY_CONCRETE;
    @Shadow public static Item LIGHT_GRAY_CONCRETE;
    @Shadow public static Item CYAN_CONCRETE;
    @Shadow public static Item PURPLE_CONCRETE;
    @Shadow public static Item BLUE_CONCRETE;
    @Shadow public static Item BROWN_CONCRETE;
    @Shadow public static Item GREEN_CONCRETE;
    @Shadow public static Item RED_CONCRETE;
    @Shadow public static Item BLACK_CONCRETE;
    @Shadow public static Item WHITE_CONCRETE_POWDER;
    @Shadow public static Item ORANGE_CONCRETE_POWDER;
    @Shadow public static Item MAGENTA_CONCRETE_POWDER;
    @Shadow public static Item LIGHT_BLUE_CONCRETE_POWDER;
    @Shadow public static Item YELLOW_CONCRETE_POWDER;
    @Shadow public static Item LIME_CONCRETE_POWDER;
    @Shadow public static Item PINK_CONCRETE_POWDER;
    @Shadow public static Item GRAY_CONCRETE_POWDER;
    @Shadow public static Item LIGHT_GRAY_CONCRETE_POWDER;
    @Shadow public static Item CYAN_CONCRETE_POWDER;
    @Shadow public static Item PURPLE_CONCRETE_POWDER;
    @Shadow public static Item BLUE_CONCRETE_POWDER;
    @Shadow public static Item BROWN_CONCRETE_POWDER;
    @Shadow public static Item GREEN_CONCRETE_POWDER;
    @Shadow public static Item RED_CONCRETE_POWDER;
    @Shadow public static Item BLACK_CONCRETE_POWDER;
    @Shadow public static Item TURTLE_EGG;
    @Shadow public static Item DEAD_TUBE_CORAL_BLOCK;
    @Shadow public static Item DEAD_BRAIN_CORAL_BLOCK;
    @Shadow public static Item DEAD_BUBBLE_CORAL_BLOCK;
    @Shadow public static Item DEAD_FIRE_CORAL_BLOCK;
    @Shadow public static Item DEAD_HORN_CORAL_BLOCK;
    @Shadow public static Item TUBE_CORAL_BLOCK;
    @Shadow public static Item BRAIN_CORAL_BLOCK;
    @Shadow public static Item BUBBLE_CORAL_BLOCK;
    @Shadow public static Item FIRE_CORAL_BLOCK;
    @Shadow public static Item HORN_CORAL_BLOCK;
    @Shadow public static Item TUBE_CORAL;
    @Shadow public static Item BRAIN_CORAL;
    @Shadow public static Item BUBBLE_CORAL;
    @Shadow public static Item FIRE_CORAL;
    @Shadow public static Item HORN_CORAL;
    @Shadow public static Item DEAD_BRAIN_CORAL;
    @Shadow public static Item DEAD_BUBBLE_CORAL;
    @Shadow public static Item DEAD_FIRE_CORAL;
    @Shadow public static Item DEAD_HORN_CORAL;
    @Shadow public static Item DEAD_TUBE_CORAL;
    @Shadow public static Item TUBE_CORAL_FAN;
    @Shadow public static Item BRAIN_CORAL_FAN;
    @Shadow public static Item BUBBLE_CORAL_FAN;
    @Shadow public static Item FIRE_CORAL_FAN;
    @Shadow public static Item HORN_CORAL_FAN;
    @Shadow public static Item DEAD_TUBE_CORAL_FAN;
    @Shadow public static Item DEAD_BRAIN_CORAL_FAN;
    @Shadow public static Item DEAD_BUBBLE_CORAL_FAN;
    @Shadow public static Item DEAD_FIRE_CORAL_FAN;
    @Shadow public static Item DEAD_HORN_CORAL_FAN;
    @Shadow public static Item BLUE_ICE;
    @Shadow public static Item CONDUIT;
    @Shadow public static Item POLISHED_GRANITE_STAIRS;
    @Shadow public static Item SMOOTH_RED_SANDSTONE_STAIRS;
    @Shadow public static Item MOSSY_STONE_BRICK_STAIRS;
    @Shadow public static Item POLISHED_DIORITE_STAIRS;
    @Shadow public static Item MOSSY_COBBLESTONE_STAIRS;
    @Shadow public static Item END_STONE_BRICK_STAIRS;
    @Shadow public static Item STONE_STAIRS;
    @Shadow public static Item SMOOTH_SANDSTONE_STAIRS;
    @Shadow public static Item SMOOTH_QUARTZ_STAIRS;
    @Shadow public static Item GRANITE_STAIRS;
    @Shadow public static Item ANDESITE_STAIRS;
    @Shadow public static Item RED_NETHER_BRICK_STAIRS;
    @Shadow public static Item POLISHED_ANDESITE_STAIRS;
    @Shadow public static Item DIORITE_STAIRS;
    @Shadow public static Item COBBLED_DEEPSLATE_STAIRS;
    @Shadow public static Item POLISHED_DEEPSLATE_STAIRS;
    @Shadow public static Item DEEPSLATE_BRICK_STAIRS;
    @Shadow public static Item DEEPSLATE_TILE_STAIRS;
    @Shadow public static Item POLISHED_GRANITE_SLAB;
    @Shadow public static Item SMOOTH_RED_SANDSTONE_SLAB;
    @Shadow public static Item MOSSY_STONE_BRICK_SLAB;
    @Shadow public static Item POLISHED_DIORITE_SLAB;
    @Shadow public static Item MOSSY_COBBLESTONE_SLAB;
    @Shadow public static Item END_STONE_BRICK_SLAB;
    @Shadow public static Item SMOOTH_SANDSTONE_SLAB;
    @Shadow public static Item SMOOTH_QUARTZ_SLAB;
    @Shadow public static Item GRANITE_SLAB;
    @Shadow public static Item ANDESITE_SLAB;
    @Shadow public static Item RED_NETHER_BRICK_SLAB;
    @Shadow public static Item POLISHED_ANDESITE_SLAB;
    @Shadow public static Item DIORITE_SLAB;
    @Shadow public static Item COBBLED_DEEPSLATE_SLAB;
    @Shadow public static Item POLISHED_DEEPSLATE_SLAB;
    @Shadow public static Item DEEPSLATE_BRICK_SLAB;
    @Shadow public static Item DEEPSLATE_TILE_SLAB;
    @Shadow public static Item SCAFFOLDING;
    @Shadow public static Item REDSTONE;
    @Shadow public static Item REDSTONE_TORCH;
    @Shadow public static Item REDSTONE_BLOCK;
    @Shadow public static Item REPEATER;
    @Shadow public static Item COMPARATOR;
    @Shadow public static Item PISTON;
    @Shadow public static Item STICKY_PISTON;
    @Shadow public static Item SLIME_BLOCK;
    @Shadow public static Item HONEY_BLOCK;
    @Shadow public static Item OBSERVER;
    @Shadow public static Item HOPPER;
    @Shadow public static Item DISPENSER;
    @Shadow public static Item DROPPER;
    @Shadow public static Item LECTERN;
    @Shadow public static Item TARGET;
    @Shadow public static Item LEVER;
    @Shadow public static Item LIGHTNING_ROD;
    @Shadow public static Item DAYLIGHT_DETECTOR;
    @Shadow public static Item SCULK_SENSOR;
    @Shadow public static Item TRIPWIRE_HOOK;
    @Shadow public static Item TRAPPED_CHEST;
    @Shadow public static Item TNT;
    @Shadow public static Item REDSTONE_LAMP;
    @Shadow public static Item NOTE_BLOCK;
    @Shadow public static Item STONE_BUTTON;
    @Shadow public static Item POLISHED_BLACKSTONE_BUTTON;
    @Shadow public static Item OAK_BUTTON;
    @Shadow public static Item SPRUCE_BUTTON;
    @Shadow public static Item BIRCH_BUTTON;
    @Shadow public static Item JUNGLE_BUTTON;
    @Shadow public static Item ACACIA_BUTTON;
    @Shadow public static Item DARK_OAK_BUTTON;
    @Shadow public static Item CRIMSON_BUTTON;
    @Shadow public static Item WARPED_BUTTON;
    @Shadow public static Item STONE_PRESSURE_PLATE;
    @Shadow public static Item POLISHED_BLACKSTONE_PRESSURE_PLATE;
    @Shadow public static Item LIGHT_WEIGHTED_PRESSURE_PLATE;
    @Shadow public static Item HEAVY_WEIGHTED_PRESSURE_PLATE;
    @Shadow public static Item OAK_PRESSURE_PLATE;
    @Shadow public static Item SPRUCE_PRESSURE_PLATE;
    @Shadow public static Item BIRCH_PRESSURE_PLATE;
    @Shadow public static Item JUNGLE_PRESSURE_PLATE;
    @Shadow public static Item ACACIA_PRESSURE_PLATE;
    @Shadow public static Item DARK_OAK_PRESSURE_PLATE;
    @Shadow public static Item CRIMSON_PRESSURE_PLATE;
    @Shadow public static Item WARPED_PRESSURE_PLATE;
    @Shadow public static Item IRON_DOOR;
    @Shadow public static Item OAK_DOOR;
    @Shadow public static Item SPRUCE_DOOR;
    @Shadow public static Item BIRCH_DOOR;
    @Shadow public static Item JUNGLE_DOOR;
    @Shadow public static Item ACACIA_DOOR;
    @Shadow public static Item DARK_OAK_DOOR;
    @Shadow public static Item CRIMSON_DOOR;
    @Shadow public static Item WARPED_DOOR;
    @Shadow public static Item IRON_TRAPDOOR;
    @Shadow public static Item OAK_TRAPDOOR;
    @Shadow public static Item SPRUCE_TRAPDOOR;
    @Shadow public static Item BIRCH_TRAPDOOR;
    @Shadow public static Item JUNGLE_TRAPDOOR;
    @Shadow public static Item ACACIA_TRAPDOOR;
    @Shadow public static Item DARK_OAK_TRAPDOOR;
    @Shadow public static Item CRIMSON_TRAPDOOR;
    @Shadow public static Item WARPED_TRAPDOOR;
    @Shadow public static Item OAK_FENCE_GATE;
    @Shadow public static Item SPRUCE_FENCE_GATE;
    @Shadow public static Item BIRCH_FENCE_GATE;
    @Shadow public static Item JUNGLE_FENCE_GATE;
    @Shadow public static Item ACACIA_FENCE_GATE;
    @Shadow public static Item DARK_OAK_FENCE_GATE;
    @Shadow public static Item CRIMSON_FENCE_GATE;
    @Shadow public static Item WARPED_FENCE_GATE;
    @Shadow public static Item POWERED_RAIL;
    @Shadow public static Item DETECTOR_RAIL;
    @Shadow public static Item RAIL;
    @Shadow public static Item ACTIVATOR_RAIL;
    @Shadow public static Item SADDLE;
    @Shadow public static Item MINECART;
    @Shadow public static Item CHEST_MINECART;
    @Shadow public static Item FURNACE_MINECART;
    @Shadow public static Item TNT_MINECART;
    @Shadow public static Item HOPPER_MINECART;
    @Shadow public static Item CARROT_ON_A_STICK;
    @Shadow public static Item WARPED_FUNGUS_ON_A_STICK;
    @Shadow public static Item ELYTRA;
    @Shadow public static Item OAK_BOAT;
    @Shadow public static Item SPRUCE_BOAT;
    @Shadow public static Item BIRCH_BOAT;
    @Shadow public static Item JUNGLE_BOAT;
    @Shadow public static Item ACACIA_BOAT;
    @Shadow public static Item DARK_OAK_BOAT;
    @Shadow public static Item STRUCTURE_BLOCK;
    @Shadow public static Item JIGSAW;
    @Shadow public static Item TURTLE_HELMET;
    @Shadow public static Item SCUTE;
    @Shadow public static Item FLINT_AND_STEEL;
    @Shadow public static Item APPLE;
    @Shadow public static Item BOW;
    @Shadow public static Item ARROW;
    @Shadow public static Item COAL;
    @Shadow public static Item CHARCOAL;
    @Shadow public static Item DIAMOND;
    @Shadow public static Item EMERALD;
    @Shadow public static Item LAPIS_LAZULI;
    @Shadow public static Item QUARTZ;
    @Shadow public static Item AMETHYST_SHARD;
    @Shadow public static Item RAW_IRON;
    @Shadow public static Item IRON_INGOT;
    @Shadow public static Item RAW_COPPER;
    @Shadow public static Item COPPER_INGOT;
    @Shadow public static Item RAW_GOLD;
    @Shadow public static Item GOLD_INGOT;
    @Shadow public static Item NETHERITE_INGOT;
    @Shadow public static Item NETHERITE_SCRAP;
    @Shadow public static Item WOODEN_SWORD;
    @Shadow public static Item WOODEN_SHOVEL;
    @Shadow public static Item WOODEN_PICKAXE;
    @Shadow public static Item WOODEN_AXE;
    @Shadow public static Item WOODEN_HOE;
    @Shadow public static Item STONE_SWORD;
    @Shadow public static Item STONE_SHOVEL;
    @Shadow public static Item STONE_PICKAXE;
    @Shadow public static Item STONE_AXE;
    @Shadow public static Item STONE_HOE;
    @Shadow public static Item GOLDEN_SWORD;
    @Shadow public static Item GOLDEN_SHOVEL;
    @Shadow public static Item GOLDEN_PICKAXE;
    @Shadow public static Item GOLDEN_AXE;
    @Shadow public static Item GOLDEN_HOE;
    @Shadow public static Item IRON_SWORD;
    @Shadow public static Item IRON_SHOVEL;
    @Shadow public static Item IRON_PICKAXE;
    @Shadow public static Item IRON_AXE;
    @Shadow public static Item IRON_HOE;
    @Shadow public static Item DIAMOND_SWORD;
    @Shadow public static Item DIAMOND_SHOVEL;
    @Shadow public static Item DIAMOND_PICKAXE;
    @Shadow public static Item DIAMOND_AXE;
    @Shadow public static Item DIAMOND_HOE;
    @Shadow public static Item NETHERITE_SWORD;
    @Shadow public static Item NETHERITE_SHOVEL;
    @Shadow public static Item NETHERITE_PICKAXE;
    @Shadow public static Item NETHERITE_AXE;
    @Shadow public static Item NETHERITE_HOE;
    @Shadow public static Item STICK;
    @Shadow public static Item BOWL;
    @Shadow public static Item MUSHROOM_STEW;
    @Shadow public static Item STRING;
    @Shadow public static Item FEATHER;
    @Shadow public static Item GUNPOWDER;
    @Shadow public static Item WHEAT_SEEDS;
    @Shadow public static Item WHEAT;
    @Shadow public static Item BREAD;
    @Shadow public static Item LEATHER_HELMET;
    @Shadow public static Item LEATHER_CHESTPLATE;
    @Shadow public static Item LEATHER_LEGGINGS;
    @Shadow public static Item LEATHER_BOOTS;
    @Shadow public static Item CHAINMAIL_HELMET;
    @Shadow public static Item CHAINMAIL_CHESTPLATE;
    @Shadow public static Item CHAINMAIL_LEGGINGS;
    @Shadow public static Item CHAINMAIL_BOOTS;
    @Shadow public static Item IRON_HELMET;
    @Shadow public static Item IRON_CHESTPLATE;
    @Shadow public static Item IRON_LEGGINGS;
    @Shadow public static Item IRON_BOOTS;
    @Shadow public static Item DIAMOND_HELMET;
    @Shadow public static Item DIAMOND_CHESTPLATE;
    @Shadow public static Item DIAMOND_LEGGINGS;
    @Shadow public static Item DIAMOND_BOOTS;
    @Shadow public static Item GOLDEN_HELMET;
    @Shadow public static Item GOLDEN_CHESTPLATE;
    @Shadow public static Item GOLDEN_LEGGINGS;
    @Shadow public static Item GOLDEN_BOOTS;
    @Shadow public static Item NETHERITE_HELMET;
    @Shadow public static Item NETHERITE_CHESTPLATE;
    @Shadow public static Item NETHERITE_LEGGINGS;
    @Shadow public static Item NETHERITE_BOOTS;
    @Shadow public static Item FLINT;
    @Shadow public static Item PORKCHOP;
    @Shadow public static Item COOKED_PORKCHOP;
    @Shadow public static Item PAINTING;
    @Shadow public static Item GOLDEN_APPLE;
    @Shadow public static Item ENCHANTED_GOLDEN_APPLE;
    @Shadow public static Item OAK_SIGN;
    @Shadow public static Item SPRUCE_SIGN;
    @Shadow public static Item BIRCH_SIGN;
    @Shadow public static Item JUNGLE_SIGN;
    @Shadow public static Item ACACIA_SIGN;
    @Shadow public static Item DARK_OAK_SIGN;
    @Shadow public static Item CRIMSON_SIGN;
    @Shadow public static Item WARPED_SIGN;
    @Shadow public static Item BUCKET;
    @Shadow public static Item WATER_BUCKET;
    @Shadow public static Item LAVA_BUCKET;
    @Shadow public static Item POWDER_SNOW_BUCKET;
    @Shadow public static Item SNOWBALL;
    @Shadow public static Item LEATHER;
    @Shadow public static Item MILK_BUCKET;
    @Shadow public static Item PUFFERFISH_BUCKET;
    @Shadow public static Item SALMON_BUCKET;
    @Shadow public static Item COD_BUCKET;
    @Shadow public static Item TROPICAL_FISH_BUCKET;
    @Shadow public static Item AXOLOTL_BUCKET;
    @Shadow public static Item BRICK;
    @Shadow public static Item CLAY_BALL;
    @Shadow public static Item DRIED_KELP_BLOCK;
    @Shadow public static Item PAPER;
    @Shadow public static Item BOOK;
    @Shadow public static Item SLIME_BALL;
    @Shadow public static Item EGG;
    @Shadow public static Item COMPASS;
    @Shadow public static Item BUNDLE;
    @Shadow public static Item FISHING_ROD;
    @Shadow public static Item CLOCK;
    @Shadow public static Item SPYGLASS;
    @Shadow public static Item GLOWSTONE_DUST;
    @Shadow public static Item COD;
    @Shadow public static Item SALMON;
    @Shadow public static Item TROPICAL_FISH;
    @Shadow public static Item PUFFERFISH;
    @Shadow public static Item COOKED_COD;
    @Shadow public static Item COOKED_SALMON;
    @Shadow public static Item INK_SAC;
    @Shadow public static Item GLOW_INK_SAC;
    @Shadow public static Item COCOA_BEANS;
    @Shadow public static Item WHITE_DYE;
    @Shadow public static Item ORANGE_DYE;
    @Shadow public static Item MAGENTA_DYE;
    @Shadow public static Item LIGHT_BLUE_DYE;
    @Shadow public static Item YELLOW_DYE;
    @Shadow public static Item LIME_DYE;
    @Shadow public static Item PINK_DYE;
    @Shadow public static Item GRAY_DYE;
    @Shadow public static Item LIGHT_GRAY_DYE;
    @Shadow public static Item CYAN_DYE;
    @Shadow public static Item PURPLE_DYE;
    @Shadow public static Item BLUE_DYE;
    @Shadow public static Item BROWN_DYE;
    @Shadow public static Item GREEN_DYE;
    @Shadow public static Item RED_DYE;
    @Shadow public static Item BLACK_DYE;
    @Shadow public static Item BONE_MEAL;
    @Shadow public static Item BONE;
    @Shadow public static Item SUGAR;
    @Shadow public static Item CAKE;
    @Shadow public static Item WHITE_BED;
    @Shadow public static Item ORANGE_BED;
    @Shadow public static Item MAGENTA_BED;
    @Shadow public static Item LIGHT_BLUE_BED;
    @Shadow public static Item YELLOW_BED;
    @Shadow public static Item LIME_BED;
    @Shadow public static Item PINK_BED;
    @Shadow public static Item GRAY_BED;
    @Shadow public static Item LIGHT_GRAY_BED;
    @Shadow public static Item CYAN_BED;
    @Shadow public static Item PURPLE_BED;
    @Shadow public static Item BLUE_BED;
    @Shadow public static Item BROWN_BED;
    @Shadow public static Item GREEN_BED;
    @Shadow public static Item RED_BED;
    @Shadow public static Item BLACK_BED;
    @Shadow public static Item COOKIE;
    @Shadow public static Item FILLED_MAP;
    @Shadow public static Item SHEARS;
    @Shadow public static Item MELON_SLICE;
    @Shadow public static Item DRIED_KELP;
    @Shadow public static Item PUMPKIN_SEEDS;
    @Shadow public static Item MELON_SEEDS;
    @Shadow public static Item BEEF;
    @Shadow public static Item COOKED_BEEF;
    @Shadow public static Item CHICKEN;
    @Shadow public static Item COOKED_CHICKEN;
    @Shadow public static Item ROTTEN_FLESH;
    @Shadow public static Item ENDER_PEARL;
    @Shadow public static Item BLAZE_ROD;
    @Shadow public static Item GHAST_TEAR;
    @Shadow public static Item GOLD_NUGGET;
    @Shadow public static Item NETHER_WART;
    @Shadow public static Item POTION;
    @Shadow public static Item GLASS_BOTTLE;
    @Shadow public static Item SPIDER_EYE;
    @Shadow public static Item FERMENTED_SPIDER_EYE;
    @Shadow public static Item BLAZE_POWDER;
    @Shadow public static Item MAGMA_CREAM;
    @Shadow public static Item BREWING_STAND;
    @Shadow public static Item CAULDRON;
    @Shadow public static Item ENDER_EYE;
    @Shadow public static Item GLISTERING_MELON_SLICE;
    @Shadow public static Item AXOLOTL_SPAWN_EGG;
    @Shadow public static Item BAT_SPAWN_EGG;
    @Shadow public static Item BEE_SPAWN_EGG;
    @Shadow public static Item BLAZE_SPAWN_EGG;
    @Shadow public static Item CAT_SPAWN_EGG;
    @Shadow public static Item CAVE_SPIDER_SPAWN_EGG;
    @Shadow public static Item CHICKEN_SPAWN_EGG;
    @Shadow public static Item COD_SPAWN_EGG;
    @Shadow public static Item COW_SPAWN_EGG;
    @Shadow public static Item CREEPER_SPAWN_EGG;
    @Shadow public static Item DOLPHIN_SPAWN_EGG;
    @Shadow public static Item DONKEY_SPAWN_EGG;
    @Shadow public static Item DROWNED_SPAWN_EGG;
    @Shadow public static Item ELDER_GUARDIAN_SPAWN_EGG;
    @Shadow public static Item ENDERMAN_SPAWN_EGG;
    @Shadow public static Item ENDERMITE_SPAWN_EGG;
    @Shadow public static Item EVOKER_SPAWN_EGG;
    @Shadow public static Item FOX_SPAWN_EGG;
    @Shadow public static Item GHAST_SPAWN_EGG;
    @Shadow public static Item GLOW_SQUID_SPAWN_EGG;
    @Shadow public static Item GOAT_SPAWN_EGG;
    @Shadow public static Item GUARDIAN_SPAWN_EGG;
    @Shadow public static Item HOGLIN_SPAWN_EGG;
    @Shadow public static Item HORSE_SPAWN_EGG;
    @Shadow public static Item HUSK_SPAWN_EGG;
    @Shadow public static Item LLAMA_SPAWN_EGG;
    @Shadow public static Item MAGMA_CUBE_SPAWN_EGG;
    @Shadow public static Item MOOSHROOM_SPAWN_EGG;
    @Shadow public static Item MULE_SPAWN_EGG;
    @Shadow public static Item OCELOT_SPAWN_EGG;
    @Shadow public static Item PANDA_SPAWN_EGG;
    @Shadow public static Item PARROT_SPAWN_EGG;
    @Shadow public static Item PHANTOM_SPAWN_EGG;
    @Shadow public static Item PIG_SPAWN_EGG;
    @Shadow public static Item PIGLIN_SPAWN_EGG;
    @Shadow public static Item PLAYER_HEAD;
    @Shadow public static Item ZOMBIE_HEAD;
    @Shadow public static Item CREEPER_HEAD;
    @Shadow public static Item DRAGON_HEAD;
    @Shadow public static Item NETHER_STAR;
    @Shadow public static Item PUMPKIN_PIE;
    @Shadow public static Item FIREWORK_ROCKET;
    @Shadow public static Item FIREWORK_STAR;
    @Shadow public static Item ENCHANTED_BOOK;
    @Shadow public static Item NETHER_BRICK;
    @Shadow public static Item PRISMARINE_SHARD;
    @Shadow public static Item PRISMARINE_CRYSTALS;
    @Shadow public static Item RABBIT;
    @Shadow public static Item COOKED_RABBIT;
    @Shadow public static Item RABBIT_STEW;
    @Shadow public static Item RABBIT_FOOT;
    @Shadow public static Item RABBIT_HIDE;
    @Shadow public static Item ARMOR_STAND;
    @Shadow public static Item IRON_HORSE_ARMOR;
    @Shadow public static Item GOLDEN_HORSE_ARMOR;
    @Shadow public static Item DIAMOND_HORSE_ARMOR;
    @Shadow public static Item LEATHER_HORSE_ARMOR;
    @Shadow public static Item LEAD;
    @Shadow public static Item NAME_TAG;
    @Shadow public static Item COMMAND_BLOCK_MINECART;
    @Shadow public static Item MUTTON;
    @Shadow public static Item COOKED_MUTTON;
    @Shadow public static Item WHITE_BANNER;
    @Shadow public static Item ORANGE_BANNER;
    @Shadow public static Item MAGENTA_BANNER;
    @Shadow public static Item LIGHT_BLUE_BANNER;
    @Shadow public static Item YELLOW_BANNER;
    @Shadow public static Item LIME_BANNER;
    @Shadow public static Item PINK_BANNER;
    @Shadow public static Item GRAY_BANNER;
    @Shadow public static Item LIGHT_GRAY_BANNER;
    @Shadow public static Item CYAN_BANNER;
    @Shadow public static Item PURPLE_BANNER;
    @Shadow public static Item BLUE_BANNER;
    @Shadow public static Item BROWN_BANNER;
    @Shadow public static Item GREEN_BANNER;
    @Shadow public static Item RED_BANNER;
    @Shadow public static Item BLACK_BANNER;
    @Shadow public static Item END_CRYSTAL;
    @Shadow public static Item CHORUS_FRUIT;
    @Shadow public static Item PIGLIN_BRUTE_SPAWN_EGG;
    @Shadow public static Item PILLAGER_SPAWN_EGG;
    @Shadow public static Item POLAR_BEAR_SPAWN_EGG;
    @Shadow public static Item PUFFERFISH_SPAWN_EGG;
    @Shadow public static Item RABBIT_SPAWN_EGG;
    @Shadow public static Item RAVAGER_SPAWN_EGG;
    @Shadow public static Item SALMON_SPAWN_EGG;
    @Shadow public static Item SHEEP_SPAWN_EGG;
    @Shadow public static Item SHULKER_SPAWN_EGG;
    @Shadow public static Item SILVERFISH_SPAWN_EGG;
    @Shadow public static Item SKELETON_SPAWN_EGG;
    @Shadow public static Item SKELETON_HORSE_SPAWN_EGG;
    @Shadow public static Item SLIME_SPAWN_EGG;
    @Shadow public static Item SPIDER_SPAWN_EGG;
    @Shadow public static Item SQUID_SPAWN_EGG;
    @Shadow public static Item STRAY_SPAWN_EGG;
    @Shadow public static Item STRIDER_SPAWN_EGG;
    @Shadow public static Item TRADER_LLAMA_SPAWN_EGG;
    @Shadow public static Item TROPICAL_FISH_SPAWN_EGG;
    @Shadow public static Item TURTLE_SPAWN_EGG;
    @Shadow public static Item VEX_SPAWN_EGG;
    @Shadow public static Item VILLAGER_SPAWN_EGG;
    @Shadow public static Item VINDICATOR_SPAWN_EGG;
    @Shadow public static Item WANDERING_TRADER_SPAWN_EGG;
    @Shadow public static Item WITCH_SPAWN_EGG;
    @Shadow public static Item WITHER_SKELETON_SPAWN_EGG;
    @Shadow public static Item WOLF_SPAWN_EGG;
    @Shadow public static Item ZOGLIN_SPAWN_EGG;
    @Shadow public static Item ZOMBIE_SPAWN_EGG;
    @Shadow public static Item ZOMBIE_HORSE_SPAWN_EGG;
    @Shadow public static Item ZOMBIE_VILLAGER_SPAWN_EGG;
    @Shadow public static Item ZOMBIFIED_PIGLIN_SPAWN_EGG;
    @Shadow public static Item EXPERIENCE_BOTTLE;
    @Shadow public static Item FIRE_CHARGE;
    @Shadow public static Item WRITABLE_BOOK;
    @Shadow public static Item WRITTEN_BOOK;
    @Shadow public static Item ITEM_FRAME;
    @Shadow public static Item GLOW_ITEM_FRAME;
    @Shadow public static Item FLOWER_POT;
    @Shadow public static Item CARROT;
    @Shadow public static Item POTATO;
    @Shadow public static Item BAKED_POTATO;
    @Shadow public static Item POISONOUS_POTATO;
    @Shadow public static Item MAP;
    @Shadow public static Item GOLDEN_CARROT;
    @Shadow public static Item SKELETON_SKULL;
    @Shadow public static Item WITHER_SKELETON_SKULL;
    @Shadow public static Item POPPED_CHORUS_FRUIT;
    @Shadow public static Item BEETROOT;
    @Shadow public static Item BEETROOT_SEEDS;
    @Shadow public static Item BEETROOT_SOUP;
    @Shadow public static Item DRAGON_BREATH;
    @Shadow public static Item SPLASH_POTION;
    @Shadow public static Item SPECTRAL_ARROW;
    @Shadow public static Item TIPPED_ARROW;
    @Shadow public static Item LINGERING_POTION;
    @Shadow public static Item SHIELD;
    @Shadow public static Item TOTEM_OF_UNDYING;
    @Shadow public static Item SHULKER_SHELL;
    @Shadow public static Item IRON_NUGGET;
    @Shadow public static Item KNOWLEDGE_BOOK;
    @Shadow public static Item DEBUG_STICK;
    @Shadow public static Item MUSIC_DISC_13;
    @Shadow public static Item MUSIC_DISC_CAT;
    @Shadow public static Item MUSIC_DISC_BLOCKS;
    @Shadow public static Item MUSIC_DISC_CHIRP;
    @Shadow public static Item MUSIC_DISC_FAR;
    @Shadow public static Item MUSIC_DISC_MALL;
    @Shadow public static Item MUSIC_DISC_MELLOHI;
    @Shadow public static Item MUSIC_DISC_STAL;
    @Shadow public static Item MUSIC_DISC_STRAD;
    @Shadow public static Item MUSIC_DISC_WARD;
    @Shadow public static Item MUSIC_DISC_11;
    @Shadow public static Item MUSIC_DISC_WAIT;
    @Shadow public static Item MUSIC_DISC_OTHERSIDE;
    @Shadow public static Item MUSIC_DISC_PIGSTEP;
    @Shadow public static Item TRIDENT;
    @Shadow public static Item PHANTOM_MEMBRANE;
    @Shadow public static Item NAUTILUS_SHELL;
    @Shadow public static Item HEART_OF_THE_SEA;
    @Shadow public static Item CROSSBOW;
    @Shadow public static Item SUSPICIOUS_STEW;
    @Shadow public static Item LOOM;
    @Shadow public static Item FLOWER_BANNER_PATTERN;
    @Shadow public static Item CREEPER_BANNER_PATTERN;
    @Shadow public static Item SKULL_BANNER_PATTERN;
    @Shadow public static Item MOJANG_BANNER_PATTERN;
    @Shadow public static Item GLOBE_BANNER_PATTERN;
    @Shadow public static Item PIGLIN_BANNER_PATTERN;
    @Shadow public static Item COMPOSTER;
    @Shadow public static Item BARREL;
    @Shadow public static Item SMOKER;
    @Shadow public static Item BLAST_FURNACE;
    @Shadow public static Item CARTOGRAPHY_TABLE;
    @Shadow public static Item FLETCHING_TABLE;
    @Shadow public static Item GRINDSTONE;
    @Shadow public static Item SMITHING_TABLE;
    @Shadow public static Item STONECUTTER;
    @Shadow public static Item BELL;
    @Shadow public static Item LANTERN;
    @Shadow public static Item SOUL_LANTERN;
    @Shadow public static Item SWEET_BERRIES;
    @Shadow public static Item GLOW_BERRIES;
    @Shadow public static Item CAMPFIRE;
    @Shadow public static Item SOUL_CAMPFIRE;
    @Shadow public static Item SHROOMLIGHT;
    @Shadow public static Item HONEYCOMB;
    @Shadow public static Item BEE_NEST;
    @Shadow public static Item BEEHIVE;
    @Shadow public static Item HONEY_BOTTLE;
    @Shadow public static Item HONEYCOMB_BLOCK;
    @Shadow public static Item LODESTONE;
    @Shadow public static Item CRYING_OBSIDIAN;
    @Shadow public static Item BLACKSTONE;
    @Shadow public static Item BLACKSTONE_SLAB;
    @Shadow public static Item BLACKSTONE_STAIRS;
    @Shadow public static Item GILDED_BLACKSTONE;
    @Shadow public static Item POLISHED_BLACKSTONE;
    @Shadow public static Item POLISHED_BLACKSTONE_SLAB;
    @Shadow public static Item POLISHED_BLACKSTONE_STAIRS;
    @Shadow public static Item CHISELED_POLISHED_BLACKSTONE;
    @Shadow public static Item POLISHED_BLACKSTONE_BRICKS;
    @Shadow public static Item POLISHED_BLACKSTONE_BRICK_SLAB;
    @Shadow public static Item POLISHED_BLACKSTONE_BRICK_STAIRS;
    @Shadow public static Item CRACKED_POLISHED_BLACKSTONE_BRICKS;
    @Shadow public static Item RESPAWN_ANCHOR;
    @Shadow public static Item CANDLE;
    @Shadow public static Item WHITE_CANDLE;
    @Shadow public static Item ORANGE_CANDLE;
    @Shadow public static Item MAGENTA_CANDLE;
    @Shadow public static Item LIGHT_BLUE_CANDLE;
    @Shadow public static Item YELLOW_CANDLE;
    @Shadow public static Item LIME_CANDLE;
    @Shadow public static Item PINK_CANDLE;
    @Shadow public static Item GRAY_CANDLE;
    @Shadow public static Item LIGHT_GRAY_CANDLE;
    @Shadow public static Item CYAN_CANDLE;
    @Shadow public static Item PURPLE_CANDLE;
    @Shadow public static Item BLUE_CANDLE;
    @Shadow public static Item BROWN_CANDLE;
    @Shadow public static Item GREEN_CANDLE;
    @Shadow public static Item RED_CANDLE;
    @Shadow public static Item BLACK_CANDLE;
    @Shadow public static Item SMALL_AMETHYST_BUD;
    @Shadow public static Item MEDIUM_AMETHYST_BUD;
    @Shadow public static Item LARGE_AMETHYST_BUD;
    @Shadow public static Item AMETHYST_CLUSTER;
    @Shadow public static Item POINTED_DRIPSTONE;

    @Shadow public abstract <T> Optional<T> createEmptyOptional(T of);

    @Shadow public abstract Item register(Block block);

    @Shadow public abstract Item register(Block block, ItemGroup group);

    @Shadow public abstract Item register(Block block, Optional<ItemGroup> group);

    @Shadow public abstract Item register(Block block, ItemGroup group, Block... blocks);

    @Shadow public abstract Item register(BlockItem item) ;

    @Shadow public abstract Item register(Block block, Item item);

    @Shadow public abstract Item register(String id, Item item);

    @Shadow public abstract Item register(Identifier id, Item item) ;

    {
        AIR = register((Block)Blocks.AIR, (Item)(new AirBlockItem(Blocks.AIR, new Item.Settings())));
        STONE = register(Blocks.STONE, ItemGroup.BUILDING_BLOCKS);
        GRANITE = register(Blocks.GRANITE, ItemGroup.BUILDING_BLOCKS);
        POLISHED_GRANITE = register(Blocks.POLISHED_GRANITE, ItemGroup.BUILDING_BLOCKS);
        DIORITE = register(Blocks.DIORITE, ItemGroup.BUILDING_BLOCKS);
        POLISHED_DIORITE = register(Blocks.POLISHED_DIORITE, ItemGroup.BUILDING_BLOCKS);
        ANDESITE = register(Blocks.ANDESITE, ItemGroup.BUILDING_BLOCKS);
        POLISHED_ANDESITE = register(Blocks.POLISHED_ANDESITE, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE = register(Blocks.DEEPSLATE, ItemGroup.BUILDING_BLOCKS);
        COBBLED_DEEPSLATE = register(Blocks.COBBLED_DEEPSLATE, ItemGroup.BUILDING_BLOCKS);
        POLISHED_DEEPSLATE = register(Blocks.POLISHED_DEEPSLATE, ItemGroup.BUILDING_BLOCKS);
        CALCITE = register(Blocks.CALCITE, ItemGroup.BUILDING_BLOCKS);
        TUFF = register(Blocks.TUFF, ItemGroup.BUILDING_BLOCKS);
        DRIPSTONE_BLOCK = register(Blocks.DRIPSTONE_BLOCK, ItemGroup.BUILDING_BLOCKS);
        GRASS_BLOCK = register(Blocks.GRASS_BLOCK, ItemGroup.BUILDING_BLOCKS);
        DIRT = register(Blocks.DIRT, ItemGroup.BUILDING_BLOCKS);
        COARSE_DIRT = register(Blocks.COARSE_DIRT, ItemGroup.BUILDING_BLOCKS);
        PODZOL = register(Blocks.PODZOL, ItemGroup.BUILDING_BLOCKS);
        ROOTED_DIRT = register(Blocks.ROOTED_DIRT, ItemGroup.BUILDING_BLOCKS);
        CRIMSON_NYLIUM = register(Blocks.CRIMSON_NYLIUM, ItemGroup.BUILDING_BLOCKS);
        WARPED_NYLIUM = register(Blocks.WARPED_NYLIUM, ItemGroup.BUILDING_BLOCKS);
        COBBLESTONE = register(Blocks.COBBLESTONE, ItemGroup.BUILDING_BLOCKS);
        OAK_PLANKS = register(Blocks.OAK_PLANKS, ItemGroup.BUILDING_BLOCKS);
        SPRUCE_PLANKS = register(Blocks.SPRUCE_PLANKS, ItemGroup.BUILDING_BLOCKS);
        BIRCH_PLANKS = register(Blocks.BIRCH_PLANKS, ItemGroup.BUILDING_BLOCKS);
        JUNGLE_PLANKS = register(Blocks.JUNGLE_PLANKS, ItemGroup.BUILDING_BLOCKS);
        ACACIA_PLANKS = register(Blocks.ACACIA_PLANKS, ItemGroup.BUILDING_BLOCKS);
        DARK_OAK_PLANKS = register(Blocks.DARK_OAK_PLANKS, ItemGroup.BUILDING_BLOCKS);
        CRIMSON_PLANKS = register(Blocks.CRIMSON_PLANKS, ItemGroup.BUILDING_BLOCKS);
        WARPED_PLANKS = register(Blocks.WARPED_PLANKS, ItemGroup.BUILDING_BLOCKS);
        OAK_SAPLING = register(Blocks.OAK_SAPLING, ItemGroup.DECORATIONS);
        SPRUCE_SAPLING = register(Blocks.SPRUCE_SAPLING, ItemGroup.DECORATIONS);
        BIRCH_SAPLING = register(Blocks.BIRCH_SAPLING, ItemGroup.DECORATIONS);
        JUNGLE_SAPLING = register(Blocks.JUNGLE_SAPLING, ItemGroup.DECORATIONS);
        ACACIA_SAPLING = register(Blocks.ACACIA_SAPLING, ItemGroup.DECORATIONS);
        DARK_OAK_SAPLING = register(Blocks.DARK_OAK_SAPLING, ItemGroup.DECORATIONS);
        BEDROCK = register(Blocks.BEDROCK, ItemGroup.BUILDING_BLOCKS);
        SAND = register(Blocks.SAND, ItemGroup.BUILDING_BLOCKS);
        RED_SAND = register(Blocks.RED_SAND, ItemGroup.BUILDING_BLOCKS);
        GRAVEL = register(Blocks.GRAVEL, ItemGroup.BUILDING_BLOCKS);
        COAL_ORE = register(Blocks.COAL_ORE, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_COAL_ORE = register(Blocks.DEEPSLATE_COAL_ORE, ItemGroup.BUILDING_BLOCKS);
        IRON_ORE = register(Blocks.IRON_ORE, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_IRON_ORE = register(Blocks.DEEPSLATE_IRON_ORE, ItemGroup.BUILDING_BLOCKS);
        COPPER_ORE = register(Blocks.COPPER_ORE, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_COPPER_ORE = register(Blocks.DEEPSLATE_COPPER_ORE, ItemGroup.BUILDING_BLOCKS);
        GOLD_ORE = register(Blocks.GOLD_ORE, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_GOLD_ORE = register(Blocks.DEEPSLATE_GOLD_ORE, ItemGroup.BUILDING_BLOCKS);
        REDSTONE_ORE = register(Blocks.REDSTONE_ORE, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_REDSTONE_ORE = register(Blocks.DEEPSLATE_REDSTONE_ORE, ItemGroup.BUILDING_BLOCKS);
        EMERALD_ORE = register(Blocks.EMERALD_ORE, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_EMERALD_ORE = register(Blocks.DEEPSLATE_EMERALD_ORE, ItemGroup.BUILDING_BLOCKS);
        LAPIS_ORE = register(Blocks.LAPIS_ORE, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_LAPIS_ORE = register(Blocks.DEEPSLATE_LAPIS_ORE, ItemGroup.BUILDING_BLOCKS);
        DIAMOND_ORE = register(Blocks.DIAMOND_ORE, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_DIAMOND_ORE = register(Blocks.DEEPSLATE_DIAMOND_ORE, ItemGroup.BUILDING_BLOCKS);
        NETHER_GOLD_ORE = register(Blocks.NETHER_GOLD_ORE, ItemGroup.BUILDING_BLOCKS);
        NETHER_QUARTZ_ORE = register(Blocks.NETHER_QUARTZ_ORE, ItemGroup.BUILDING_BLOCKS);
        ANCIENT_DEBRIS = register(new BlockItem(Blocks.ANCIENT_DEBRIS, (new Item.Settings()).group(ItemGroup.BUILDING_BLOCKS).fireproof()));
        COAL_BLOCK = register(Blocks.COAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        RAW_IRON_BLOCK = register(Blocks.RAW_IRON_BLOCK, ItemGroup.BUILDING_BLOCKS);
        RAW_COPPER_BLOCK = register(Blocks.RAW_COPPER_BLOCK, ItemGroup.BUILDING_BLOCKS);
        RAW_GOLD_BLOCK = register(Blocks.RAW_GOLD_BLOCK, ItemGroup.BUILDING_BLOCKS);
        AMETHYST_BLOCK = register(Blocks.AMETHYST_BLOCK, ItemGroup.BUILDING_BLOCKS);
        BUDDING_AMETHYST = register(Blocks.BUDDING_AMETHYST, ItemGroup.BUILDING_BLOCKS);
        IRON_BLOCK = register(Blocks.IRON_BLOCK, ItemGroup.BUILDING_BLOCKS);
        COPPER_BLOCK = register(Blocks.COPPER_BLOCK, ItemGroup.BUILDING_BLOCKS);
        GOLD_BLOCK = register(Blocks.GOLD_BLOCK, ItemGroup.BUILDING_BLOCKS);
        DIAMOND_BLOCK = register(Blocks.DIAMOND_BLOCK, ItemGroup.BUILDING_BLOCKS);
        NETHERITE_BLOCK = register(new BlockItem(Blocks.NETHERITE_BLOCK, (new Item.Settings()).group(ItemGroup.BUILDING_BLOCKS).fireproof()));
        EXPOSED_COPPER = register(Blocks.EXPOSED_COPPER, ItemGroup.BUILDING_BLOCKS);
        WEATHERED_COPPER = register(Blocks.WEATHERED_COPPER, ItemGroup.BUILDING_BLOCKS);
        OXIDIZED_COPPER = register(Blocks.OXIDIZED_COPPER, ItemGroup.BUILDING_BLOCKS);
        CUT_COPPER = register(Blocks.CUT_COPPER, ItemGroup.BUILDING_BLOCKS);
        EXPOSED_CUT_COPPER = register(Blocks.EXPOSED_CUT_COPPER, ItemGroup.BUILDING_BLOCKS);
        WEATHERED_CUT_COPPER = register(Blocks.WEATHERED_CUT_COPPER, ItemGroup.BUILDING_BLOCKS);
        OXIDIZED_CUT_COPPER = register(Blocks.OXIDIZED_CUT_COPPER, ItemGroup.BUILDING_BLOCKS);
        CUT_COPPER_STAIRS = register(Blocks.CUT_COPPER_STAIRS, ItemGroup.BUILDING_BLOCKS);
        EXPOSED_CUT_COPPER_STAIRS = register(Blocks.EXPOSED_CUT_COPPER_STAIRS, ItemGroup.BUILDING_BLOCKS);
        WEATHERED_CUT_COPPER_STAIRS = register(Blocks.WEATHERED_CUT_COPPER_STAIRS, ItemGroup.BUILDING_BLOCKS);
        OXIDIZED_CUT_COPPER_STAIRS = register(Blocks.OXIDIZED_CUT_COPPER_STAIRS, ItemGroup.BUILDING_BLOCKS);
        CUT_COPPER_SLAB = register(Blocks.CUT_COPPER_SLAB, ItemGroup.BUILDING_BLOCKS);
        EXPOSED_CUT_COPPER_SLAB = register(Blocks.EXPOSED_CUT_COPPER_SLAB, ItemGroup.BUILDING_BLOCKS);
        WEATHERED_CUT_COPPER_SLAB = register(Blocks.WEATHERED_CUT_COPPER_SLAB, ItemGroup.BUILDING_BLOCKS);
        OXIDIZED_CUT_COPPER_SLAB = register(Blocks.OXIDIZED_CUT_COPPER_SLAB, ItemGroup.BUILDING_BLOCKS);
        WAXED_COPPER = register(Blocks.WAXED_COPPER_BLOCK, ItemGroup.BUILDING_BLOCKS);
        WAXED_EXPOSED_COPPER = register(Blocks.WAXED_EXPOSED_COPPER, ItemGroup.BUILDING_BLOCKS);
        WAXED_WEATHERED_COPPER = register(Blocks.WAXED_WEATHERED_COPPER, ItemGroup.BUILDING_BLOCKS);
        WAXED_OXIDIZED_COPPER = register(Blocks.WAXED_OXIDIZED_COPPER, ItemGroup.BUILDING_BLOCKS);
        WAXED_CUT_COPPER = register(Blocks.WAXED_CUT_COPPER, ItemGroup.BUILDING_BLOCKS);
        WAXED_EXPOSED_CUT_COPPER = register(Blocks.WAXED_EXPOSED_CUT_COPPER, ItemGroup.BUILDING_BLOCKS);
        WAXED_WEATHERED_CUT_COPPER = register(Blocks.WAXED_WEATHERED_CUT_COPPER, ItemGroup.BUILDING_BLOCKS);
        WAXED_OXIDIZED_CUT_COPPER = register(Blocks.WAXED_OXIDIZED_CUT_COPPER, ItemGroup.BUILDING_BLOCKS);
        WAXED_CUT_COPPER_STAIRS = register(Blocks.WAXED_CUT_COPPER_STAIRS, ItemGroup.BUILDING_BLOCKS);
        WAXED_EXPOSED_CUT_COPPER_STAIRS = register(Blocks.WAXED_EXPOSED_CUT_COPPER_STAIRS, ItemGroup.BUILDING_BLOCKS);
        WAXED_WEATHERED_CUT_COPPER_STAIRS = register(Blocks.WAXED_WEATHERED_CUT_COPPER_STAIRS, ItemGroup.BUILDING_BLOCKS);
        WAXED_OXIDIZED_CUT_COPPER_STAIRS = register(Blocks.WAXED_OXIDIZED_CUT_COPPER_STAIRS, ItemGroup.BUILDING_BLOCKS);
        WAXED_CUT_COPPER_SLAB = register(Blocks.WAXED_CUT_COPPER_SLAB, ItemGroup.BUILDING_BLOCKS);
        WAXED_EXPOSED_CUT_COPPER_SLAB = register(Blocks.WAXED_EXPOSED_CUT_COPPER_SLAB, ItemGroup.BUILDING_BLOCKS);
        WAXED_WEATHERED_CUT_COPPER_SLAB = register(Blocks.WAXED_WEATHERED_CUT_COPPER_SLAB, ItemGroup.BUILDING_BLOCKS);
        WAXED_OXIDIZED_CUT_COPPER_SLAB = register(Blocks.WAXED_OXIDIZED_CUT_COPPER_SLAB, ItemGroup.BUILDING_BLOCKS);
        OAK_LOG = register(Blocks.OAK_LOG, ItemGroup.BUILDING_BLOCKS);
        SPRUCE_LOG = register(Blocks.SPRUCE_LOG, ItemGroup.BUILDING_BLOCKS);
        BIRCH_LOG = register(Blocks.BIRCH_LOG, ItemGroup.BUILDING_BLOCKS);
        JUNGLE_LOG = register(Blocks.JUNGLE_LOG, ItemGroup.BUILDING_BLOCKS);
        ACACIA_LOG = register(Blocks.ACACIA_LOG, ItemGroup.BUILDING_BLOCKS);
        DARK_OAK_LOG = register(Blocks.DARK_OAK_LOG, ItemGroup.BUILDING_BLOCKS);
        CRIMSON_STEM = register(Blocks.CRIMSON_STEM, ItemGroup.BUILDING_BLOCKS);
        WARPED_STEM = register(Blocks.WARPED_STEM, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_OAK_LOG = register(Blocks.STRIPPED_OAK_LOG, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_SPRUCE_LOG = register(Blocks.STRIPPED_SPRUCE_LOG, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_BIRCH_LOG = register(Blocks.STRIPPED_BIRCH_LOG, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_JUNGLE_LOG = register(Blocks.STRIPPED_JUNGLE_LOG, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_ACACIA_LOG = register(Blocks.STRIPPED_ACACIA_LOG, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_DARK_OAK_LOG = register(Blocks.STRIPPED_DARK_OAK_LOG, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_CRIMSON_STEM = register(Blocks.STRIPPED_CRIMSON_STEM, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_WARPED_STEM = register(Blocks.STRIPPED_WARPED_STEM, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_OAK_WOOD = register(Blocks.STRIPPED_OAK_WOOD, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_SPRUCE_WOOD = register(Blocks.STRIPPED_SPRUCE_WOOD, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_BIRCH_WOOD = register(Blocks.STRIPPED_BIRCH_WOOD, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_JUNGLE_WOOD = register(Blocks.STRIPPED_JUNGLE_WOOD, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_ACACIA_WOOD = register(Blocks.STRIPPED_ACACIA_WOOD, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_DARK_OAK_WOOD = register(Blocks.STRIPPED_DARK_OAK_WOOD, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_CRIMSON_HYPHAE = register(Blocks.STRIPPED_CRIMSON_HYPHAE, ItemGroup.BUILDING_BLOCKS);
        STRIPPED_WARPED_HYPHAE = register(Blocks.STRIPPED_WARPED_HYPHAE, ItemGroup.BUILDING_BLOCKS);
        OAK_WOOD = register(Blocks.OAK_WOOD, ItemGroup.BUILDING_BLOCKS);
        SPRUCE_WOOD = register(Blocks.SPRUCE_WOOD, ItemGroup.BUILDING_BLOCKS);
        BIRCH_WOOD = register(Blocks.BIRCH_WOOD, ItemGroup.BUILDING_BLOCKS);
        JUNGLE_WOOD = register(Blocks.JUNGLE_WOOD, ItemGroup.BUILDING_BLOCKS);
        ACACIA_WOOD = register(Blocks.ACACIA_WOOD, ItemGroup.BUILDING_BLOCKS);
        DARK_OAK_WOOD = register(Blocks.DARK_OAK_WOOD, ItemGroup.BUILDING_BLOCKS);
        CRIMSON_HYPHAE = register(Blocks.CRIMSON_HYPHAE, ItemGroup.BUILDING_BLOCKS);
        WARPED_HYPHAE = register(Blocks.WARPED_HYPHAE, ItemGroup.BUILDING_BLOCKS);
        OAK_LEAVES = register(Blocks.OAK_LEAVES, ItemGroup.DECORATIONS);
        SPRUCE_LEAVES = register(Blocks.SPRUCE_LEAVES, ItemGroup.DECORATIONS);
        BIRCH_LEAVES = register(Blocks.BIRCH_LEAVES, ItemGroup.DECORATIONS);
        JUNGLE_LEAVES = register(Blocks.JUNGLE_LEAVES, ItemGroup.DECORATIONS);
        ACACIA_LEAVES = register(Blocks.ACACIA_LEAVES, ItemGroup.DECORATIONS);
        DARK_OAK_LEAVES = register(Blocks.DARK_OAK_LEAVES, ItemGroup.DECORATIONS);
        AZALEA_LEAVES = register(Blocks.AZALEA_LEAVES, ItemGroup.DECORATIONS);
        AZALEA_LEAVES_FLOWERS = register(Blocks.FLOWERING_AZALEA_LEAVES, ItemGroup.DECORATIONS);
        SPONGE = register(Blocks.SPONGE, ItemGroup.BUILDING_BLOCKS);
        WET_SPONGE = register(Blocks.WET_SPONGE, ItemGroup.BUILDING_BLOCKS);
        GLASS = register(Blocks.GLASS, ItemGroup.BUILDING_BLOCKS);
        TINTED_GLASS = register(Blocks.TINTED_GLASS, ItemGroup.BUILDING_BLOCKS);
        LAPIS_BLOCK = register(Blocks.LAPIS_BLOCK, ItemGroup.BUILDING_BLOCKS);
        SANDSTONE = register(Blocks.SANDSTONE, ItemGroup.BUILDING_BLOCKS);
        CHISELED_SANDSTONE = register(Blocks.CHISELED_SANDSTONE, ItemGroup.BUILDING_BLOCKS);
        CUT_SANDSTONE = register(Blocks.CUT_SANDSTONE, ItemGroup.BUILDING_BLOCKS);
        COBWEB = register(Blocks.COBWEB, ItemGroup.DECORATIONS);
        GRASS = register(Blocks.GRASS, ItemGroup.DECORATIONS);
        FERN = register(Blocks.FERN, ItemGroup.DECORATIONS);
        AZALEA = register(Blocks.AZALEA, ItemGroup.DECORATIONS);
        FLOWERING_AZALEA = register(Blocks.FLOWERING_AZALEA, ItemGroup.DECORATIONS);
        DEAD_BUSH = register(Blocks.DEAD_BUSH, ItemGroup.DECORATIONS);
        SEAGRASS = register(Blocks.SEAGRASS, ItemGroup.DECORATIONS);
        SEA_PICKLE = register(Blocks.SEA_PICKLE, ItemGroup.DECORATIONS);
        WHITE_WOOL = register(Blocks.WHITE_WOOL, ItemGroup.BUILDING_BLOCKS);
        ORANGE_WOOL = register(Blocks.ORANGE_WOOL, ItemGroup.BUILDING_BLOCKS);
        MAGENTA_WOOL = register(Blocks.MAGENTA_WOOL, ItemGroup.BUILDING_BLOCKS);
        LIGHT_BLUE_WOOL = register(Blocks.LIGHT_BLUE_WOOL, ItemGroup.BUILDING_BLOCKS);
        YELLOW_WOOL = register(Blocks.YELLOW_WOOL, ItemGroup.BUILDING_BLOCKS);
        LIME_WOOL = register(Blocks.LIME_WOOL, ItemGroup.BUILDING_BLOCKS);
        PINK_WOOL = register(Blocks.PINK_WOOL, ItemGroup.BUILDING_BLOCKS);
        GRAY_WOOL = register(Blocks.GRAY_WOOL, ItemGroup.BUILDING_BLOCKS);
        LIGHT_GRAY_WOOL = register(Blocks.LIGHT_GRAY_WOOL, ItemGroup.BUILDING_BLOCKS);
        CYAN_WOOL = register(Blocks.CYAN_WOOL, ItemGroup.BUILDING_BLOCKS);
        PURPLE_WOOL = register(Blocks.PURPLE_WOOL, ItemGroup.BUILDING_BLOCKS);
        BLUE_WOOL = register(Blocks.BLUE_WOOL, ItemGroup.BUILDING_BLOCKS);
        BROWN_WOOL = register(Blocks.BROWN_WOOL, ItemGroup.BUILDING_BLOCKS);
        GREEN_WOOL = register(Blocks.GREEN_WOOL, ItemGroup.BUILDING_BLOCKS);
        RED_WOOL = register(Blocks.RED_WOOL, ItemGroup.BUILDING_BLOCKS);
        BLACK_WOOL = register(Blocks.BLACK_WOOL, ItemGroup.BUILDING_BLOCKS);
        DANDELION = register(Blocks.DANDELION, ItemGroup.DECORATIONS);
        POPPY = register(Blocks.POPPY, ItemGroup.DECORATIONS);
        BLUE_ORCHID = register(Blocks.BLUE_ORCHID, ItemGroup.DECORATIONS);
        ALLIUM = register(Blocks.ALLIUM, ItemGroup.DECORATIONS);
        AZURE_BLUET = register(Blocks.AZURE_BLUET, ItemGroup.DECORATIONS);
        RED_TULIP = register(Blocks.RED_TULIP, ItemGroup.DECORATIONS);
        ORANGE_TULIP = register(Blocks.ORANGE_TULIP, ItemGroup.DECORATIONS);
        WHITE_TULIP = register(Blocks.WHITE_TULIP, ItemGroup.DECORATIONS);
        PINK_TULIP = register(Blocks.PINK_TULIP, ItemGroup.DECORATIONS);
        OXEYE_DAISY = register(Blocks.OXEYE_DAISY, ItemGroup.DECORATIONS);
        CORNFLOWER = register(Blocks.CORNFLOWER, ItemGroup.DECORATIONS);
        LILY_OF_THE_VALLEY = register(Blocks.LILY_OF_THE_VALLEY, ItemGroup.DECORATIONS);
        WITHER_ROSE = register(Blocks.WITHER_ROSE, ItemGroup.DECORATIONS);
        SPORE_BLOSSOM = register(Blocks.SPORE_BLOSSOM, ItemGroup.DECORATIONS);
        BROWN_MUSHROOM = register(Blocks.BROWN_MUSHROOM, ItemGroup.DECORATIONS);
        RED_MUSHROOM = register(Blocks.RED_MUSHROOM, ItemGroup.DECORATIONS);
        CRIMSON_FUNGUS = register(Blocks.CRIMSON_FUNGUS, ItemGroup.DECORATIONS);
        WARPED_FUNGUS = register(Blocks.WARPED_FUNGUS, ItemGroup.DECORATIONS);
        CRIMSON_ROOTS = register(Blocks.CRIMSON_ROOTS, ItemGroup.DECORATIONS);
        WARPED_ROOTS = register(Blocks.WARPED_ROOTS, ItemGroup.DECORATIONS);
        NETHER_SPROUTS = register(Blocks.NETHER_SPROUTS, ItemGroup.DECORATIONS);
        WEEPING_VINES = register(Blocks.WEEPING_VINES, ItemGroup.DECORATIONS);
        TWISTING_VINES = register(Blocks.TWISTING_VINES, ItemGroup.DECORATIONS);
        SUGAR_CANE = register(Blocks.SUGAR_CANE, ItemGroup.DECORATIONS);
        KELP = register(Blocks.KELP, ItemGroup.DECORATIONS);
        MOSS_CARPET = register(Blocks.MOSS_CARPET, ItemGroup.DECORATIONS);
        MOSS_BLOCK = register(Blocks.MOSS_BLOCK, ItemGroup.DECORATIONS);
        HANGING_ROOTS = register(Blocks.HANGING_ROOTS, ItemGroup.DECORATIONS);
        BIG_DRIPLEAF = register(Blocks.BIG_DRIPLEAF, ItemGroup.DECORATIONS);
        SMALL_DRIPLEAF = register((BlockItem)(new TallBlockItem(Blocks.SMALL_DRIPLEAF, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        BAMBOO = register(Blocks.BAMBOO, ItemGroup.DECORATIONS);
        OAK_SLAB = register(Blocks.OAK_SLAB, ItemGroup.BUILDING_BLOCKS);
        SPRUCE_SLAB = register(Blocks.SPRUCE_SLAB, ItemGroup.BUILDING_BLOCKS);
        BIRCH_SLAB = register(Blocks.BIRCH_SLAB, ItemGroup.BUILDING_BLOCKS);
        JUNGLE_SLAB = register(Blocks.JUNGLE_SLAB, ItemGroup.BUILDING_BLOCKS);
        ACACIA_SLAB = register(Blocks.ACACIA_SLAB, ItemGroup.BUILDING_BLOCKS);
        DARK_OAK_SLAB = register(Blocks.DARK_OAK_SLAB, ItemGroup.BUILDING_BLOCKS);
        CRIMSON_SLAB = register(Blocks.CRIMSON_SLAB, ItemGroup.BUILDING_BLOCKS);
        WARPED_SLAB = register(Blocks.WARPED_SLAB, ItemGroup.BUILDING_BLOCKS);
        STONE_SLAB = register(Blocks.STONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_STONE_SLAB = register(Blocks.SMOOTH_STONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        SANDSTONE_SLAB = register(Blocks.SANDSTONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        CUT_SANDSTONE_SLAB = register(Blocks.CUT_SANDSTONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        PETRIFIED_OAK_SLAB = register(Blocks.PETRIFIED_OAK_SLAB, ItemGroup.BUILDING_BLOCKS);
        COBBLESTONE_SLAB = register(Blocks.COBBLESTONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        BRICK_SLAB = register(Blocks.BRICK_SLAB, ItemGroup.BUILDING_BLOCKS);
        STONE_BRICK_SLAB = register(Blocks.STONE_BRICK_SLAB, ItemGroup.BUILDING_BLOCKS);
        NETHER_BRICK_SLAB = register(Blocks.NETHER_BRICK_SLAB, ItemGroup.BUILDING_BLOCKS);
        QUARTZ_SLAB = register(Blocks.QUARTZ_SLAB, ItemGroup.BUILDING_BLOCKS);
        RED_SANDSTONE_SLAB = register(Blocks.RED_SANDSTONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        CUT_RED_SANDSTONE_SLAB = register(Blocks.CUT_RED_SANDSTONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        PURPUR_SLAB = register(Blocks.PURPUR_SLAB, ItemGroup.BUILDING_BLOCKS);
        PRISMARINE_SLAB = register(Blocks.PRISMARINE_SLAB, ItemGroup.BUILDING_BLOCKS);
        PRISMARINE_BRICK_SLAB = register(Blocks.PRISMARINE_BRICK_SLAB, ItemGroup.BUILDING_BLOCKS);
        DARK_PRISMARINE_SLAB = register(Blocks.DARK_PRISMARINE_SLAB, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_QUARTZ = register(Blocks.SMOOTH_QUARTZ, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_RED_SANDSTONE = register(Blocks.SMOOTH_RED_SANDSTONE, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_SANDSTONE = register(Blocks.SMOOTH_SANDSTONE, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_STONE = register(Blocks.SMOOTH_STONE, ItemGroup.BUILDING_BLOCKS);
        BRICKS = register(Blocks.BRICKS, ItemGroup.BUILDING_BLOCKS);
        BOOKSHELF = register(Blocks.BOOKSHELF, ItemGroup.BUILDING_BLOCKS);
        MOSSY_COBBLESTONE = register(Blocks.MOSSY_COBBLESTONE, ItemGroup.BUILDING_BLOCKS);
        OBSIDIAN = register(Blocks.OBSIDIAN, ItemGroup.BUILDING_BLOCKS);
        TORCH = register((BlockItem)(new WallStandingBlockItem(Blocks.TORCH, Blocks.WALL_TORCH, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        END_ROD = register(Blocks.END_ROD, ItemGroup.DECORATIONS);
        CHORUS_PLANT = register(Blocks.CHORUS_PLANT, ItemGroup.DECORATIONS);
        CHORUS_FLOWER = register(Blocks.CHORUS_FLOWER, ItemGroup.DECORATIONS);
        PURPUR_BLOCK = register(Blocks.PURPUR_BLOCK, ItemGroup.BUILDING_BLOCKS);
        PURPUR_PILLAR = register(Blocks.PURPUR_PILLAR, ItemGroup.BUILDING_BLOCKS);
        PURPUR_STAIRS = register(Blocks.PURPUR_STAIRS, ItemGroup.BUILDING_BLOCKS);
        SPAWNER = register(new BlockItem(Blocks.SPAWNER, (new Item.Settings()).rarity(Rarity.EPIC)));
        OAK_STAIRS = register(Blocks.OAK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        CHEST = register(Blocks.CHEST, ItemGroup.DECORATIONS);
        CRAFTING_TABLE = register(Blocks.CRAFTING_TABLE, ItemGroup.DECORATIONS);
        FARMLAND = register(Blocks.FARMLAND, ItemGroup.DECORATIONS);
        FURNACE = register(Blocks.FURNACE, ItemGroup.DECORATIONS);
        LADDER = register(Blocks.LADDER, ItemGroup.DECORATIONS);
        COBBLESTONE_STAIRS = register(Blocks.COBBLESTONE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        SNOW = register(Blocks.SNOW, ItemGroup.DECORATIONS);
        ICE = register(Blocks.ICE, ItemGroup.BUILDING_BLOCKS);
        SNOW_BLOCK = register(Blocks.SNOW_BLOCK, ItemGroup.BUILDING_BLOCKS);
        CACTUS = register(Blocks.CACTUS, ItemGroup.DECORATIONS);
        CLAY = register(Blocks.CLAY, ItemGroup.BUILDING_BLOCKS);
        JUKEBOX = register(Blocks.JUKEBOX, ItemGroup.DECORATIONS);
        OAK_FENCE = register(Blocks.OAK_FENCE, ItemGroup.DECORATIONS);
        SPRUCE_FENCE = register(Blocks.SPRUCE_FENCE, ItemGroup.DECORATIONS);
        BIRCH_FENCE = register(Blocks.BIRCH_FENCE, ItemGroup.DECORATIONS);
        JUNGLE_FENCE = register(Blocks.JUNGLE_FENCE, ItemGroup.DECORATIONS);
        ACACIA_FENCE = register(Blocks.ACACIA_FENCE, ItemGroup.DECORATIONS);
        DARK_OAK_FENCE = register(Blocks.DARK_OAK_FENCE, ItemGroup.DECORATIONS);
        CRIMSON_FENCE = register(Blocks.CRIMSON_FENCE, ItemGroup.DECORATIONS);
        WARPED_FENCE = register(Blocks.WARPED_FENCE, ItemGroup.DECORATIONS);
        PUMPKIN = register(Blocks.PUMPKIN, ItemGroup.BUILDING_BLOCKS);
        CARVED_PUMPKIN = register(Blocks.CARVED_PUMPKIN, ItemGroup.BUILDING_BLOCKS);
        JACK_O_LANTERN = register(Blocks.JACK_O_LANTERN, ItemGroup.BUILDING_BLOCKS);
        NETHERRACK = register(Blocks.NETHERRACK, ItemGroup.BUILDING_BLOCKS);
        SOUL_SAND = register(Blocks.SOUL_SAND, ItemGroup.BUILDING_BLOCKS);
        SOUL_SOIL = register(Blocks.SOUL_SOIL, ItemGroup.BUILDING_BLOCKS);
        BASALT = register(Blocks.BASALT, ItemGroup.BUILDING_BLOCKS);
        POLISHED_BASALT = register(Blocks.POLISHED_BASALT, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_BASALT = register(Blocks.SMOOTH_BASALT, ItemGroup.BUILDING_BLOCKS);
        SOUL_TORCH = register((BlockItem)(new WallStandingBlockItem(Blocks.SOUL_TORCH, Blocks.SOUL_WALL_TORCH, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        GLOWSTONE = register(Blocks.GLOWSTONE, ItemGroup.BUILDING_BLOCKS);
        INFESTED_STONE = register(Blocks.INFESTED_STONE, ItemGroup.DECORATIONS);
        INFESTED_COBBLESTONE = register(Blocks.INFESTED_COBBLESTONE, ItemGroup.DECORATIONS);
        INFESTED_STONE_BRICKS = register(Blocks.INFESTED_STONE_BRICKS, ItemGroup.DECORATIONS);
        INFESTED_MOSSY_STONE_BRICKS = register(Blocks.INFESTED_MOSSY_STONE_BRICKS, ItemGroup.DECORATIONS);
        INFESTED_CRACKED_STONE_BRICKS = register(Blocks.INFESTED_CRACKED_STONE_BRICKS, ItemGroup.DECORATIONS);
        INFESTED_CHISELED_STONE_BRICKS = register(Blocks.INFESTED_CHISELED_STONE_BRICKS, ItemGroup.DECORATIONS);
        INFESTED_DEEPSLATE = register(Blocks.INFESTED_DEEPSLATE, ItemGroup.DECORATIONS);
        STONE_BRICKS = register(Blocks.STONE_BRICKS, ItemGroup.BUILDING_BLOCKS);
        MOSSY_STONE_BRICKS = register(Blocks.MOSSY_STONE_BRICKS, ItemGroup.BUILDING_BLOCKS);
        CRACKED_STONE_BRICKS = register(Blocks.CRACKED_STONE_BRICKS, ItemGroup.BUILDING_BLOCKS);
        CHISELED_STONE_BRICKS = register(Blocks.CHISELED_STONE_BRICKS, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_BRICKS = register(Blocks.DEEPSLATE_BRICKS, ItemGroup.BUILDING_BLOCKS);
        CRACKED_DEEPSLATE_BRICKS = register(Blocks.CRACKED_DEEPSLATE_BRICKS, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_TILES = register(Blocks.DEEPSLATE_TILES, ItemGroup.BUILDING_BLOCKS);
        CRACKED_DEEPSLATE_TILES = register(Blocks.CRACKED_DEEPSLATE_TILES, ItemGroup.BUILDING_BLOCKS);
        CHISELED_DEEPSLATE = register(Blocks.CHISELED_DEEPSLATE, ItemGroup.BUILDING_BLOCKS);
        BROWN_MUSHROOM_BLOCK = register(Blocks.BROWN_MUSHROOM_BLOCK, ItemGroup.DECORATIONS);
        RED_MUSHROOM_BLOCK = register(Blocks.RED_MUSHROOM_BLOCK, ItemGroup.DECORATIONS);
        MUSHROOM_STEM = register(Blocks.MUSHROOM_STEM, ItemGroup.DECORATIONS);
        IRON_BARS = register(Blocks.IRON_BARS, ItemGroup.DECORATIONS);
        CHAIN = register(Blocks.CHAIN, ItemGroup.DECORATIONS);
        GLASS_PANE = register(Blocks.GLASS_PANE, ItemGroup.DECORATIONS);
        MELON = register(Blocks.MELON, ItemGroup.BUILDING_BLOCKS);
        VINE = register(Blocks.VINE, ItemGroup.DECORATIONS);
        GLOW_LICHEN = register(Blocks.GLOW_LICHEN, ItemGroup.DECORATIONS);
        BRICK_STAIRS = register(Blocks.BRICK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        STONE_BRICK_STAIRS = register(Blocks.STONE_BRICK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        MYCELIUM = register(Blocks.MYCELIUM, ItemGroup.BUILDING_BLOCKS);
        LILY_PAD = register((BlockItem)(new LilyPadItem(Blocks.LILY_PAD, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        NETHER_BRICKS = register(Blocks.NETHER_BRICKS, ItemGroup.BUILDING_BLOCKS);
        CRACKED_NETHER_BRICKS = register(Blocks.CRACKED_NETHER_BRICKS, ItemGroup.BUILDING_BLOCKS);
        CHISELED_NETHER_BRICKS = register(Blocks.CHISELED_NETHER_BRICKS, ItemGroup.BUILDING_BLOCKS);
        NETHER_BRICK_FENCE = register(Blocks.NETHER_BRICK_FENCE, ItemGroup.DECORATIONS);
        NETHER_BRICK_STAIRS = register(Blocks.NETHER_BRICK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        ENCHANTING_TABLE = register(Blocks.ENCHANTING_TABLE, ItemGroup.DECORATIONS);
        END_PORTAL_FRAME = register(Blocks.END_PORTAL_FRAME, ItemGroup.DECORATIONS);
        END_STONE = register(Blocks.END_STONE, ItemGroup.BUILDING_BLOCKS);
        END_STONE_BRICKS = register(Blocks.END_STONE_BRICKS, ItemGroup.BUILDING_BLOCKS);
        DRAGON_EGG = register(new BlockItem(Blocks.DRAGON_EGG, (new Item.Settings()).rarity(Rarity.EPIC)));
        SANDSTONE_STAIRS = register(Blocks.SANDSTONE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        ENDER_CHEST = register(Blocks.ENDER_CHEST, ItemGroup.DECORATIONS);
        EMERALD_BLOCK = register(Blocks.EMERALD_BLOCK, ItemGroup.BUILDING_BLOCKS);
        SPRUCE_STAIRS = register(Blocks.SPRUCE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        BIRCH_STAIRS = register(Blocks.BIRCH_STAIRS, ItemGroup.BUILDING_BLOCKS);
        JUNGLE_STAIRS = register(Blocks.JUNGLE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        CRIMSON_STAIRS = register(Blocks.CRIMSON_STAIRS, ItemGroup.BUILDING_BLOCKS);
        WARPED_STAIRS = register(Blocks.WARPED_STAIRS, ItemGroup.BUILDING_BLOCKS);
        COMMAND_BLOCK = register((BlockItem)(new CommandBlockItem(Blocks.COMMAND_BLOCK, (new Item.Settings()).rarity(Rarity.EPIC))));
        BEACON = register(new BlockItem(Blocks.BEACON, (new Item.Settings()).group(ItemGroup.MISC).rarity(Rarity.RARE)));
        COBBLESTONE_WALL = register(Blocks.COBBLESTONE_WALL, ItemGroup.DECORATIONS);
        MOSSY_COBBLESTONE_WALL = register(Blocks.MOSSY_COBBLESTONE_WALL, ItemGroup.DECORATIONS);
        BRICK_WALL = register(Blocks.BRICK_WALL, ItemGroup.DECORATIONS);
        PRISMARINE_WALL = register(Blocks.PRISMARINE_WALL, ItemGroup.DECORATIONS);
        RED_SANDSTONE_WALL = register(Blocks.RED_SANDSTONE_WALL, ItemGroup.DECORATIONS);
        MOSSY_STONE_BRICK_WALL = register(Blocks.MOSSY_STONE_BRICK_WALL, ItemGroup.DECORATIONS);
        GRANITE_WALL = register(Blocks.GRANITE_WALL, ItemGroup.DECORATIONS);
        STONE_BRICK_WALL = register(Blocks.STONE_BRICK_WALL, ItemGroup.DECORATIONS);
        NETHER_BRICK_WALL = register(Blocks.NETHER_BRICK_WALL, ItemGroup.DECORATIONS);
        ANDESITE_WALL = register(Blocks.ANDESITE_WALL, ItemGroup.DECORATIONS);
        RED_NETHER_BRICK_WALL = register(Blocks.RED_NETHER_BRICK_WALL, ItemGroup.DECORATIONS);
        SANDSTONE_WALL = register(Blocks.SANDSTONE_WALL, ItemGroup.DECORATIONS);
        END_STONE_BRICK_WALL = register(Blocks.END_STONE_BRICK_WALL, ItemGroup.DECORATIONS);
        DIORITE_WALL = register(Blocks.DIORITE_WALL, ItemGroup.DECORATIONS);
        BLACKSTONE_WALL = register(Blocks.BLACKSTONE_WALL, ItemGroup.DECORATIONS);
        POLISHED_BLACKSTONE_WALL = register(Blocks.POLISHED_BLACKSTONE_WALL, ItemGroup.DECORATIONS);
        POLISHED_BLACKSTONE_BRICK_WALL = register(Blocks.POLISHED_BLACKSTONE_BRICK_WALL, ItemGroup.DECORATIONS);
        DEEPSLATE_WALL = register(Blocks.COBBLED_DEEPSLATE_WALL, ItemGroup.DECORATIONS);
        POLISHED_DEEPSLATE_WALL = register(Blocks.POLISHED_DEEPSLATE_WALL, ItemGroup.DECORATIONS);
        DEEPSLATE_BRICK_WALL = register(Blocks.DEEPSLATE_BRICK_WALL, ItemGroup.DECORATIONS);
        DEEPSLATE_TILE_WALL = register(Blocks.DEEPSLATE_TILE_WALL, ItemGroup.DECORATIONS);
        ANVIL = register(Blocks.ANVIL, ItemGroup.DECORATIONS);
        CHIPPED_ANVIL = register(Blocks.CHIPPED_ANVIL, ItemGroup.DECORATIONS);
        DAMAGED_ANVIL = register(Blocks.DAMAGED_ANVIL, ItemGroup.DECORATIONS);
        CHISELED_QUARTZ_BLOCK = register(Blocks.CHISELED_QUARTZ_BLOCK, ItemGroup.BUILDING_BLOCKS);
        QUARTZ_BLOCK = register(Blocks.QUARTZ_BLOCK, ItemGroup.BUILDING_BLOCKS);
        QUARTZ_BRICKS = register(Blocks.QUARTZ_BRICKS, ItemGroup.BUILDING_BLOCKS);
        QUARTZ_PILLAR = register(Blocks.QUARTZ_PILLAR, ItemGroup.BUILDING_BLOCKS);
        QUARTZ_STAIRS = register(Blocks.QUARTZ_STAIRS, ItemGroup.BUILDING_BLOCKS);
        WHITE_TERRACOTTA = register(Blocks.WHITE_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        ORANGE_TERRACOTTA = register(Blocks.ORANGE_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        MAGENTA_TERRACOTTA = register(Blocks.MAGENTA_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        LIGHT_BLUE_TERRACOTTA = register(Blocks.LIGHT_BLUE_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        YELLOW_TERRACOTTA = register(Blocks.YELLOW_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        LIME_TERRACOTTA = register(Blocks.LIME_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        PINK_TERRACOTTA = register(Blocks.PINK_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        GRAY_TERRACOTTA = register(Blocks.GRAY_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        LIGHT_GRAY_TERRACOTTA = register(Blocks.LIGHT_GRAY_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        CYAN_TERRACOTTA = register(Blocks.CYAN_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        PURPLE_TERRACOTTA = register(Blocks.PURPLE_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        BLUE_TERRACOTTA = register(Blocks.BLUE_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        BROWN_TERRACOTTA = register(Blocks.BROWN_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        GREEN_TERRACOTTA = register(Blocks.GREEN_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        RED_TERRACOTTA = register(Blocks.RED_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        BLACK_TERRACOTTA = register(Blocks.BLACK_TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        BARRIER = register(new BlockItem(Blocks.BARRIER, (new Item.Settings()).rarity(Rarity.EPIC)));
        LIGHT = register(new BlockItem(Blocks.LIGHT, (new Item.Settings()).rarity(Rarity.EPIC)));
        HAY_BLOCK = register(Blocks.HAY_BLOCK, ItemGroup.BUILDING_BLOCKS);
        WHITE_CARPET = register(Blocks.WHITE_CARPET, ItemGroup.DECORATIONS);
        ORANGE_CARPET = register(Blocks.ORANGE_CARPET, ItemGroup.DECORATIONS);
        MAGENTA_CARPET = register(Blocks.MAGENTA_CARPET, ItemGroup.DECORATIONS);
        LIGHT_BLUE_CARPET = register(Blocks.LIGHT_BLUE_CARPET, ItemGroup.DECORATIONS);
        YELLOW_CARPET = register(Blocks.YELLOW_CARPET, ItemGroup.DECORATIONS);
        LIME_CARPET = register(Blocks.LIME_CARPET, ItemGroup.DECORATIONS);
        PINK_CARPET = register(Blocks.PINK_CARPET, ItemGroup.DECORATIONS);
        GRAY_CARPET = register(Blocks.GRAY_CARPET, ItemGroup.DECORATIONS);
        LIGHT_GRAY_CARPET = register(Blocks.LIGHT_GRAY_CARPET, ItemGroup.DECORATIONS);
        CYAN_CARPET = register(Blocks.CYAN_CARPET, ItemGroup.DECORATIONS);
        PURPLE_CARPET = register(Blocks.PURPLE_CARPET, ItemGroup.DECORATIONS);
        BLUE_CARPET = register(Blocks.BLUE_CARPET, ItemGroup.DECORATIONS);
        BROWN_CARPET = register(Blocks.BROWN_CARPET, ItemGroup.DECORATIONS);
        GREEN_CARPET = register(Blocks.GREEN_CARPET, ItemGroup.DECORATIONS);
        RED_CARPET = register(Blocks.RED_CARPET, ItemGroup.DECORATIONS);
        BLACK_CARPET = register(Blocks.BLACK_CARPET, ItemGroup.DECORATIONS);
        TERRACOTTA = register(Blocks.TERRACOTTA, ItemGroup.BUILDING_BLOCKS);
        PACKED_ICE = register(Blocks.PACKED_ICE, ItemGroup.BUILDING_BLOCKS);
        ACACIA_STAIRS = register(Blocks.ACACIA_STAIRS, ItemGroup.BUILDING_BLOCKS);
        DARK_OAK_STAIRS = register(Blocks.DARK_OAK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        DIRT_PATH = register(Blocks.DIRT_PATH, ItemGroup.DECORATIONS);
        SUNFLOWER = register((BlockItem)(new TallBlockItem(Blocks.SUNFLOWER, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        LILAC = register((BlockItem)(new TallBlockItem(Blocks.LILAC, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        ROSE_BUSH = register((BlockItem)(new TallBlockItem(Blocks.ROSE_BUSH, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        PEONY = register((BlockItem)(new TallBlockItem(Blocks.PEONY, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        TALL_GRASS = register((BlockItem)(new TallBlockItem(Blocks.TALL_GRASS, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        LARGE_FERN = register((BlockItem)(new TallBlockItem(Blocks.LARGE_FERN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        WHITE_STAINED_GLASS = register(Blocks.WHITE_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        ORANGE_STAINED_GLASS = register(Blocks.ORANGE_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        MAGENTA_STAINED_GLASS = register(Blocks.MAGENTA_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        LIGHT_BLUE_STAINED_GLASS = register(Blocks.LIGHT_BLUE_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        YELLOW_STAINED_GLASS = register(Blocks.YELLOW_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        LIME_STAINED_GLASS = register(Blocks.LIME_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        PINK_STAINED_GLASS = register(Blocks.PINK_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        GRAY_STAINED_GLASS = register(Blocks.GRAY_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        LIGHT_GRAY_STAINED_GLASS = register(Blocks.LIGHT_GRAY_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        CYAN_STAINED_GLASS = register(Blocks.CYAN_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        PURPLE_STAINED_GLASS = register(Blocks.PURPLE_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        BLUE_STAINED_GLASS = register(Blocks.BLUE_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        BROWN_STAINED_GLASS = register(Blocks.BROWN_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        GREEN_STAINED_GLASS = register(Blocks.GREEN_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        RED_STAINED_GLASS = register(Blocks.RED_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        BLACK_STAINED_GLASS = register(Blocks.BLACK_STAINED_GLASS, ItemGroup.BUILDING_BLOCKS);
        WHITE_STAINED_GLASS_PANE = register(Blocks.WHITE_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        ORANGE_STAINED_GLASS_PANE = register(Blocks.ORANGE_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        MAGENTA_STAINED_GLASS_PANE = register(Blocks.MAGENTA_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        LIGHT_BLUE_STAINED_GLASS_PANE = register(Blocks.LIGHT_BLUE_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        YELLOW_STAINED_GLASS_PANE = register(Blocks.YELLOW_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        LIME_STAINED_GLASS_PANE = register(Blocks.LIME_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        PINK_STAINED_GLASS_PANE = register(Blocks.PINK_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        GRAY_STAINED_GLASS_PANE = register(Blocks.GRAY_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        LIGHT_GRAY_STAINED_GLASS_PANE = register(Blocks.LIGHT_GRAY_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        CYAN_STAINED_GLASS_PANE = register(Blocks.CYAN_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        PURPLE_STAINED_GLASS_PANE = register(Blocks.PURPLE_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        BLUE_STAINED_GLASS_PANE = register(Blocks.BLUE_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        BROWN_STAINED_GLASS_PANE = register(Blocks.BROWN_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        GREEN_STAINED_GLASS_PANE = register(Blocks.GREEN_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        RED_STAINED_GLASS_PANE = register(Blocks.RED_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        BLACK_STAINED_GLASS_PANE = register(Blocks.BLACK_STAINED_GLASS_PANE, ItemGroup.DECORATIONS);
        PRISMARINE = register(Blocks.PRISMARINE, ItemGroup.BUILDING_BLOCKS);
        PRISMARINE_BRICKS = register(Blocks.PRISMARINE_BRICKS, ItemGroup.BUILDING_BLOCKS);
        DARK_PRISMARINE = register(Blocks.DARK_PRISMARINE, ItemGroup.BUILDING_BLOCKS);
        PRISMARINE_STAIRS = register(Blocks.PRISMARINE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        PRISMARINE_BRICK_STAIRS = register(Blocks.PRISMARINE_BRICK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        DARK_PRISMARINE_STAIRS = register(Blocks.DARK_PRISMARINE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        SEA_LANTERN = register(Blocks.SEA_LANTERN, ItemGroup.BUILDING_BLOCKS);
        RED_SANDSTONE = register(Blocks.RED_SANDSTONE, ItemGroup.BUILDING_BLOCKS);
        CHISELED_RED_SANDSTONE = register(Blocks.CHISELED_RED_SANDSTONE, ItemGroup.BUILDING_BLOCKS);
        CUT_RED_SANDSTONE = register(Blocks.CUT_RED_SANDSTONE, ItemGroup.BUILDING_BLOCKS);
        RED_SANDSTONE_STAIRS = register(Blocks.RED_SANDSTONE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        REPEATING_COMMAND_BLOCK = register((BlockItem)(new CommandBlockItem(Blocks.REPEATING_COMMAND_BLOCK, (new Item.Settings()).rarity(Rarity.EPIC))));
        CHAIN_COMMAND_BLOCK = register((BlockItem)(new CommandBlockItem(Blocks.CHAIN_COMMAND_BLOCK, (new Item.Settings()).rarity(Rarity.EPIC))));
        MAGMA_BLOCK = register(Blocks.MAGMA_BLOCK, ItemGroup.BUILDING_BLOCKS);
        NETHER_WART_BLOCK = register(Blocks.NETHER_WART_BLOCK, ItemGroup.BUILDING_BLOCKS);
        WARPED_WART_BLOCK = register(Blocks.WARPED_WART_BLOCK, ItemGroup.BUILDING_BLOCKS);
        RED_NETHER_BRICKS = register(Blocks.RED_NETHER_BRICKS, ItemGroup.BUILDING_BLOCKS);
        BONE_BLOCK = register(Blocks.BONE_BLOCK, ItemGroup.BUILDING_BLOCKS);
        STRUCTURE_VOID = register(new BlockItem(Blocks.STRUCTURE_VOID, (new Item.Settings()).rarity(Rarity.EPIC)));
        SHULKER_BOX = register(new BlockItem(Blocks.SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        WHITE_SHULKER_BOX = register(new BlockItem(Blocks.WHITE_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        ORANGE_SHULKER_BOX = register(new BlockItem(Blocks.ORANGE_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        MAGENTA_SHULKER_BOX = register(new BlockItem(Blocks.MAGENTA_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        LIGHT_BLUE_SHULKER_BOX = register(new BlockItem(Blocks.LIGHT_BLUE_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        YELLOW_SHULKER_BOX = register(new BlockItem(Blocks.YELLOW_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        LIME_SHULKER_BOX = register(new BlockItem(Blocks.LIME_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        PINK_SHULKER_BOX = register(new BlockItem(Blocks.PINK_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        GRAY_SHULKER_BOX = register(new BlockItem(Blocks.GRAY_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        LIGHT_GRAY_SHULKER_BOX = register(new BlockItem(Blocks.LIGHT_GRAY_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        CYAN_SHULKER_BOX = register(new BlockItem(Blocks.CYAN_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        PURPLE_SHULKER_BOX = register(new BlockItem(Blocks.PURPLE_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        BLUE_SHULKER_BOX = register(new BlockItem(Blocks.BLUE_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        BROWN_SHULKER_BOX = register(new BlockItem(Blocks.BROWN_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        GREEN_SHULKER_BOX = register(new BlockItem(Blocks.GREEN_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        RED_SHULKER_BOX = register(new BlockItem(Blocks.RED_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        BLACK_SHULKER_BOX = register(new BlockItem(Blocks.BLACK_SHULKER_BOX, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS)));
        WHITE_GLAZED_TERRACOTTA = register(Blocks.WHITE_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        ORANGE_GLAZED_TERRACOTTA = register(Blocks.ORANGE_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        MAGENTA_GLAZED_TERRACOTTA = register(Blocks.MAGENTA_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        LIGHT_BLUE_GLAZED_TERRACOTTA = register(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        YELLOW_GLAZED_TERRACOTTA = register(Blocks.YELLOW_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        LIME_GLAZED_TERRACOTTA = register(Blocks.LIME_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        PINK_GLAZED_TERRACOTTA = register(Blocks.PINK_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        GRAY_GLAZED_TERRACOTTA = register(Blocks.GRAY_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        LIGHT_GRAY_GLAZED_TERRACOTTA = register(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        CYAN_GLAZED_TERRACOTTA = register(Blocks.CYAN_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        PURPLE_GLAZED_TERRACOTTA = register(Blocks.PURPLE_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        BLUE_GLAZED_TERRACOTTA = register(Blocks.BLUE_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        BROWN_GLAZED_TERRACOTTA = register(Blocks.BROWN_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        GREEN_GLAZED_TERRACOTTA = register(Blocks.GREEN_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        RED_GLAZED_TERRACOTTA = register(Blocks.RED_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        BLACK_GLAZED_TERRACOTTA = register(Blocks.BLACK_GLAZED_TERRACOTTA, ItemGroup.DECORATIONS);
        WHITE_CONCRETE = register(Blocks.WHITE_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        ORANGE_CONCRETE = register(Blocks.ORANGE_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        MAGENTA_CONCRETE = register(Blocks.MAGENTA_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        LIGHT_BLUE_CONCRETE = register(Blocks.LIGHT_BLUE_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        YELLOW_CONCRETE = register(Blocks.YELLOW_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        LIME_CONCRETE = register(Blocks.LIME_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        PINK_CONCRETE = register(Blocks.PINK_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        GRAY_CONCRETE = register(Blocks.GRAY_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        LIGHT_GRAY_CONCRETE = register(Blocks.LIGHT_GRAY_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        CYAN_CONCRETE = register(Blocks.CYAN_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        PURPLE_CONCRETE = register(Blocks.PURPLE_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        BLUE_CONCRETE = register(Blocks.BLUE_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        BROWN_CONCRETE = register(Blocks.BROWN_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        GREEN_CONCRETE = register(Blocks.GREEN_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        RED_CONCRETE = register(Blocks.RED_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        BLACK_CONCRETE = register(Blocks.BLACK_CONCRETE, ItemGroup.BUILDING_BLOCKS);
        WHITE_CONCRETE_POWDER = register(Blocks.WHITE_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        ORANGE_CONCRETE_POWDER = register(Blocks.ORANGE_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        MAGENTA_CONCRETE_POWDER = register(Blocks.MAGENTA_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        LIGHT_BLUE_CONCRETE_POWDER = register(Blocks.LIGHT_BLUE_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        YELLOW_CONCRETE_POWDER = register(Blocks.YELLOW_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        LIME_CONCRETE_POWDER = register(Blocks.LIME_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        PINK_CONCRETE_POWDER = register(Blocks.PINK_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        GRAY_CONCRETE_POWDER = register(Blocks.GRAY_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        LIGHT_GRAY_CONCRETE_POWDER = register(Blocks.LIGHT_GRAY_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        CYAN_CONCRETE_POWDER = register(Blocks.CYAN_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        PURPLE_CONCRETE_POWDER = register(Blocks.PURPLE_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        BLUE_CONCRETE_POWDER = register(Blocks.BLUE_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        BROWN_CONCRETE_POWDER = register(Blocks.BROWN_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        GREEN_CONCRETE_POWDER = register(Blocks.GREEN_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        RED_CONCRETE_POWDER = register(Blocks.RED_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        BLACK_CONCRETE_POWDER = register(Blocks.BLACK_CONCRETE_POWDER, ItemGroup.BUILDING_BLOCKS);
        TURTLE_EGG = register(Blocks.TURTLE_EGG, ItemGroup.MISC);
        DEAD_TUBE_CORAL_BLOCK = register(Blocks.DEAD_TUBE_CORAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        DEAD_BRAIN_CORAL_BLOCK = register(Blocks.DEAD_BRAIN_CORAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        DEAD_BUBBLE_CORAL_BLOCK = register(Blocks.DEAD_BUBBLE_CORAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        DEAD_FIRE_CORAL_BLOCK = register(Blocks.DEAD_FIRE_CORAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        DEAD_HORN_CORAL_BLOCK = register(Blocks.DEAD_HORN_CORAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        TUBE_CORAL_BLOCK = register(Blocks.TUBE_CORAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        BRAIN_CORAL_BLOCK = register(Blocks.BRAIN_CORAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        BUBBLE_CORAL_BLOCK = register(Blocks.BUBBLE_CORAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        FIRE_CORAL_BLOCK = register(Blocks.FIRE_CORAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        HORN_CORAL_BLOCK = register(Blocks.HORN_CORAL_BLOCK, ItemGroup.BUILDING_BLOCKS);
        TUBE_CORAL = register(Blocks.TUBE_CORAL, ItemGroup.DECORATIONS);
        BRAIN_CORAL = register(Blocks.BRAIN_CORAL, ItemGroup.DECORATIONS);
        BUBBLE_CORAL = register(Blocks.BUBBLE_CORAL, ItemGroup.DECORATIONS);
        FIRE_CORAL = register(Blocks.FIRE_CORAL, ItemGroup.DECORATIONS);
        HORN_CORAL = register(Blocks.HORN_CORAL, ItemGroup.DECORATIONS);
        DEAD_BRAIN_CORAL = register(Blocks.DEAD_BRAIN_CORAL, ItemGroup.DECORATIONS);
        DEAD_BUBBLE_CORAL = register(Blocks.DEAD_BUBBLE_CORAL, ItemGroup.DECORATIONS);
        DEAD_FIRE_CORAL = register(Blocks.DEAD_FIRE_CORAL, ItemGroup.DECORATIONS);
        DEAD_HORN_CORAL = register(Blocks.DEAD_HORN_CORAL, ItemGroup.DECORATIONS);
        DEAD_TUBE_CORAL = register(Blocks.DEAD_TUBE_CORAL, ItemGroup.DECORATIONS);
        TUBE_CORAL_FAN = register((BlockItem)(new WallStandingBlockItem(Blocks.TUBE_CORAL_FAN, Blocks.TUBE_CORAL_WALL_FAN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        BRAIN_CORAL_FAN = register((BlockItem)(new WallStandingBlockItem(Blocks.BRAIN_CORAL_FAN, Blocks.BRAIN_CORAL_WALL_FAN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        BUBBLE_CORAL_FAN = register((BlockItem)(new WallStandingBlockItem(Blocks.BUBBLE_CORAL_FAN, Blocks.BUBBLE_CORAL_WALL_FAN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        FIRE_CORAL_FAN = register((BlockItem)(new WallStandingBlockItem(Blocks.FIRE_CORAL_FAN, Blocks.FIRE_CORAL_WALL_FAN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        HORN_CORAL_FAN = register((BlockItem)(new WallStandingBlockItem(Blocks.HORN_CORAL_FAN, Blocks.HORN_CORAL_WALL_FAN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        DEAD_TUBE_CORAL_FAN = register((BlockItem)(new WallStandingBlockItem(Blocks.DEAD_TUBE_CORAL_FAN, Blocks.DEAD_TUBE_CORAL_WALL_FAN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        DEAD_BRAIN_CORAL_FAN = register((BlockItem)(new WallStandingBlockItem(Blocks.DEAD_BRAIN_CORAL_FAN, Blocks.DEAD_BRAIN_CORAL_WALL_FAN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        DEAD_BUBBLE_CORAL_FAN = register((BlockItem)(new WallStandingBlockItem(Blocks.DEAD_BUBBLE_CORAL_FAN, Blocks.DEAD_BUBBLE_CORAL_WALL_FAN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        DEAD_FIRE_CORAL_FAN = register((BlockItem)(new WallStandingBlockItem(Blocks.DEAD_FIRE_CORAL_FAN, Blocks.DEAD_FIRE_CORAL_WALL_FAN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        DEAD_HORN_CORAL_FAN = register((BlockItem)(new WallStandingBlockItem(Blocks.DEAD_HORN_CORAL_FAN, Blocks.DEAD_HORN_CORAL_WALL_FAN, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        BLUE_ICE = register(Blocks.BLUE_ICE, ItemGroup.BUILDING_BLOCKS);
        CONDUIT = register(new BlockItem(Blocks.CONDUIT, (new Item.Settings()).group(ItemGroup.MISC).rarity(Rarity.RARE)));
        POLISHED_GRANITE_STAIRS = register(Blocks.POLISHED_GRANITE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_RED_SANDSTONE_STAIRS = register(Blocks.SMOOTH_RED_SANDSTONE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        MOSSY_STONE_BRICK_STAIRS = register(Blocks.MOSSY_STONE_BRICK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        POLISHED_DIORITE_STAIRS = register(Blocks.POLISHED_DIORITE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        MOSSY_COBBLESTONE_STAIRS = register(Blocks.MOSSY_COBBLESTONE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        END_STONE_BRICK_STAIRS = register(Blocks.END_STONE_BRICK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        STONE_STAIRS = register(Blocks.STONE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_SANDSTONE_STAIRS = register(Blocks.SMOOTH_SANDSTONE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_QUARTZ_STAIRS = register(Blocks.SMOOTH_QUARTZ_STAIRS, ItemGroup.BUILDING_BLOCKS);
        GRANITE_STAIRS = register(Blocks.GRANITE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        ANDESITE_STAIRS = register(Blocks.ANDESITE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        RED_NETHER_BRICK_STAIRS = register(Blocks.RED_NETHER_BRICK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        POLISHED_ANDESITE_STAIRS = register(Blocks.POLISHED_ANDESITE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        DIORITE_STAIRS = register(Blocks.DIORITE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        COBBLED_DEEPSLATE_STAIRS = register(Blocks.COBBLED_DEEPSLATE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        POLISHED_DEEPSLATE_STAIRS = register(Blocks.POLISHED_DEEPSLATE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_BRICK_STAIRS = register(Blocks.DEEPSLATE_BRICK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_TILE_STAIRS = register(Blocks.DEEPSLATE_TILE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        POLISHED_GRANITE_SLAB = register(Blocks.POLISHED_GRANITE_SLAB, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_RED_SANDSTONE_SLAB = register(Blocks.SMOOTH_RED_SANDSTONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        MOSSY_STONE_BRICK_SLAB = register(Blocks.MOSSY_STONE_BRICK_SLAB, ItemGroup.BUILDING_BLOCKS);
        POLISHED_DIORITE_SLAB = register(Blocks.POLISHED_DIORITE_SLAB, ItemGroup.BUILDING_BLOCKS);
        MOSSY_COBBLESTONE_SLAB = register(Blocks.MOSSY_COBBLESTONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        END_STONE_BRICK_SLAB = register(Blocks.END_STONE_BRICK_SLAB, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_SANDSTONE_SLAB = register(Blocks.SMOOTH_SANDSTONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        SMOOTH_QUARTZ_SLAB = register(Blocks.SMOOTH_QUARTZ_SLAB, ItemGroup.BUILDING_BLOCKS);
        GRANITE_SLAB = register(Blocks.GRANITE_SLAB, ItemGroup.BUILDING_BLOCKS);
        ANDESITE_SLAB = register(Blocks.ANDESITE_SLAB, ItemGroup.BUILDING_BLOCKS);
        RED_NETHER_BRICK_SLAB = register(Blocks.RED_NETHER_BRICK_SLAB, ItemGroup.BUILDING_BLOCKS);
        POLISHED_ANDESITE_SLAB = register(Blocks.POLISHED_ANDESITE_SLAB, ItemGroup.BUILDING_BLOCKS);
        DIORITE_SLAB = register(Blocks.DIORITE_SLAB, ItemGroup.BUILDING_BLOCKS);
        COBBLED_DEEPSLATE_SLAB = register(Blocks.COBBLED_DEEPSLATE_SLAB, ItemGroup.BUILDING_BLOCKS);
        POLISHED_DEEPSLATE_SLAB = register(Blocks.POLISHED_DEEPSLATE_SLAB, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_BRICK_SLAB = register(Blocks.DEEPSLATE_BRICK_SLAB, ItemGroup.BUILDING_BLOCKS);
        DEEPSLATE_TILE_SLAB = register(Blocks.DEEPSLATE_TILE_SLAB, ItemGroup.BUILDING_BLOCKS);
        SCAFFOLDING = register((BlockItem)(new ScaffoldingItem(Blocks.SCAFFOLDING, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        REDSTONE = register((String)"redstone", (Item)(new AliasedBlockItem(Blocks.REDSTONE_WIRE, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        REDSTONE_TORCH = register((BlockItem)(new WallStandingBlockItem(Blocks.REDSTONE_TORCH, Blocks.REDSTONE_WALL_TORCH, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        REDSTONE_BLOCK = register(Blocks.REDSTONE_BLOCK, ItemGroup.REDSTONE);
        REPEATER = register(Blocks.REPEATER, ItemGroup.REDSTONE);
        COMPARATOR = register(Blocks.COMPARATOR, ItemGroup.REDSTONE);
        PISTON = register(Blocks.PISTON, ItemGroup.REDSTONE);
        STICKY_PISTON = register(Blocks.STICKY_PISTON, ItemGroup.REDSTONE);
        SLIME_BLOCK = register(Blocks.SLIME_BLOCK, ItemGroup.REDSTONE);
        HONEY_BLOCK = register(Blocks.HONEY_BLOCK, ItemGroup.REDSTONE);
        OBSERVER = register(Blocks.OBSERVER, ItemGroup.REDSTONE);
        HOPPER = register(Blocks.HOPPER, ItemGroup.REDSTONE);
        DISPENSER = register(Blocks.DISPENSER, ItemGroup.REDSTONE);
        DROPPER = register(Blocks.DROPPER, ItemGroup.REDSTONE);
        LECTERN = register(Blocks.LECTERN, ItemGroup.REDSTONE);
        TARGET = register(Blocks.TARGET, ItemGroup.REDSTONE);
        LEVER = register(Blocks.LEVER, ItemGroup.REDSTONE);
        LIGHTNING_ROD = register(Blocks.LIGHTNING_ROD, ItemGroup.REDSTONE);
        DAYLIGHT_DETECTOR = register(Blocks.DAYLIGHT_DETECTOR, ItemGroup.REDSTONE);
        SCULK_SENSOR = register(Blocks.SCULK_SENSOR, createEmptyOptional(ItemGroup.REDSTONE));
        TRIPWIRE_HOOK = register(Blocks.TRIPWIRE_HOOK, ItemGroup.REDSTONE);
        TRAPPED_CHEST = register(Blocks.TRAPPED_CHEST, ItemGroup.REDSTONE);
        TNT = register(Blocks.TNT, ItemGroup.REDSTONE);
        REDSTONE_LAMP = register(Blocks.REDSTONE_LAMP, ItemGroup.REDSTONE);
        NOTE_BLOCK = register(Blocks.NOTE_BLOCK, ItemGroup.REDSTONE);
        STONE_BUTTON = register(Blocks.STONE_BUTTON, ItemGroup.REDSTONE);
        POLISHED_BLACKSTONE_BUTTON = register(Blocks.POLISHED_BLACKSTONE_BUTTON, ItemGroup.REDSTONE);
        OAK_BUTTON = register(Blocks.OAK_BUTTON, ItemGroup.REDSTONE);
        SPRUCE_BUTTON = register(Blocks.SPRUCE_BUTTON, ItemGroup.REDSTONE);
        BIRCH_BUTTON = register(Blocks.BIRCH_BUTTON, ItemGroup.REDSTONE);
        JUNGLE_BUTTON = register(Blocks.JUNGLE_BUTTON, ItemGroup.REDSTONE);
        ACACIA_BUTTON = register(Blocks.ACACIA_BUTTON, ItemGroup.REDSTONE);
        DARK_OAK_BUTTON = register(Blocks.DARK_OAK_BUTTON, ItemGroup.REDSTONE);
        CRIMSON_BUTTON = register(Blocks.CRIMSON_BUTTON, ItemGroup.REDSTONE);
        WARPED_BUTTON = register(Blocks.WARPED_BUTTON, ItemGroup.REDSTONE);
        STONE_PRESSURE_PLATE = register(Blocks.STONE_PRESSURE_PLATE, ItemGroup.REDSTONE);
        POLISHED_BLACKSTONE_PRESSURE_PLATE = register(Blocks.POLISHED_BLACKSTONE_PRESSURE_PLATE, ItemGroup.REDSTONE);
        LIGHT_WEIGHTED_PRESSURE_PLATE = register(Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE, ItemGroup.REDSTONE);
        HEAVY_WEIGHTED_PRESSURE_PLATE = register(Blocks.HEAVY_WEIGHTED_PRESSURE_PLATE, ItemGroup.REDSTONE);
        OAK_PRESSURE_PLATE = register(Blocks.OAK_PRESSURE_PLATE, ItemGroup.REDSTONE);
        SPRUCE_PRESSURE_PLATE = register(Blocks.SPRUCE_PRESSURE_PLATE, ItemGroup.REDSTONE);
        BIRCH_PRESSURE_PLATE = register(Blocks.BIRCH_PRESSURE_PLATE, ItemGroup.REDSTONE);
        JUNGLE_PRESSURE_PLATE = register(Blocks.JUNGLE_PRESSURE_PLATE, ItemGroup.REDSTONE);
        ACACIA_PRESSURE_PLATE = register(Blocks.ACACIA_PRESSURE_PLATE, ItemGroup.REDSTONE);
        DARK_OAK_PRESSURE_PLATE = register(Blocks.DARK_OAK_PRESSURE_PLATE, ItemGroup.REDSTONE);
        CRIMSON_PRESSURE_PLATE = register(Blocks.CRIMSON_PRESSURE_PLATE, ItemGroup.REDSTONE);
        WARPED_PRESSURE_PLATE = register(Blocks.WARPED_PRESSURE_PLATE, ItemGroup.REDSTONE);
        IRON_DOOR = register((BlockItem)(new TallBlockItem(Blocks.IRON_DOOR, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        OAK_DOOR = register((BlockItem)(new TallBlockItem(Blocks.OAK_DOOR, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        SPRUCE_DOOR = register((BlockItem)(new TallBlockItem(Blocks.SPRUCE_DOOR, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        BIRCH_DOOR = register((BlockItem)(new TallBlockItem(Blocks.BIRCH_DOOR, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        JUNGLE_DOOR = register((BlockItem)(new TallBlockItem(Blocks.JUNGLE_DOOR, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        ACACIA_DOOR = register((BlockItem)(new TallBlockItem(Blocks.ACACIA_DOOR, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        DARK_OAK_DOOR = register((BlockItem)(new TallBlockItem(Blocks.DARK_OAK_DOOR, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        CRIMSON_DOOR = register((BlockItem)(new TallBlockItem(Blocks.CRIMSON_DOOR, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        WARPED_DOOR = register((BlockItem)(new TallBlockItem(Blocks.WARPED_DOOR, (new Item.Settings()).group(ItemGroup.REDSTONE))));
        IRON_TRAPDOOR = register(Blocks.IRON_TRAPDOOR, ItemGroup.REDSTONE);
        OAK_TRAPDOOR = register(Blocks.OAK_TRAPDOOR, ItemGroup.REDSTONE);
        SPRUCE_TRAPDOOR = register(Blocks.SPRUCE_TRAPDOOR, ItemGroup.REDSTONE);
        BIRCH_TRAPDOOR = register(Blocks.BIRCH_TRAPDOOR, ItemGroup.REDSTONE);
        JUNGLE_TRAPDOOR = register(Blocks.JUNGLE_TRAPDOOR, ItemGroup.REDSTONE);
        ACACIA_TRAPDOOR = register(Blocks.ACACIA_TRAPDOOR, ItemGroup.REDSTONE);
        DARK_OAK_TRAPDOOR = register(Blocks.DARK_OAK_TRAPDOOR, ItemGroup.REDSTONE);
        CRIMSON_TRAPDOOR = register(Blocks.CRIMSON_TRAPDOOR, ItemGroup.REDSTONE);
        WARPED_TRAPDOOR = register(Blocks.WARPED_TRAPDOOR, ItemGroup.REDSTONE);
        OAK_FENCE_GATE = register(Blocks.OAK_FENCE_GATE, ItemGroup.REDSTONE);
        SPRUCE_FENCE_GATE = register(Blocks.SPRUCE_FENCE_GATE, ItemGroup.REDSTONE);
        BIRCH_FENCE_GATE = register(Blocks.BIRCH_FENCE_GATE, ItemGroup.REDSTONE);
        JUNGLE_FENCE_GATE = register(Blocks.JUNGLE_FENCE_GATE, ItemGroup.REDSTONE);
        ACACIA_FENCE_GATE = register(Blocks.ACACIA_FENCE_GATE, ItemGroup.REDSTONE);
        DARK_OAK_FENCE_GATE = register(Blocks.DARK_OAK_FENCE_GATE, ItemGroup.REDSTONE);
        CRIMSON_FENCE_GATE = register(Blocks.CRIMSON_FENCE_GATE, ItemGroup.REDSTONE);
        WARPED_FENCE_GATE = register(Blocks.WARPED_FENCE_GATE, ItemGroup.REDSTONE);
        POWERED_RAIL = register(Blocks.POWERED_RAIL, ItemGroup.TRANSPORTATION);
        DETECTOR_RAIL = register(Blocks.DETECTOR_RAIL, ItemGroup.TRANSPORTATION);
        RAIL = register(Blocks.RAIL, ItemGroup.TRANSPORTATION);
        ACTIVATOR_RAIL = register(Blocks.ACTIVATOR_RAIL, ItemGroup.TRANSPORTATION);
        SADDLE = register((String)"saddle", (Item)(new SaddleItem((new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        MINECART = register((String)"minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.RIDEABLE, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        CHEST_MINECART = register((String)"chest_minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.CHEST, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        FURNACE_MINECART = register((String)"furnace_minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.FURNACE, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        TNT_MINECART = register((String)"tnt_minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.TNT, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        HOPPER_MINECART = register((String)"hopper_minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.HOPPER, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        CARROT_ON_A_STICK = register((String)"carrot_on_a_stick", (Item)(new OnAStickItem((new Item.Settings()).maxDamage(25).group(ItemGroup.TRANSPORTATION), EntityType.PIG, 7)));
        WARPED_FUNGUS_ON_A_STICK = register((String)"warped_fungus_on_a_stick", (Item)(new OnAStickItem((new Item.Settings()).maxDamage(100).group(ItemGroup.TRANSPORTATION), EntityType.STRIDER, 1)));
        ELYTRA = register((String)"elytra", (Item)(new ElytraItem((new Item.Settings()).maxDamage(432).group(ItemGroup.TRANSPORTATION).rarity(Rarity.UNCOMMON))));
        OAK_BOAT = register((String)"oak_boat", (Item)(new BoatItem(net.minecraft.entity.vehicle.BoatEntity.Type.OAK, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        SPRUCE_BOAT = register((String)"spruce_boat", (Item)(new BoatItem(net.minecraft.entity.vehicle.BoatEntity.Type.SPRUCE, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        BIRCH_BOAT = register((String)"birch_boat", (Item)(new BoatItem(net.minecraft.entity.vehicle.BoatEntity.Type.BIRCH, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        JUNGLE_BOAT = register((String)"jungle_boat", (Item)(new BoatItem(net.minecraft.entity.vehicle.BoatEntity.Type.JUNGLE, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        ACACIA_BOAT = register((String)"acacia_boat", (Item)(new BoatItem(net.minecraft.entity.vehicle.BoatEntity.Type.ACACIA, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        DARK_OAK_BOAT = register((String)"dark_oak_boat", (Item)(new BoatItem(net.minecraft.entity.vehicle.BoatEntity.Type.DARK_OAK, (new Item.Settings()).maxCount(1).group(ItemGroup.TRANSPORTATION))));
        STRUCTURE_BLOCK = register((BlockItem)(new CommandBlockItem(Blocks.STRUCTURE_BLOCK, (new Item.Settings()).rarity(Rarity.EPIC))));
        JIGSAW = register((BlockItem)(new CommandBlockItem(Blocks.JIGSAW, (new Item.Settings()).rarity(Rarity.EPIC))));
        TURTLE_HELMET = register((String)"turtle_helmet", (Item)(new ArmorItem(ArmorMaterials.TURTLE, EquipmentSlot.HEAD, (new Item.Settings()).group(ItemGroup.COMBAT))));
        SCUTE = register("scute", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        FLINT_AND_STEEL = register((String)"flint_and_steel", (Item)(new FlintAndSteelItem((new Item.Settings()).maxDamage(64).group(ItemGroup.TOOLS))));
        APPLE = register("apple", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.APPLE)));
        BOW = register((String)"bow", (Item)(new BowItem((new Item.Settings()).maxDamage(384).group(ItemGroup.COMBAT))));
        ARROW = register((String)"arrow", (Item)(new ArrowItem((new Item.Settings()).group(ItemGroup.COMBAT))));
        COAL = register("coal", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        CHARCOAL = register("charcoal", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        DIAMOND = register("diamond", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        EMERALD = register("emerald", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        LAPIS_LAZULI = register("lapis_lazuli", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        QUARTZ = register("quartz", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        AMETHYST_SHARD = register("amethyst_shard", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        RAW_IRON = register("raw_iron", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        IRON_INGOT = register("iron_ingot", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        RAW_COPPER = register("raw_copper", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        COPPER_INGOT = register("copper_ingot", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        RAW_GOLD = register("raw_gold", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        GOLD_INGOT = register("gold_ingot", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        NETHERITE_INGOT = register("netherite_ingot", new Item((new Item.Settings()).group(ItemGroup.MATERIALS).fireproof()));
        NETHERITE_SCRAP = register("netherite_scrap", new Item((new Item.Settings()).group(ItemGroup.MATERIALS).fireproof()));
        WOODEN_SWORD = register((String)"wooden_sword", (Item)(new SwordItem(ToolMaterials.WOOD, 3, -2.4F, (new Item.Settings()).group(ItemGroup.COMBAT))));
        WOODEN_SHOVEL = register((String)"wooden_shovel", (Item)(new ShovelItem(ToolMaterials.WOOD, 1.5F, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        //WOODEN_PICKAXE = register((String)"wooden_pickaxe", (Item)(new PickaxeItem(ToolMaterials.WOOD, 1, -2.8F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        //WOODEN_AXE = register((String)"wooden_axe", (Item)(new AxeItem(ToolMaterials.WOOD, 6.0F, -3.2F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        //WOODEN_HOE = register((String)"wooden_hoe", (Item)(new HoeItem(ToolMaterials.WOOD, 0, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        STONE_SWORD = register((String)"stone_sword", (Item)(new SwordItem(ToolMaterials.STONE, 3, -2.4F, (new Item.Settings()).group(ItemGroup.COMBAT))));
        STONE_SHOVEL = register((String)"stone_shovel", (Item)(new ShovelItem(ToolMaterials.STONE, 1.5F, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        STONE_PICKAXE = register((String)"stone_pickaxe", (Item)(new PickaxeItem(ToolMaterials.STONE, 1, -2.8F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        STONE_AXE = register((String)"stone_axe", (Item)(new AxeItem(ToolMaterials.STONE, 7.0F, -3.2F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        STONE_HOE = register((String)"stone_hoe", (Item)(new HoeItem(ToolMaterials.STONE, -1, -2.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        GOLDEN_SWORD = register((String)"golden_sword", (Item)(new SwordItem(ToolMaterials.GOLD, 3, -2.4F, (new Item.Settings()).group(ItemGroup.COMBAT))));
        GOLDEN_SHOVEL = register((String)"golden_shovel", (Item)(new ShovelItem(ToolMaterials.GOLD, 1.5F, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        GOLDEN_PICKAXE = register((String)"golden_pickaxe", (Item)(new PickaxeItem(ToolMaterials.GOLD, 1, -2.8F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        GOLDEN_AXE = register((String)"golden_axe", (Item)(new AxeItem(ToolMaterials.GOLD, 6.0F, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        GOLDEN_HOE = register((String)"golden_hoe", (Item)(new HoeItem(ToolMaterials.GOLD, 0, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        IRON_SWORD = register((String)"iron_sword", (Item)(new SwordItem(ToolMaterials.IRON, 3, -2.4F, (new Item.Settings()).group(ItemGroup.COMBAT))));
        IRON_SHOVEL = register((String)"iron_shovel", (Item)(new ShovelItem(ToolMaterials.IRON, 1.5F, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        IRON_PICKAXE = register((String)"iron_pickaxe", (Item)(new PickaxeItem(ToolMaterials.IRON, 1, -2.8F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        IRON_AXE = register((String)"iron_axe", (Item)(new AxeItem(ToolMaterials.IRON, 6.0F, -3.1F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        IRON_HOE = register((String)"iron_hoe", (Item)(new HoeItem(ToolMaterials.IRON, -2, -1.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        DIAMOND_SWORD = register((String)"diamond_sword", (Item)(new SwordItem(ToolMaterials.DIAMOND, 3, -2.4F, (new Item.Settings()).group(ItemGroup.COMBAT))));
        DIAMOND_SHOVEL = register((String)"diamond_shovel", (Item)(new ShovelItem(ToolMaterials.DIAMOND, 1.5F, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        DIAMOND_PICKAXE = register((String)"diamond_pickaxe", (Item)(new PickaxeItem(ToolMaterials.DIAMOND, 1, -2.8F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        DIAMOND_AXE = register((String)"diamond_axe", (Item)(new AxeItem(ToolMaterials.DIAMOND, 5.0F, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        DIAMOND_HOE = register((String)"diamond_hoe", (Item)(new HoeItem(ToolMaterials.DIAMOND, -3, 0.0F, (new Item.Settings()).group(ItemGroup.TOOLS))));
        NETHERITE_SWORD = register((String)"netherite_sword", (Item)(new SwordItem(ToolMaterials.NETHERITE, 3, -2.4F, (new Item.Settings()).group(ItemGroup.COMBAT).fireproof())));
        NETHERITE_SHOVEL = register((String)"netherite_shovel", (Item)(new ShovelItem(ToolMaterials.NETHERITE, 1.5F, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS).fireproof())));
        NETHERITE_PICKAXE = register((String)"netherite_pickaxe", (Item)(new PickaxeItem(ToolMaterials.NETHERITE, 1, -2.8F, (new Item.Settings()).group(ItemGroup.TOOLS).fireproof())));
        NETHERITE_AXE = register((String)"netherite_axe", (Item)(new AxeItem(ToolMaterials.NETHERITE, 5.0F, -3.0F, (new Item.Settings()).group(ItemGroup.TOOLS).fireproof())));
        NETHERITE_HOE = register((String)"netherite_hoe", (Item)(new HoeItem(ToolMaterials.NETHERITE, -4, 0.0F, (new Item.Settings()).group(ItemGroup.TOOLS).fireproof())));
        STICK = register("stick", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        BOWL = register("bowl", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        MUSHROOM_STEW = register((String)"mushroom_stew", (Item)(new StewItem((new Item.Settings()).maxCount(1).group(ItemGroup.FOOD).food(FoodComponents.MUSHROOM_STEW))));
        STRING = register((String)"string", (Item)(new AliasedBlockItem(Blocks.TRIPWIRE, (new Item.Settings()).group(ItemGroup.MISC))));
        FEATHER = register("feather", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        GUNPOWDER = register("gunpowder", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        WHEAT_SEEDS = register((String)"wheat_seeds", (Item)(new AliasedBlockItem(Blocks.WHEAT, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        WHEAT = register("wheat", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        BREAD = register("bread", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.BREAD)));
        LEATHER_HELMET = register((String)"leather_helmet", (Item)(new DyeableArmorItem(ArmorMaterials.LEATHER, EquipmentSlot.HEAD, (new Item.Settings()).group(ItemGroup.COMBAT))));
        LEATHER_CHESTPLATE = register((String)"leather_chestplate", (Item)(new DyeableArmorItem(ArmorMaterials.LEATHER, EquipmentSlot.CHEST, (new Item.Settings()).group(ItemGroup.COMBAT))));
        LEATHER_LEGGINGS = register((String)"leather_leggings", (Item)(new DyeableArmorItem(ArmorMaterials.LEATHER, EquipmentSlot.LEGS, (new Item.Settings()).group(ItemGroup.COMBAT))));
        LEATHER_BOOTS = register((String)"leather_boots", (Item)(new DyeableArmorItem(ArmorMaterials.LEATHER, EquipmentSlot.FEET, (new Item.Settings()).group(ItemGroup.COMBAT))));
        CHAINMAIL_HELMET = register((String)"chainmail_helmet", (Item)(new ArmorItem(ArmorMaterials.CHAIN, EquipmentSlot.HEAD, (new Item.Settings()).group(ItemGroup.COMBAT))));
        CHAINMAIL_CHESTPLATE = register((String)"chainmail_chestplate", (Item)(new ArmorItem(ArmorMaterials.CHAIN, EquipmentSlot.CHEST, (new Item.Settings()).group(ItemGroup.COMBAT))));
        CHAINMAIL_LEGGINGS = register((String)"chainmail_leggings", (Item)(new ArmorItem(ArmorMaterials.CHAIN, EquipmentSlot.LEGS, (new Item.Settings()).group(ItemGroup.COMBAT))));
        CHAINMAIL_BOOTS = register((String)"chainmail_boots", (Item)(new ArmorItem(ArmorMaterials.CHAIN, EquipmentSlot.FEET, (new Item.Settings()).group(ItemGroup.COMBAT))));
        IRON_HELMET = register((String)"iron_helmet", (Item)(new ArmorItem(ArmorMaterials.IRON, EquipmentSlot.HEAD, (new Item.Settings()).group(ItemGroup.COMBAT))));
        IRON_CHESTPLATE = register((String)"iron_chestplate", (Item)(new ArmorItem(ArmorMaterials.IRON, EquipmentSlot.CHEST, (new Item.Settings()).group(ItemGroup.COMBAT))));
        IRON_LEGGINGS = register((String)"iron_leggings", (Item)(new ArmorItem(ArmorMaterials.IRON, EquipmentSlot.LEGS, (new Item.Settings()).group(ItemGroup.COMBAT))));
        IRON_BOOTS = register((String)"iron_boots", (Item)(new ArmorItem(ArmorMaterials.IRON, EquipmentSlot.FEET, (new Item.Settings()).group(ItemGroup.COMBAT))));
        DIAMOND_HELMET = register((String)"diamond_helmet", (Item)(new ArmorItem(ArmorMaterials.DIAMOND, EquipmentSlot.HEAD, (new Item.Settings()).group(ItemGroup.COMBAT))));
        DIAMOND_CHESTPLATE = register((String)"diamond_chestplate", (Item)(new ArmorItem(ArmorMaterials.DIAMOND, EquipmentSlot.CHEST, (new Item.Settings()).group(ItemGroup.COMBAT))));
        DIAMOND_LEGGINGS = register((String)"diamond_leggings", (Item)(new ArmorItem(ArmorMaterials.DIAMOND, EquipmentSlot.LEGS, (new Item.Settings()).group(ItemGroup.COMBAT))));
        DIAMOND_BOOTS = register((String)"diamond_boots", (Item)(new ArmorItem(ArmorMaterials.DIAMOND, EquipmentSlot.FEET, (new Item.Settings()).group(ItemGroup.COMBAT))));
        GOLDEN_HELMET = register((String)"golden_helmet", (Item)(new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.HEAD, (new Item.Settings()).group(ItemGroup.COMBAT))));
        GOLDEN_CHESTPLATE = register((String)"golden_chestplate", (Item)(new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.CHEST, (new Item.Settings()).group(ItemGroup.COMBAT))));
        GOLDEN_LEGGINGS = register((String)"golden_leggings", (Item)(new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.LEGS, (new Item.Settings()).group(ItemGroup.COMBAT))));
        GOLDEN_BOOTS = register((String)"golden_boots", (Item)(new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.FEET, (new Item.Settings()).group(ItemGroup.COMBAT))));
        NETHERITE_HELMET = register((String)"netherite_helmet", (Item)(new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.HEAD, (new Item.Settings()).group(ItemGroup.COMBAT).fireproof())));
        NETHERITE_CHESTPLATE = register((String)"netherite_chestplate", (Item)(new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.CHEST, (new Item.Settings()).group(ItemGroup.COMBAT).fireproof())));
        NETHERITE_LEGGINGS = register((String)"netherite_leggings", (Item)(new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.LEGS, (new Item.Settings()).group(ItemGroup.COMBAT).fireproof())));
        NETHERITE_BOOTS = register((String)"netherite_boots", (Item)(new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.FEET, (new Item.Settings()).group(ItemGroup.COMBAT).fireproof())));
        FLINT = register("flint", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        PORKCHOP = register("porkchop", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.PORKCHOP)));
        COOKED_PORKCHOP = register("cooked_porkchop", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.COOKED_PORKCHOP)));
        PAINTING = register((String)"painting", (Item)(new DecorationItem(EntityType.PAINTING, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        GOLDEN_APPLE = register("golden_apple", new Item((new Item.Settings()).group(ItemGroup.FOOD).rarity(Rarity.RARE).food(FoodComponents.GOLDEN_APPLE)));
        ENCHANTED_GOLDEN_APPLE = register((String)"enchanted_golden_apple", (Item)(new EnchantedGoldenAppleItem((new Item.Settings()).group(ItemGroup.FOOD).rarity(Rarity.EPIC).food(FoodComponents.ENCHANTED_GOLDEN_APPLE))));
        OAK_SIGN = register((String)"oak_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS), Blocks.OAK_SIGN, Blocks.OAK_WALL_SIGN)));
        SPRUCE_SIGN = register((String)"spruce_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS), Blocks.SPRUCE_SIGN, Blocks.SPRUCE_WALL_SIGN)));
        BIRCH_SIGN = register((String)"birch_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS), Blocks.BIRCH_SIGN, Blocks.BIRCH_WALL_SIGN)));
        JUNGLE_SIGN = register((String)"jungle_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS), Blocks.JUNGLE_SIGN, Blocks.JUNGLE_WALL_SIGN)));
        ACACIA_SIGN = register((String)"acacia_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS), Blocks.ACACIA_SIGN, Blocks.ACACIA_WALL_SIGN)));
        DARK_OAK_SIGN = register((String)"dark_oak_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS), Blocks.DARK_OAK_SIGN, Blocks.DARK_OAK_WALL_SIGN)));
        CRIMSON_SIGN = register((String)"crimson_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS), Blocks.CRIMSON_SIGN, Blocks.CRIMSON_WALL_SIGN)));
        WARPED_SIGN = register((String)"warped_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS), Blocks.WARPED_SIGN, Blocks.WARPED_WALL_SIGN)));
        BUCKET = register((String)"bucket", (Item)(new BucketItem(Fluids.EMPTY, (new Item.Settings()).maxCount(16).group(ItemGroup.MISC))));
        WATER_BUCKET = register((String)"water_bucket", (Item)(new BucketItem(Fluids.WATER, (new Item.Settings()).recipeRemainder(BUCKET).maxCount(1).group(ItemGroup.MISC))));
        LAVA_BUCKET = register((String)"lava_bucket", (Item)(new BucketItem(Fluids.LAVA, (new Item.Settings()).recipeRemainder(BUCKET).maxCount(1).group(ItemGroup.MISC))));
        POWDER_SNOW_BUCKET = register((String)"powder_snow_bucket", (Item)(new PowderSnowBucketItem(Blocks.POWDER_SNOW, SoundEvents.ITEM_BUCKET_EMPTY_POWDER_SNOW, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        SNOWBALL = register((String)"snowball", (Item)(new SnowballItem((new Item.Settings()).maxCount(16).group(ItemGroup.MISC))));
        LEATHER = register("leather", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        MILK_BUCKET = register((String)"milk_bucket", (Item)(new MilkBucketItem((new Item.Settings()).recipeRemainder(BUCKET).maxCount(1).group(ItemGroup.MISC))));
        PUFFERFISH_BUCKET = register((String)"pufferfish_bucket", (Item)(new EntityBucketItem(EntityType.PUFFERFISH, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_FISH, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        SALMON_BUCKET = register((String)"salmon_bucket", (Item)(new EntityBucketItem(EntityType.SALMON, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_FISH, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        COD_BUCKET = register((String)"cod_bucket", (Item)(new EntityBucketItem(EntityType.COD, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_FISH, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        TROPICAL_FISH_BUCKET = register((String)"tropical_fish_bucket", (Item)(new EntityBucketItem(EntityType.TROPICAL_FISH, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_FISH, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        AXOLOTL_BUCKET = register((String)"axolotl_bucket", (Item)(new EntityBucketItem(EntityType.AXOLOTL, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_AXOLOTL, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        BRICK = register("brick", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        CLAY_BALL = register("clay_ball", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        DRIED_KELP_BLOCK = register(Blocks.DRIED_KELP_BLOCK, ItemGroup.BUILDING_BLOCKS);
        PAPER = register("paper", new Item((new Item.Settings()).group(ItemGroup.MISC)));
        BOOK = register((String)"book", (Item)(new BookItem((new Item.Settings()).group(ItemGroup.MISC))));
        SLIME_BALL = register("slime_ball", new Item((new Item.Settings()).group(ItemGroup.MISC)));
        EGG = register((String)"egg", (Item)(new EggItem((new Item.Settings()).maxCount(16).group(ItemGroup.MATERIALS))));
        COMPASS = register((String)"compass", (Item)(new CompassItem((new Item.Settings()).group(ItemGroup.TOOLS))));
        BUNDLE = register((String)"bundle", (Item)(new BundleItem((new Item.Settings()).maxCount(1).group((ItemGroup)createEmptyOptional(ItemGroup.TOOLS).orElse((Object)null)))));
        FISHING_ROD = register((String)"fishing_rod", (Item)(new FishingRodItem((new Item.Settings()).maxDamage(64).group(ItemGroup.TOOLS))));
        CLOCK = register("clock", new Item((new Item.Settings()).group(ItemGroup.TOOLS)));
        SPYGLASS = register((String)"spyglass", (Item)(new SpyglassItem((new Item.Settings()).group(ItemGroup.TOOLS).maxCount(1))));
        GLOWSTONE_DUST = register("glowstone_dust", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        COD = register("cod", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.COD)));
        SALMON = register("salmon", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.SALMON)));
        TROPICAL_FISH = register("tropical_fish", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.TROPICAL_FISH)));
        PUFFERFISH = register("pufferfish", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.PUFFERFISH)));
        COOKED_COD = register("cooked_cod", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.COOKED_COD)));
        COOKED_SALMON = register("cooked_salmon", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.COOKED_SALMON)));
        INK_SAC = register("ink_sac", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        GLOW_INK_SAC = register("glow_ink_sac", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        COCOA_BEANS = register((String)"cocoa_beans", (Item)(new AliasedBlockItem(Blocks.COCOA, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        WHITE_DYE = register((String)"white_dye", (Item)(new DyeItem(DyeColor.WHITE, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        ORANGE_DYE = register((String)"orange_dye", (Item)(new DyeItem(DyeColor.ORANGE, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        MAGENTA_DYE = register((String)"magenta_dye", (Item)(new DyeItem(DyeColor.MAGENTA, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        LIGHT_BLUE_DYE = register((String)"light_blue_dye", (Item)(new DyeItem(DyeColor.LIGHT_BLUE, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        YELLOW_DYE = register((String)"yellow_dye", (Item)(new DyeItem(DyeColor.YELLOW, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        LIME_DYE = register((String)"lime_dye", (Item)(new DyeItem(DyeColor.LIME, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        PINK_DYE = register((String)"pink_dye", (Item)(new DyeItem(DyeColor.PINK, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        GRAY_DYE = register((String)"gray_dye", (Item)(new DyeItem(DyeColor.GRAY, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        LIGHT_GRAY_DYE = register((String)"light_gray_dye", (Item)(new DyeItem(DyeColor.LIGHT_GRAY, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        CYAN_DYE = register((String)"cyan_dye", (Item)(new DyeItem(DyeColor.CYAN, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        PURPLE_DYE = register((String)"purple_dye", (Item)(new DyeItem(DyeColor.PURPLE, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        BLUE_DYE = register((String)"blue_dye", (Item)(new DyeItem(DyeColor.BLUE, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        BROWN_DYE = register((String)"brown_dye", (Item)(new DyeItem(DyeColor.BROWN, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        GREEN_DYE = register((String)"green_dye", (Item)(new DyeItem(DyeColor.GREEN, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        RED_DYE = register((String)"red_dye", (Item)(new DyeItem(DyeColor.RED, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        BLACK_DYE = register((String)"black_dye", (Item)(new DyeItem(DyeColor.BLACK, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        BONE_MEAL = register((String)"bone_meal", (Item)(new BoneMealItem((new Item.Settings()).group(ItemGroup.MATERIALS))));
        BONE = register("bone", new Item((new Item.Settings()).group(ItemGroup.MISC)));
        SUGAR = register("sugar", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        CAKE = register(new BlockItem(Blocks.CAKE, (new Item.Settings()).maxCount(1).group(ItemGroup.FOOD)));
        WHITE_BED = register((BlockItem)(new BedItem(Blocks.WHITE_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        ORANGE_BED = register((BlockItem)(new BedItem(Blocks.ORANGE_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        MAGENTA_BED = register((BlockItem)(new BedItem(Blocks.MAGENTA_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        LIGHT_BLUE_BED = register((BlockItem)(new BedItem(Blocks.LIGHT_BLUE_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        YELLOW_BED = register((BlockItem)(new BedItem(Blocks.YELLOW_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        LIME_BED = register((BlockItem)(new BedItem(Blocks.LIME_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        PINK_BED = register((BlockItem)(new BedItem(Blocks.PINK_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        GRAY_BED = register((BlockItem)(new BedItem(Blocks.GRAY_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        LIGHT_GRAY_BED = register((BlockItem)(new BedItem(Blocks.LIGHT_GRAY_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        CYAN_BED = register((BlockItem)(new BedItem(Blocks.CYAN_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        PURPLE_BED = register((BlockItem)(new BedItem(Blocks.PURPLE_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        BLUE_BED = register((BlockItem)(new BedItem(Blocks.BLUE_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        BROWN_BED = register((BlockItem)(new BedItem(Blocks.BROWN_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        GREEN_BED = register((BlockItem)(new BedItem(Blocks.GREEN_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        RED_BED = register((BlockItem)(new BedItem(Blocks.RED_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        BLACK_BED = register((BlockItem)(new BedItem(Blocks.BLACK_BED, (new Item.Settings()).maxCount(1).group(ItemGroup.DECORATIONS))));
        COOKIE = register("cookie", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.COOKIE)));
        FILLED_MAP = register((String)"filled_map", (Item)(new FilledMapItem(new Item.Settings())));
        SHEARS = register((String)"shears", (Item)(new ShearsItem((new Item.Settings()).maxDamage(238).group(ItemGroup.TOOLS))));
        MELON_SLICE = register("melon_slice", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.MELON_SLICE)));
        DRIED_KELP = register("dried_kelp", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.DRIED_KELP)));
        PUMPKIN_SEEDS = register((String)"pumpkin_seeds", (Item)(new AliasedBlockItem(Blocks.PUMPKIN_STEM, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        MELON_SEEDS = register((String)"melon_seeds", (Item)(new AliasedBlockItem(Blocks.MELON_STEM, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        BEEF = register("beef", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.BEEF)));
        COOKED_BEEF = register("cooked_beef", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.COOKED_BEEF)));
        CHICKEN = register("chicken", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.CHICKEN)));
        COOKED_CHICKEN = register("cooked_chicken", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.COOKED_CHICKEN)));
        ROTTEN_FLESH = register("rotten_flesh", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.ROTTEN_FLESH)));
        ENDER_PEARL = register((String)"ender_pearl", (Item)(new EnderPearlItem((new Item.Settings()).maxCount(16).group(ItemGroup.MISC))));
        BLAZE_ROD = register("blaze_rod", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        GHAST_TEAR = register("ghast_tear", new Item((new Item.Settings()).group(ItemGroup.BREWING)));
        GOLD_NUGGET = register("gold_nugget", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        NETHER_WART = register((String)"nether_wart", (Item)(new AliasedBlockItem(Blocks.NETHER_WART, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        POTION = register((String)"potion", (Item)(new PotionItem((new Item.Settings()).maxCount(1).group(ItemGroup.BREWING))));
        GLASS_BOTTLE = register((String)"glass_bottle", (Item)(new GlassBottleItem((new Item.Settings()).group(ItemGroup.BREWING))));
        SPIDER_EYE = register("spider_eye", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.SPIDER_EYE)));
        FERMENTED_SPIDER_EYE = register("fermented_spider_eye", new Item((new Item.Settings()).group(ItemGroup.BREWING)));
        BLAZE_POWDER = register("blaze_powder", new Item((new Item.Settings()).group(ItemGroup.BREWING)));
        MAGMA_CREAM = register("magma_cream", new Item((new Item.Settings()).group(ItemGroup.BREWING)));
        BREWING_STAND = register(Blocks.BREWING_STAND, ItemGroup.BREWING);
        CAULDRON = register(Blocks.CAULDRON, ItemGroup.BREWING, Blocks.WATER_CAULDRON, Blocks.LAVA_CAULDRON, Blocks.POWDER_SNOW_CAULDRON);
        ENDER_EYE = register((String)"ender_eye", (Item)(new EnderEyeItem((new Item.Settings()).group(ItemGroup.MISC))));
        GLISTERING_MELON_SLICE = register("glistering_melon_slice", new Item((new Item.Settings()).group(ItemGroup.BREWING)));
        AXOLOTL_SPAWN_EGG = register((String)"axolotl_spawn_egg", (Item)(new SpawnEggItem(EntityType.AXOLOTL, 16499171, 10890612, (new Item.Settings()).group(ItemGroup.MISC))));
        BAT_SPAWN_EGG = register((String)"bat_spawn_egg", (Item)(new SpawnEggItem(EntityType.BAT, 4996656, 986895, (new Item.Settings()).group(ItemGroup.MISC))));
        BEE_SPAWN_EGG = register((String)"bee_spawn_egg", (Item)(new SpawnEggItem(EntityType.BEE, 15582019, 4400155, (new Item.Settings()).group(ItemGroup.MISC))));
        BLAZE_SPAWN_EGG = register((String)"blaze_spawn_egg", (Item)(new SpawnEggItem(EntityType.BLAZE, 16167425, 16775294, (new Item.Settings()).group(ItemGroup.MISC))));
        CAT_SPAWN_EGG = register((String)"cat_spawn_egg", (Item)(new SpawnEggItem(EntityType.CAT, 15714446, 9794134, (new Item.Settings()).group(ItemGroup.MISC))));
        CAVE_SPIDER_SPAWN_EGG = register((String)"cave_spider_spawn_egg", (Item)(new SpawnEggItem(EntityType.CAVE_SPIDER, 803406, 11013646, (new Item.Settings()).group(ItemGroup.MISC))));
        CHICKEN_SPAWN_EGG = register((String)"chicken_spawn_egg", (Item)(new SpawnEggItem(EntityType.CHICKEN, 10592673, 16711680, (new Item.Settings()).group(ItemGroup.MISC))));
        COD_SPAWN_EGG = register((String)"cod_spawn_egg", (Item)(new SpawnEggItem(EntityType.COD, 12691306, 15058059, (new Item.Settings()).group(ItemGroup.MISC))));
        COW_SPAWN_EGG = register((String)"cow_spawn_egg", (Item)(new SpawnEggItem(EntityType.COW, 4470310, 10592673, (new Item.Settings()).group(ItemGroup.MISC))));
        CREEPER_SPAWN_EGG = register((String)"creeper_spawn_egg", (Item)(new SpawnEggItem(EntityType.CREEPER, 894731, 0, (new Item.Settings()).group(ItemGroup.MISC))));
        DOLPHIN_SPAWN_EGG = register((String)"dolphin_spawn_egg", (Item)(new SpawnEggItem(EntityType.DOLPHIN, 2243405, 16382457, (new Item.Settings()).group(ItemGroup.MISC))));
        DONKEY_SPAWN_EGG = register((String)"donkey_spawn_egg", (Item)(new SpawnEggItem(EntityType.DONKEY, 5457209, 8811878, (new Item.Settings()).group(ItemGroup.MISC))));
        DROWNED_SPAWN_EGG = register((String)"drowned_spawn_egg", (Item)(new SpawnEggItem(EntityType.DROWNED, 9433559, 7969893, (new Item.Settings()).group(ItemGroup.MISC))));
        ELDER_GUARDIAN_SPAWN_EGG = register((String)"elder_guardian_spawn_egg", (Item)(new SpawnEggItem(EntityType.ELDER_GUARDIAN, 13552826, 7632531, (new Item.Settings()).group(ItemGroup.MISC))));
        ENDERMAN_SPAWN_EGG = register((String)"enderman_spawn_egg", (Item)(new SpawnEggItem(EntityType.ENDERMAN, 1447446, 0, (new Item.Settings()).group(ItemGroup.MISC))));
        ENDERMITE_SPAWN_EGG = register((String)"endermite_spawn_egg", (Item)(new SpawnEggItem(EntityType.ENDERMITE, 1447446, 7237230, (new Item.Settings()).group(ItemGroup.MISC))));
        EVOKER_SPAWN_EGG = register((String)"evoker_spawn_egg", (Item)(new SpawnEggItem(EntityType.EVOKER, 9804699, 1973274, (new Item.Settings()).group(ItemGroup.MISC))));
        FOX_SPAWN_EGG = register((String)"fox_spawn_egg", (Item)(new SpawnEggItem(EntityType.FOX, 14005919, 13396256, (new Item.Settings()).group(ItemGroup.MISC))));
        GHAST_SPAWN_EGG = register((String)"ghast_spawn_egg", (Item)(new SpawnEggItem(EntityType.GHAST, 16382457, 12369084, (new Item.Settings()).group(ItemGroup.MISC))));
        GLOW_SQUID_SPAWN_EGG = register((String)"glow_squid_spawn_egg", (Item)(new SpawnEggItem(EntityType.GLOW_SQUID, 611926, 8778172, (new Item.Settings()).group(ItemGroup.MISC))));
        GOAT_SPAWN_EGG = register((String)"goat_spawn_egg", (Item)(new SpawnEggItem(EntityType.GOAT, 10851452, 5589310, (new Item.Settings()).group(ItemGroup.MISC))));
        GUARDIAN_SPAWN_EGG = register((String)"guardian_spawn_egg", (Item)(new SpawnEggItem(EntityType.GUARDIAN, 5931634, 15826224, (new Item.Settings()).group(ItemGroup.MISC))));
        HOGLIN_SPAWN_EGG = register((String)"hoglin_spawn_egg", (Item)(new SpawnEggItem(EntityType.HOGLIN, 13004373, 6251620, (new Item.Settings()).group(ItemGroup.MISC))));
        HORSE_SPAWN_EGG = register((String)"horse_spawn_egg", (Item)(new SpawnEggItem(EntityType.HORSE, 12623485, 15656192, (new Item.Settings()).group(ItemGroup.MISC))));
        HUSK_SPAWN_EGG = register((String)"husk_spawn_egg", (Item)(new SpawnEggItem(EntityType.HUSK, 7958625, 15125652, (new Item.Settings()).group(ItemGroup.MISC))));
        LLAMA_SPAWN_EGG = register((String)"llama_spawn_egg", (Item)(new SpawnEggItem(EntityType.LLAMA, 12623485, 10051392, (new Item.Settings()).group(ItemGroup.MISC))));
        MAGMA_CUBE_SPAWN_EGG = register((String)"magma_cube_spawn_egg", (Item)(new SpawnEggItem(EntityType.MAGMA_CUBE, 3407872, 16579584, (new Item.Settings()).group(ItemGroup.MISC))));
        MOOSHROOM_SPAWN_EGG = register((String)"mooshroom_spawn_egg", (Item)(new SpawnEggItem(EntityType.MOOSHROOM, 10489616, 12040119, (new Item.Settings()).group(ItemGroup.MISC))));
        MULE_SPAWN_EGG = register((String)"mule_spawn_egg", (Item)(new SpawnEggItem(EntityType.MULE, 1769984, 5321501, (new Item.Settings()).group(ItemGroup.MISC))));
        OCELOT_SPAWN_EGG = register((String)"ocelot_spawn_egg", (Item)(new SpawnEggItem(EntityType.OCELOT, 15720061, 5653556, (new Item.Settings()).group(ItemGroup.MISC))));
        PANDA_SPAWN_EGG = register((String)"panda_spawn_egg", (Item)(new SpawnEggItem(EntityType.PANDA, 15198183, 1776418, (new Item.Settings()).group(ItemGroup.MISC))));
        PARROT_SPAWN_EGG = register((String)"parrot_spawn_egg", (Item)(new SpawnEggItem(EntityType.PARROT, 894731, 16711680, (new Item.Settings()).group(ItemGroup.MISC))));
        PHANTOM_SPAWN_EGG = register((String)"phantom_spawn_egg", (Item)(new SpawnEggItem(EntityType.PHANTOM, 4411786, 8978176, (new Item.Settings()).group(ItemGroup.MISC))));
        PIG_SPAWN_EGG = register((String)"pig_spawn_egg", (Item)(new SpawnEggItem(EntityType.PIG, 15771042, 14377823, (new Item.Settings()).group(ItemGroup.MISC))));
        PIGLIN_SPAWN_EGG = register((String)"piglin_spawn_egg", (Item)(new SpawnEggItem(EntityType.PIGLIN, 10051392, 16380836, (new Item.Settings()).group(ItemGroup.MISC))));
        PIGLIN_BRUTE_SPAWN_EGG = register((String)"piglin_brute_spawn_egg", (Item)(new SpawnEggItem(EntityType.PIGLIN_BRUTE, 5843472, 16380836, (new Item.Settings()).group(ItemGroup.MISC))));
        PILLAGER_SPAWN_EGG = register((String)"pillager_spawn_egg", (Item)(new SpawnEggItem(EntityType.PILLAGER, 5451574, 9804699, (new Item.Settings()).group(ItemGroup.MISC))));
        POLAR_BEAR_SPAWN_EGG = register((String)"polar_bear_spawn_egg", (Item)(new SpawnEggItem(EntityType.POLAR_BEAR, 15921906, 9803152, (new Item.Settings()).group(ItemGroup.MISC))));
        PUFFERFISH_SPAWN_EGG = register((String)"pufferfish_spawn_egg", (Item)(new SpawnEggItem(EntityType.PUFFERFISH, 16167425, 3654642, (new Item.Settings()).group(ItemGroup.MISC))));
        RABBIT_SPAWN_EGG = register((String)"rabbit_spawn_egg", (Item)(new SpawnEggItem(EntityType.RABBIT, 10051392, 7555121, (new Item.Settings()).group(ItemGroup.MISC))));
        RAVAGER_SPAWN_EGG = register((String)"ravager_spawn_egg", (Item)(new SpawnEggItem(EntityType.RAVAGER, 7697520, 5984329, (new Item.Settings()).group(ItemGroup.MISC))));
        SALMON_SPAWN_EGG = register((String)"salmon_spawn_egg", (Item)(new SpawnEggItem(EntityType.SALMON, 10489616, 951412, (new Item.Settings()).group(ItemGroup.MISC))));
        SHEEP_SPAWN_EGG = register((String)"sheep_spawn_egg", (Item)(new SpawnEggItem(EntityType.SHEEP, 15198183, 16758197, (new Item.Settings()).group(ItemGroup.MISC))));
        SHULKER_SPAWN_EGG = register((String)"shulker_spawn_egg", (Item)(new SpawnEggItem(EntityType.SHULKER, 9725844, 5060690, (new Item.Settings()).group(ItemGroup.MISC))));
        SILVERFISH_SPAWN_EGG = register((String)"silverfish_spawn_egg", (Item)(new SpawnEggItem(EntityType.SILVERFISH, 7237230, 3158064, (new Item.Settings()).group(ItemGroup.MISC))));
        SKELETON_SPAWN_EGG = register((String)"skeleton_spawn_egg", (Item)(new SpawnEggItem(EntityType.SKELETON, 12698049, 4802889, (new Item.Settings()).group(ItemGroup.MISC))));
        SKELETON_HORSE_SPAWN_EGG = register((String)"skeleton_horse_spawn_egg", (Item)(new SpawnEggItem(EntityType.SKELETON_HORSE, 6842447, 15066584, (new Item.Settings()).group(ItemGroup.MISC))));
        SLIME_SPAWN_EGG = register((String)"slime_spawn_egg", (Item)(new SpawnEggItem(EntityType.SLIME, 5349438, 8306542, (new Item.Settings()).group(ItemGroup.MISC))));
        SPIDER_SPAWN_EGG = register((String)"spider_spawn_egg", (Item)(new SpawnEggItem(EntityType.SPIDER, 3419431, 11013646, (new Item.Settings()).group(ItemGroup.MISC))));
        SQUID_SPAWN_EGG = register((String)"squid_spawn_egg", (Item)(new SpawnEggItem(EntityType.SQUID, 2243405, 7375001, (new Item.Settings()).group(ItemGroup.MISC))));
        STRAY_SPAWN_EGG = register((String)"stray_spawn_egg", (Item)(new SpawnEggItem(EntityType.STRAY, 6387319, 14543594, (new Item.Settings()).group(ItemGroup.MISC))));
        STRIDER_SPAWN_EGG = register((String)"strider_spawn_egg", (Item)(new SpawnEggItem(EntityType.STRIDER, 10236982, 5065037, (new Item.Settings()).group(ItemGroup.MISC))));
        TRADER_LLAMA_SPAWN_EGG = register((String)"trader_llama_spawn_egg", (Item)(new SpawnEggItem(EntityType.TRADER_LLAMA, 15377456, 4547222, (new Item.Settings()).group(ItemGroup.MISC))));
        TROPICAL_FISH_SPAWN_EGG = register((String)"tropical_fish_spawn_egg", (Item)(new SpawnEggItem(EntityType.TROPICAL_FISH, 15690005, 16775663, (new Item.Settings()).group(ItemGroup.MISC))));
        TURTLE_SPAWN_EGG = register((String)"turtle_spawn_egg", (Item)(new SpawnEggItem(EntityType.TURTLE, 15198183, 44975, (new Item.Settings()).group(ItemGroup.MISC))));
        VEX_SPAWN_EGG = register((String)"vex_spawn_egg", (Item)(new SpawnEggItem(EntityType.VEX, 8032420, 15265265, (new Item.Settings()).group(ItemGroup.MISC))));
        VILLAGER_SPAWN_EGG = register((String)"villager_spawn_egg", (Item)(new SpawnEggItem(EntityType.VILLAGER, 5651507, 12422002, (new Item.Settings()).group(ItemGroup.MISC))));
        VINDICATOR_SPAWN_EGG = register((String)"vindicator_spawn_egg", (Item)(new SpawnEggItem(EntityType.VINDICATOR, 9804699, 2580065, (new Item.Settings()).group(ItemGroup.MISC))));
        WANDERING_TRADER_SPAWN_EGG = register((String)"wandering_trader_spawn_egg", (Item)(new SpawnEggItem(EntityType.WANDERING_TRADER, 4547222, 15377456, (new Item.Settings()).group(ItemGroup.MISC))));
        WITCH_SPAWN_EGG = register((String)"witch_spawn_egg", (Item)(new SpawnEggItem(EntityType.WITCH, 3407872, 5349438, (new Item.Settings()).group(ItemGroup.MISC))));
        WITHER_SKELETON_SPAWN_EGG = register((String)"wither_skeleton_spawn_egg", (Item)(new SpawnEggItem(EntityType.WITHER_SKELETON, 1315860, 4672845, (new Item.Settings()).group(ItemGroup.MISC))));
        WOLF_SPAWN_EGG = register((String)"wolf_spawn_egg", (Item)(new SpawnEggItem(EntityType.WOLF, 14144467, 13545366, (new Item.Settings()).group(ItemGroup.MISC))));
        ZOGLIN_SPAWN_EGG = register((String)"zoglin_spawn_egg", (Item)(new SpawnEggItem(EntityType.ZOGLIN, 13004373, 15132390, (new Item.Settings()).group(ItemGroup.MISC))));
        ZOMBIE_SPAWN_EGG = register((String)"zombie_spawn_egg", (Item)(new SpawnEggItem(EntityType.ZOMBIE, 44975, 7969893, (new Item.Settings()).group(ItemGroup.MISC))));
        ZOMBIE_HORSE_SPAWN_EGG = register((String)"zombie_horse_spawn_egg", (Item)(new SpawnEggItem(EntityType.ZOMBIE_HORSE, 3232308, 9945732, (new Item.Settings()).group(ItemGroup.MISC))));
        ZOMBIE_VILLAGER_SPAWN_EGG = register((String)"zombie_villager_spawn_egg", (Item)(new SpawnEggItem(EntityType.ZOMBIE_VILLAGER, 5651507, 7969893, (new Item.Settings()).group(ItemGroup.MISC))));
        ZOMBIFIED_PIGLIN_SPAWN_EGG = register((String)"zombified_piglin_spawn_egg", (Item)(new SpawnEggItem(EntityType.ZOMBIFIED_PIGLIN, 15373203, 5009705, (new Item.Settings()).group(ItemGroup.MISC))));
        EXPERIENCE_BOTTLE = register((String)"experience_bottle", (Item)(new ExperienceBottleItem((new Item.Settings()).group(ItemGroup.MISC).rarity(Rarity.UNCOMMON))));
        FIRE_CHARGE = register((String)"fire_charge", (Item)(new FireChargeItem((new Item.Settings()).group(ItemGroup.MISC))));
        WRITABLE_BOOK = register((String)"writable_book", (Item)(new WritableBookItem((new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        WRITTEN_BOOK = register((String)"written_book", (Item)(new WrittenBookItem((new Item.Settings()).maxCount(16))));
        ITEM_FRAME = register((String)"item_frame", (Item)(new ItemFrameItem(EntityType.ITEM_FRAME, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        GLOW_ITEM_FRAME = register((String)"glow_item_frame", (Item)(new ItemFrameItem(EntityType.GLOW_ITEM_FRAME, (new Item.Settings()).group(ItemGroup.DECORATIONS))));
        FLOWER_POT = register(Blocks.FLOWER_POT, ItemGroup.DECORATIONS);
        CARROT = register((String)"carrot", (Item)(new AliasedBlockItem(Blocks.CARROTS, (new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.CARROT))));
        POTATO = register((String)"potato", (Item)(new AliasedBlockItem(Blocks.POTATOES, (new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.POTATO))));
        BAKED_POTATO = register("baked_potato", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.BAKED_POTATO)));
        POISONOUS_POTATO = register("poisonous_potato", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.POISONOUS_POTATO)));
        MAP = register((String)"map", (Item)(new EmptyMapItem((new Item.Settings()).group(ItemGroup.MISC))));
        GOLDEN_CARROT = register("golden_carrot", new Item((new Item.Settings()).group(ItemGroup.BREWING).food(FoodComponents.GOLDEN_CARROT)));
        SKELETON_SKULL = register((BlockItem)(new WallStandingBlockItem(Blocks.SKELETON_SKULL, Blocks.SKELETON_WALL_SKULL, (new Item.Settings()).group(ItemGroup.DECORATIONS).rarity(Rarity.UNCOMMON))));
        WITHER_SKELETON_SKULL = register((BlockItem)(new WallStandingBlockItem(Blocks.WITHER_SKELETON_SKULL, Blocks.WITHER_SKELETON_WALL_SKULL, (new Item.Settings()).group(ItemGroup.DECORATIONS).rarity(Rarity.UNCOMMON))));
        PLAYER_HEAD = register((BlockItem)(new SkullItem(Blocks.PLAYER_HEAD, Blocks.PLAYER_WALL_HEAD, (new Item.Settings()).group(ItemGroup.DECORATIONS).rarity(Rarity.UNCOMMON))));
        ZOMBIE_HEAD = register((BlockItem)(new WallStandingBlockItem(Blocks.ZOMBIE_HEAD, Blocks.ZOMBIE_WALL_HEAD, (new Item.Settings()).group(ItemGroup.DECORATIONS).rarity(Rarity.UNCOMMON))));
        CREEPER_HEAD = register((BlockItem)(new WallStandingBlockItem(Blocks.CREEPER_HEAD, Blocks.CREEPER_WALL_HEAD, (new Item.Settings()).group(ItemGroup.DECORATIONS).rarity(Rarity.UNCOMMON))));
        DRAGON_HEAD = register((BlockItem)(new WallStandingBlockItem(Blocks.DRAGON_HEAD, Blocks.DRAGON_WALL_HEAD, (new Item.Settings()).group(ItemGroup.DECORATIONS).rarity(Rarity.UNCOMMON))));
        NETHER_STAR = register((String)"nether_star", (Item)(new NetherStarItem((new Item.Settings()).group(ItemGroup.MATERIALS).rarity(Rarity.UNCOMMON))));
        PUMPKIN_PIE = register("pumpkin_pie", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.PUMPKIN_PIE)));
        FIREWORK_ROCKET = register((String)"firework_rocket", (Item)(new FireworkRocketItem((new Item.Settings()).group(ItemGroup.MISC))));
        FIREWORK_STAR = register((String)"firework_star", (Item)(new FireworkStarItem((new Item.Settings()).group(ItemGroup.MISC))));
        ENCHANTED_BOOK = register((String)"enchanted_book", (Item)(new EnchantedBookItem((new Item.Settings()).maxCount(1).rarity(Rarity.UNCOMMON))));
        NETHER_BRICK = register("nether_brick", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        PRISMARINE_SHARD = register("prismarine_shard", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        PRISMARINE_CRYSTALS = register("prismarine_crystals", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        RABBIT = register("rabbit", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.RABBIT)));
        COOKED_RABBIT = register("cooked_rabbit", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.COOKED_RABBIT)));
        RABBIT_STEW = register((String)"rabbit_stew", (Item)(new StewItem((new Item.Settings()).maxCount(1).group(ItemGroup.FOOD).food(FoodComponents.RABBIT_STEW))));
        RABBIT_FOOT = register("rabbit_foot", new Item((new Item.Settings()).group(ItemGroup.BREWING)));
        RABBIT_HIDE = register("rabbit_hide", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        ARMOR_STAND = register((String)"armor_stand", (Item)(new ArmorStandItem((new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        IRON_HORSE_ARMOR = register((String)"iron_horse_armor", (Item)(new HorseArmorItem(5, "iron", (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        GOLDEN_HORSE_ARMOR = register((String)"golden_horse_armor", (Item)(new HorseArmorItem(7, "gold", (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        DIAMOND_HORSE_ARMOR = register((String)"diamond_horse_armor", (Item)(new HorseArmorItem(11, "diamond", (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        LEATHER_HORSE_ARMOR = register((String)"leather_horse_armor", (Item)(new DyeableHorseArmorItem(3, "leather", (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        LEAD = register((String)"lead", (Item)(new LeadItem((new Item.Settings()).group(ItemGroup.TOOLS))));
        NAME_TAG = register((String)"name_tag", (Item)(new NameTagItem((new Item.Settings()).group(ItemGroup.TOOLS))));
        COMMAND_BLOCK_MINECART = register((String)"command_block_minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.COMMAND_BLOCK, (new Item.Settings()).maxCount(1).rarity(Rarity.EPIC))));
        MUTTON = register("mutton", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.MUTTON)));
        COOKED_MUTTON = register("cooked_mutton", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.COOKED_MUTTON)));
        WHITE_BANNER = register((String)"white_banner", (Item)(new BannerItem(Blocks.WHITE_BANNER, Blocks.WHITE_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        ORANGE_BANNER = register((String)"orange_banner", (Item)(new BannerItem(Blocks.ORANGE_BANNER, Blocks.ORANGE_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        MAGENTA_BANNER = register((String)"magenta_banner", (Item)(new BannerItem(Blocks.MAGENTA_BANNER, Blocks.MAGENTA_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        LIGHT_BLUE_BANNER = register((String)"light_blue_banner", (Item)(new BannerItem(Blocks.LIGHT_BLUE_BANNER, Blocks.LIGHT_BLUE_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        YELLOW_BANNER = register((String)"yellow_banner", (Item)(new BannerItem(Blocks.YELLOW_BANNER, Blocks.YELLOW_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        LIME_BANNER = register((String)"lime_banner", (Item)(new BannerItem(Blocks.LIME_BANNER, Blocks.LIME_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        PINK_BANNER = register((String)"pink_banner", (Item)(new BannerItem(Blocks.PINK_BANNER, Blocks.PINK_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        GRAY_BANNER = register((String)"gray_banner", (Item)(new BannerItem(Blocks.GRAY_BANNER, Blocks.GRAY_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        LIGHT_GRAY_BANNER = register((String)"light_gray_banner", (Item)(new BannerItem(Blocks.LIGHT_GRAY_BANNER, Blocks.LIGHT_GRAY_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        CYAN_BANNER = register((String)"cyan_banner", (Item)(new BannerItem(Blocks.CYAN_BANNER, Blocks.CYAN_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        PURPLE_BANNER = register((String)"purple_banner", (Item)(new BannerItem(Blocks.PURPLE_BANNER, Blocks.PURPLE_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        BLUE_BANNER = register((String)"blue_banner", (Item)(new BannerItem(Blocks.BLUE_BANNER, Blocks.BLUE_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        BROWN_BANNER = register((String)"brown_banner", (Item)(new BannerItem(Blocks.BROWN_BANNER, Blocks.BROWN_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        GREEN_BANNER = register((String)"green_banner", (Item)(new BannerItem(Blocks.GREEN_BANNER, Blocks.GREEN_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        RED_BANNER = register((String)"red_banner", (Item)(new BannerItem(Blocks.RED_BANNER, Blocks.RED_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        BLACK_BANNER = register((String)"black_banner", (Item)(new BannerItem(Blocks.BLACK_BANNER, Blocks.BLACK_WALL_BANNER, (new Item.Settings()).maxCount(16).group(ItemGroup.DECORATIONS))));
        END_CRYSTAL = register((String)"end_crystal", (Item)(new EndCrystalItem((new Item.Settings()).group(ItemGroup.DECORATIONS).rarity(Rarity.RARE))));
        CHORUS_FRUIT = register((String)"chorus_fruit", (Item)(new ChorusFruitItem((new Item.Settings()).group(ItemGroup.MATERIALS).food(FoodComponents.CHORUS_FRUIT))));
        POPPED_CHORUS_FRUIT = register("popped_chorus_fruit", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        BEETROOT = register("beetroot", new Item((new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.BEETROOT)));
        BEETROOT_SEEDS = register((String)"beetroot_seeds", (Item)(new AliasedBlockItem(Blocks.BEETROOTS, (new Item.Settings()).group(ItemGroup.MATERIALS))));
        BEETROOT_SOUP = register((String)"beetroot_soup", (Item)(new StewItem((new Item.Settings()).maxCount(1).group(ItemGroup.FOOD).food(FoodComponents.BEETROOT_SOUP))));
        DRAGON_BREATH = register("dragon_breath", new Item((new Item.Settings()).recipeRemainder(GLASS_BOTTLE).group(ItemGroup.BREWING).rarity(Rarity.UNCOMMON)));
        SPLASH_POTION = register((String)"splash_potion", (Item)(new SplashPotionItem((new Item.Settings()).maxCount(1).group(ItemGroup.BREWING))));
        SPECTRAL_ARROW = register((String)"spectral_arrow", (Item)(new SpectralArrowItem((new Item.Settings()).group(ItemGroup.COMBAT))));
        TIPPED_ARROW = register((String)"tipped_arrow", (Item)(new TippedArrowItem((new Item.Settings()).group(ItemGroup.COMBAT))));
        LINGERING_POTION = register((String)"lingering_potion", (Item)(new LingeringPotionItem((new Item.Settings()).maxCount(1).group(ItemGroup.BREWING))));
        SHIELD = register((String)"shield", (Item)(new ShieldItem((new Item.Settings()).maxDamage(336).group(ItemGroup.COMBAT))));
        TOTEM_OF_UNDYING = register("totem_of_undying", new Item((new Item.Settings()).maxCount(1).group(ItemGroup.COMBAT).rarity(Rarity.UNCOMMON)));
        SHULKER_SHELL = register("shulker_shell", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        IRON_NUGGET = register("iron_nugget", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        KNOWLEDGE_BOOK = register((String)"knowledge_book", (Item)(new KnowledgeBookItem((new Item.Settings()).maxCount(1).rarity(Rarity.EPIC))));
        DEBUG_STICK = register((String)"debug_stick", (Item)(new DebugStickItem((new Item.Settings()).maxCount(1).rarity(Rarity.EPIC))));
        MUSIC_DISC_13 = register((String)"music_disc_13", (Item)(new MusicDiscItem(1, SoundEvents.MUSIC_DISC_13, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_CAT = register((String)"music_disc_cat", (Item)(new MusicDiscItem(2, SoundEvents.MUSIC_DISC_CAT, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_BLOCKS = register((String)"music_disc_blocks", (Item)(new MusicDiscItem(3, SoundEvents.MUSIC_DISC_BLOCKS, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_CHIRP = register((String)"music_disc_chirp", (Item)(new MusicDiscItem(4, SoundEvents.MUSIC_DISC_CHIRP, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_FAR = register((String)"music_disc_far", (Item)(new MusicDiscItem(5, SoundEvents.MUSIC_DISC_FAR, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_MALL = register((String)"music_disc_mall", (Item)(new MusicDiscItem(6, SoundEvents.MUSIC_DISC_MALL, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_MELLOHI = register((String)"music_disc_mellohi", (Item)(new MusicDiscItem(7, SoundEvents.MUSIC_DISC_MELLOHI, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_STAL = register((String)"music_disc_stal", (Item)(new MusicDiscItem(8, SoundEvents.MUSIC_DISC_STAL, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_STRAD = register((String)"music_disc_strad", (Item)(new MusicDiscItem(9, SoundEvents.MUSIC_DISC_STRAD, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_WARD = register((String)"music_disc_ward", (Item)(new MusicDiscItem(10, SoundEvents.MUSIC_DISC_WARD, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_11 = register((String)"music_disc_11", (Item)(new MusicDiscItem(11, SoundEvents.MUSIC_DISC_11, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_WAIT = register((String)"music_disc_wait", (Item)(new MusicDiscItem(12, SoundEvents.MUSIC_DISC_WAIT, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_OTHERSIDE = register((String)"music_disc_otherside", (Item)(new MusicDiscItem(14, SoundEvents.MUSIC_DISC_OTHERSIDE, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        MUSIC_DISC_PIGSTEP = register((String)"music_disc_pigstep", (Item)(new MusicDiscItem(13, SoundEvents.MUSIC_DISC_PIGSTEP, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.RARE))));
        TRIDENT = register((String)"trident", (Item)(new TridentItem((new Item.Settings()).maxDamage(250).group(ItemGroup.COMBAT))));
        PHANTOM_MEMBRANE = register("phantom_membrane", new Item((new Item.Settings()).group(ItemGroup.BREWING)));
        NAUTILUS_SHELL = register("nautilus_shell", new Item((new Item.Settings()).group(ItemGroup.MATERIALS)));
        HEART_OF_THE_SEA = register("heart_of_the_sea", new Item((new Item.Settings()).group(ItemGroup.MATERIALS).rarity(Rarity.UNCOMMON)));
        CROSSBOW = register((String)"crossbow", (Item)(new CrossbowItem((new Item.Settings()).maxCount(1).group(ItemGroup.COMBAT).maxDamage(465))));
        SUSPICIOUS_STEW = register((String)"suspicious_stew", (Item)(new SuspiciousStewItem((new Item.Settings()).maxCount(1).food(FoodComponents.SUSPICIOUS_STEW))));
        LOOM = register(Blocks.LOOM, ItemGroup.DECORATIONS);
        FLOWER_BANNER_PATTERN = register((String)"flower_banner_pattern", (Item)(new BannerPatternItem(BannerPattern.FLOWER, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        CREEPER_BANNER_PATTERN = register((String)"creeper_banner_pattern", (Item)(new BannerPatternItem(BannerPattern.CREEPER, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.UNCOMMON))));
        SKULL_BANNER_PATTERN = register((String)"skull_banner_pattern", (Item)(new BannerPatternItem(BannerPattern.SKULL, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.UNCOMMON))));
        MOJANG_BANNER_PATTERN = register((String)"mojang_banner_pattern", (Item)(new BannerPatternItem(BannerPattern.MOJANG, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC).rarity(Rarity.EPIC))));
        GLOBE_BANNER_PATTERN = register((String)"globe_banner_pattern", (Item)(new BannerPatternItem(BannerPattern.GLOBE, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        PIGLIN_BANNER_PATTERN = register((String)"piglin_banner_pattern", (Item)(new BannerPatternItem(BannerPattern.PIGLIN, (new Item.Settings()).maxCount(1).group(ItemGroup.MISC))));
        COMPOSTER = register(Blocks.COMPOSTER, ItemGroup.DECORATIONS);
        BARREL = register(Blocks.BARREL, ItemGroup.DECORATIONS);
        SMOKER = register(Blocks.SMOKER, ItemGroup.DECORATIONS);
        BLAST_FURNACE = register(Blocks.BLAST_FURNACE, ItemGroup.DECORATIONS);
        CARTOGRAPHY_TABLE = register(Blocks.CARTOGRAPHY_TABLE, ItemGroup.DECORATIONS);
        FLETCHING_TABLE = register(Blocks.FLETCHING_TABLE, ItemGroup.DECORATIONS);
        GRINDSTONE = register(Blocks.GRINDSTONE, ItemGroup.DECORATIONS);
        SMITHING_TABLE = register(Blocks.SMITHING_TABLE, ItemGroup.DECORATIONS);
        STONECUTTER = register(Blocks.STONECUTTER, ItemGroup.DECORATIONS);
        BELL = register(Blocks.BELL, ItemGroup.DECORATIONS);
        LANTERN = register(Blocks.LANTERN, ItemGroup.DECORATIONS);
        SOUL_LANTERN = register(Blocks.SOUL_LANTERN, ItemGroup.DECORATIONS);
        SWEET_BERRIES = register((String)"sweet_berries", (Item)(new AliasedBlockItem(Blocks.SWEET_BERRY_BUSH, (new Item.Settings()).group(ItemGroup.FOOD).food(FoodComponents.SWEET_BERRIES))));
        GLOW_BERRIES = register((String)"glow_berries", (Item)(new AliasedBlockItem(Blocks.CAVE_VINES, (new Item.Settings()).food(FoodComponents.GLOW_BERRIES).group(ItemGroup.FOOD))));
        CAMPFIRE = register(Blocks.CAMPFIRE, ItemGroup.DECORATIONS);
        SOUL_CAMPFIRE = register(Blocks.SOUL_CAMPFIRE, ItemGroup.DECORATIONS);
        SHROOMLIGHT = register(Blocks.SHROOMLIGHT, ItemGroup.DECORATIONS);
        HONEYCOMB = register((String)"honeycomb", (Item)(new HoneycombItem((new Item.Settings()).group(ItemGroup.MATERIALS))));
        BEE_NEST = register(Blocks.BEE_NEST, ItemGroup.DECORATIONS);
        BEEHIVE = register(Blocks.BEEHIVE, ItemGroup.DECORATIONS);
        HONEY_BOTTLE = register((String)"honey_bottle", (Item)(new HoneyBottleItem((new Item.Settings()).recipeRemainder(GLASS_BOTTLE).food(FoodComponents.HONEY_BOTTLE).group(ItemGroup.FOOD).maxCount(16))));
        HONEYCOMB_BLOCK = register(Blocks.HONEYCOMB_BLOCK, ItemGroup.DECORATIONS);
        LODESTONE = register(Blocks.LODESTONE, ItemGroup.DECORATIONS);
        CRYING_OBSIDIAN = register(Blocks.CRYING_OBSIDIAN, ItemGroup.BUILDING_BLOCKS);
        BLACKSTONE = register(Blocks.BLACKSTONE, ItemGroup.BUILDING_BLOCKS);
        BLACKSTONE_SLAB = register(Blocks.BLACKSTONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        BLACKSTONE_STAIRS = register(Blocks.BLACKSTONE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        GILDED_BLACKSTONE = register(Blocks.GILDED_BLACKSTONE, ItemGroup.BUILDING_BLOCKS);
        POLISHED_BLACKSTONE = register(Blocks.POLISHED_BLACKSTONE, ItemGroup.BUILDING_BLOCKS);
        POLISHED_BLACKSTONE_SLAB = register(Blocks.POLISHED_BLACKSTONE_SLAB, ItemGroup.BUILDING_BLOCKS);
        POLISHED_BLACKSTONE_STAIRS = register(Blocks.POLISHED_BLACKSTONE_STAIRS, ItemGroup.BUILDING_BLOCKS);
        CHISELED_POLISHED_BLACKSTONE = register(Blocks.CHISELED_POLISHED_BLACKSTONE, ItemGroup.BUILDING_BLOCKS);
        POLISHED_BLACKSTONE_BRICKS = register(Blocks.POLISHED_BLACKSTONE_BRICKS, ItemGroup.BUILDING_BLOCKS);
        POLISHED_BLACKSTONE_BRICK_SLAB = register(Blocks.POLISHED_BLACKSTONE_BRICK_SLAB, ItemGroup.BUILDING_BLOCKS);
        POLISHED_BLACKSTONE_BRICK_STAIRS = register(Blocks.POLISHED_BLACKSTONE_BRICK_STAIRS, ItemGroup.BUILDING_BLOCKS);
        CRACKED_POLISHED_BLACKSTONE_BRICKS = register(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS, ItemGroup.BUILDING_BLOCKS);
        RESPAWN_ANCHOR = register(Blocks.RESPAWN_ANCHOR, ItemGroup.DECORATIONS);
        CANDLE = register(Blocks.CANDLE, ItemGroup.DECORATIONS);
        WHITE_CANDLE = register(Blocks.WHITE_CANDLE, ItemGroup.DECORATIONS);
        ORANGE_CANDLE = register(Blocks.ORANGE_CANDLE, ItemGroup.DECORATIONS);
        MAGENTA_CANDLE = register(Blocks.MAGENTA_CANDLE, ItemGroup.DECORATIONS);
        LIGHT_BLUE_CANDLE = register(Blocks.LIGHT_BLUE_CANDLE, ItemGroup.DECORATIONS);
        YELLOW_CANDLE = register(Blocks.YELLOW_CANDLE, ItemGroup.DECORATIONS);
        LIME_CANDLE = register(Blocks.LIME_CANDLE, ItemGroup.DECORATIONS);
        PINK_CANDLE = register(Blocks.PINK_CANDLE, ItemGroup.DECORATIONS);
        GRAY_CANDLE = register(Blocks.GRAY_CANDLE, ItemGroup.DECORATIONS);
        LIGHT_GRAY_CANDLE = register(Blocks.LIGHT_GRAY_CANDLE, ItemGroup.DECORATIONS);
        CYAN_CANDLE = register(Blocks.CYAN_CANDLE, ItemGroup.DECORATIONS);
        PURPLE_CANDLE = register(Blocks.PURPLE_CANDLE, ItemGroup.DECORATIONS);
        BLUE_CANDLE = register(Blocks.BLUE_CANDLE, ItemGroup.DECORATIONS);
        BROWN_CANDLE = register(Blocks.BROWN_CANDLE, ItemGroup.DECORATIONS);
        GREEN_CANDLE = register(Blocks.GREEN_CANDLE, ItemGroup.DECORATIONS);
        RED_CANDLE = register(Blocks.RED_CANDLE, ItemGroup.DECORATIONS);
        BLACK_CANDLE = register(Blocks.BLACK_CANDLE, ItemGroup.DECORATIONS);
        SMALL_AMETHYST_BUD = register(Blocks.SMALL_AMETHYST_BUD, ItemGroup.DECORATIONS);
        MEDIUM_AMETHYST_BUD = register(Blocks.MEDIUM_AMETHYST_BUD, ItemGroup.DECORATIONS);
        LARGE_AMETHYST_BUD = register(Blocks.LARGE_AMETHYST_BUD, ItemGroup.DECORATIONS);
        AMETHYST_CLUSTER = register(Blocks.AMETHYST_CLUSTER, ItemGroup.DECORATIONS);
        POINTED_DRIPSTONE = register(Blocks.POINTED_DRIPSTONE, ItemGroup.DECORATIONS);
    }
}
